grf{
    grfid: "ZM\08\02";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESCRIPTION);
    version: 10;
    min_compatible_version: 1;
//Purchase Cost Parameter
    param {
        param_purchase_cost {
            type: int;
            name: string(STR_PARAM_PURCHASE_COST);
            desc: string(STR_PARAM_PURCHASE_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Running Cost Parameter
     param {
        param_running_cost {
            type: int;
            name: string(STR_PARAM_RUNNING_COST);
            desc: string(STR_PARAM_RUNNING_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Carry Capacity Parameter
//Get this working for the next update!
    param {
                param_capacities {
                        type: int;
                        name: string(STR_PARAM_NAME_CAPACITY);
                        desc: string(STR_PARAM_DESC_CAPACITY);
                        min_value: 0;
                        max_value: 1;
                        def_value: 0;
                        names: {
                                                0: string(STR_PARAM_REAL_CAPACITY);
                                                1: string(STR_PARAM_NORMAL_REDUCED);
                        };
                }
        }
}


//Carry Capacity Variables
if (param_capacities == 0) {
    param_capacity_mod = 0;
}

if (param_capacities == 1) {
    param_capacity_mod = 2;
}

railtypetable {
    RAIL, METRO: [MTRO, SAA4, SAA3, "3RDR", SAAZ, "3RDC", SAAE, ELRL], THIRDRAIL_MAINLINE: [SAA3, "3RDR", SAAZ, "3RDC", MTRO, SAAE, ELRL], ELRL
}

cargotable {
PASS, COAL, MAIL, OIL_, LVST, EOIL, COKE, VBOD, SULP, SASH, MNO2, BOOM, IRON, QLME, PHOS, VPTS, SLAG, PIPE, CASS, NUTS, METL, GOOD, GRAI, WOOD, IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, FRUT, MAIZ, CORE, WATR, DIAM, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BEER, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, DYES, ENSP, FERT, FICR, FISH, FMSP, FRVG, GLAS, GRVL, JAVA, LIME, MILK, MNSP, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, TOUR, VEHI, WDPR, WOOL, URAN, YETI, YETY, BEAN, NITR
}

//Basecost Paramater Variables
basecost {
 PR_BUILD_VEHICLE_TRAIN: 1 + param_purchase_cost - 4;
 PR_BUILD_VEHICLE_WAGON: 3 + param_purchase_cost - 4;
 PR_RUNNING_TRAIN_STEAM: 4 + param_running_cost - 4;
 PR_RUNNING_TRAIN_DIESEL: 3 + param_running_cost - 4;
 PR_RUNNING_TRAIN_ELECTRIC: 2 + param_running_cost - 4;
}

// Fix depot view
traininfo_y_offset = 2;
train_width_32_px = 1;

// Purchase Sprite
template template_purchase(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -60, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}


// 4 Template
template template_4(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -8,        -15]
    [ x+32,     y,        33,        16,        0,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -12,        -15]
}

template template_4_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -20]
    [ x+98,     y,        22,        20,        -8,        -15]
    [ x+121,    y,        33,        16,        0,        -12]
    [ x+155,    y,        22,        20,        -4,            -11]
    
    [ x,        y,        8,        24,        -3,            -13]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -12,        -15]
}

// 5 Template
template template_5(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -10,        -14]
}

// 6 Template
template template_6(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -17]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
}

template template_6_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
    
    [ x,        y,        8,        24,        -3,            -17]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

//7 Template
template template_7(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -15]
    [ x+9,      y,        22,        20,        -14,        -12]
    [ x+32,     y,        33,        16,        -12,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -6,        -12]
}

//7 Template Reversed
template template_7_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89 , y, 8 , 24,  -3, -15]
    [ x+98 , y, 22, 20, -14, -12]
    [ x+121, y, 33, 16, -12, -12]
    [ x+155, y, 22, 20,  -4, -11]

    [ x    , y, 8 , 24,  -3, -13]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 33, 16, -16, -12]
    [ x+66 , y, 22, 20,  -6, -12]
}

// 8 Template
template template_8(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]
}

template template_8_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]

    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

spriteset(spriteset_MU_purchase,   "gfx/MU_Carriage.png") {template_purchase(7, 21)}
spriteset(spriteset_MU_trailer,   "gfx/MU_Carriage.png") {template_8(7, 89)}

//Vehicle
item (FEAT_TRAINS, Item_MU_Trailer, 0) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        track_type:                        THIRDRAIL_MAINLINE;
		running_cost_base: RUNNING_COST_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;

        name:                            string(STR_MU_TRAILER);
        introduction_date:                date(1890,1,1);
        model_life:                        VEHICLE_NEVER_EXPIRES;
        length:                            8;

        weight:                         0 ton;
        speed:                            0 mph;
		power:                            0 hp;
        cost_factor:                     100;
        running_cost_factor:             10;

        refittable_cargo_classes:        bitmask();
        default_cargo_type:                PASS;
        cargo_capacity:                    100;
        loading_speed: 30;

    }
    graphics {
        default:                        spriteset_MU_trailer;
        purchase:                        spriteset_MU_purchase;
        additional_text: string(STR_MU_TRAILER_INFO);

}
}

switch(FEAT_TRAINS, SELF, sw_Comert1965_attach, vehicle_type_id){
    Item_Comert1965_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Comert1965_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Comert1965_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Comert1965_Silver
spriteset(spriteset_Comert1965_Silver_Purchase,   "gfx/Comert1965_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_Comert1965_Silver_Lead,   "gfx/Comert1965_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comert1965_Silver_Rear,   "gfx/Comert1965_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comert1965_Silver_Trailer,   "gfx/Comert1965_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comert1965_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comert1965_Silver_Rear;
    spriteset_Comert1965_Silver_Lead;
}

item(FEAT_TRAINS, Item_Comert1965_Silver, 1601) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMERT1965);
        introduction_date:                date(1965,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        23 ton;
        speed:                            100 km/h;
        power:                            500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             26;
        cargo_capacity:                  100/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comert1965_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comert1965_Silver_last;
        can_attach_wagon: sw_Comert1965_attach;
        purchase: spriteset_Comert1965_Silver_Purchase;
        additional_text: string(STR_INFO_COMERT1965);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of ITEM_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comert1965_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (100/param_capacity_mod);
        power:                            250;
		weight:                        23;
		running_cost_factor:             48;
    }
}

//Comert1965_Liv1
spriteset(spriteset_Comert1965_Liv1_Purchase,   "gfx/Comert1965_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Comert1965_Liv1_Lead,   "gfx/Comert1965_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comert1965_Liv1_Rear,   "gfx/Comert1965_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comert1965_Liv1_Trailer,   "gfx/Comert1965_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comert1965_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comert1965_Liv1_Rear;
    spriteset_Comert1965_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Comert1965_Liv1, 1602) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMERT1965);
        introduction_date:                date(1965,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        23 ton;
        speed:                            100 km/h;
        power:                            500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             26;
        cargo_capacity:                  100/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comert1965_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comert1965_Liv1_last;
        can_attach_wagon: sw_Comert1965_attach;
        purchase: spriteset_Comert1965_Liv1_Purchase;
        additional_text: string(STR_INFO_COMERT1965);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of ITEM_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comert1965_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (100/param_capacity_mod);
        power:                            250;
		weight:                        23;
		running_cost_factor:             48;
    }
}

//Comert1965_Liv2
spriteset(spriteset_Comert1965_Liv2_Purchase,   "gfx/Comert1965_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Comert1965_Liv2_Lead,   "gfx/Comert1965_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comert1965_Liv2_Rear,   "gfx/Comert1965_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comert1965_Liv2_Trailer,   "gfx/Comert1965_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comert1965_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comert1965_Liv2_Rear;
    spriteset_Comert1965_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Comert1965_Liv2, 1603) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMERT1965);
        introduction_date:                date(1965,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        23 ton;
        speed:                            100 km/h;
        power:                            500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             26;
        cargo_capacity:                  100/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comert1965_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comert1965_Liv2_last;
        can_attach_wagon: sw_Comert1965_attach;
        purchase: spriteset_Comert1965_Liv2_Purchase;
        additional_text: string(STR_INFO_COMERT1965);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of ITEM_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comert1965_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (100/param_capacity_mod);
        power:                            250;
		weight:                        23;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Tait_attach, vehicle_type_id){
    Item_Tait_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Tait_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Tait_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Tait_Liv1
spriteset(spriteset_Tait_Liv1_purchase,   "gfx/Tait_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Tait_Liv1_Motor_lead,   "gfx/Tait_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Tait_Liv1_Motor_rear,   "gfx/Tait_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Tait_Liv1_DrivingTrailer_lead,   "gfx/Tait_Liv1.png") {template_8(187, 39)}
spriteset(spriteset_Tait_Liv1_DrivingTrailer_rear,   "gfx/Tait_Liv1.png") {template_8(187, 64)}
spriteset(spriteset_Tait_Liv1_Trailer,   "gfx/Tait_Liv1.png") {template_8(7, 89)}
spriteset(spriteset_Tait_Liv1_NonControlMotor,   "gfx/Tait_Liv1.png") {template_8(187, 89)}
spriteset(spriteset_Tait_Liv1_NonControlMotor_r,   "gfx/Tait_Liv1.png") {template_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Tait_Liv1_NonControlMotor_r;
    return spriteset_Tait_Liv1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Tait_Liv1_NonControlMotor;
    return spriteset_Tait_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv1_NonControlMotor_r;
    return spriteset_Tait_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv1_Trailer;
    return spriteset_Tait_Liv1_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Tait_Liv1_NonControlMotor;
    return spriteset_Tait_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv1_pantocheck_at_1_r;
    return sw_Tait_Liv1_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Tait_Liv1_Trailer;
    return sw_Tait_Liv1_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv1_pantocheck_at_2_r;
    return sw_Tait_Liv1_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Tait_Liv1_Trailer;
    3 : sw_Tait_Liv1_pantocheck_at_1_r;
    4 : sw_Tait_Liv1_sidecheck_4_r;
    5 : sw_Tait_Liv1_pantocheck_at_2_r;
    6 .. 7 : sw_Tait_Liv1_sidecheck_6_r;
    return sw_Tait_Liv1_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Tait_Liv1_NonControlMotor_r;
    return spriteset_Tait_Liv1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Tait_Liv1_NonControlMotor;
    return spriteset_Tait_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv1_NonControlMotor_r;
    return spriteset_Tait_Liv1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Tait_Liv1_NonControlMotor;
    return spriteset_Tait_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv1_pantocheck_at_1;
    return sw_Tait_Liv1_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv1_pantocheck_at_1;
    return spriteset_Tait_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv1_pantocheck_at_2;
    return sw_Tait_Liv1_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Tait_Liv1_Trailer;
    3 : sw_Tait_Liv1_pantocheck_at_1;
    4 : sw_Tait_Liv1_sidecheck_4;
    5 : sw_Tait_Liv1_pantocheck_at_2;
    6 .. 7 : sw_Tait_Liv1_sidecheck_6;
    return sw_Tait_Liv1_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Tait_Liv1_Motor_lead; //Panto
    return spriteset_Tait_Liv1_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_panto_direction_r, vehicle_is_flipped){
    0 : sw_Tait_Liv1_panto_direction_r_pos;        //Front panto
    return spriteset_Tait_Liv1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Tait_Liv1_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Tait_Liv1_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_frontcheck_r, position_in_vehid_chain){
    0: sw_Tait_Liv1_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Tait_Liv1_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_panto_direction, vehicle_is_flipped){
    0 : spriteset_Tait_Liv1_Motor_lead;        //Front panto
    return spriteset_Tait_Liv1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Tait_Liv1_panto_direction;        //Not flipped, give Panto
    return spriteset_Tait_Liv1_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv1_frontcheck, position_in_vehid_chain){
    0: sw_Tait_Liv1_panto_direction; //We need a pantograph, guaranteed
    return sw_Tait_Liv1_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Tait_Liv1_directioncheck, vehicle_is_reversed){
    0: sw_Tait_Liv1_frontcheck; //We are going forwards
    return sw_Tait_Liv1_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Tait_Liv1_revcheck, vehicle_is_reversed){
    0 : sw_Tait_Liv1_lencheck;
    return sw_Tait_Liv1_lencheck_r;
}

item(FEAT_TRAINS, Item_Tait_Liv1, 5100) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TAIT);
        introduction_date:                date(1919,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            80 km/h;
        power:                            282 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             180;
        cargo_capacity:                  72/param_capacity_mod;
        loading_speed: 5;

        variant_group: Item_Tait_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Tait_Liv1_directioncheck;
        can_attach_wagon: sw_Tait_attach ;
        purchase: spriteset_Tait_Liv1_purchase;
        additional_text: string(STR_INFO_TAIT);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Tait_Liv1_revcheck ;
        length                      : 8;
        cargo_capacity              : (72/param_capacity_mod) ;
        power                       : 141 ;
		weight:                        35;
		running_cost_factor:             45;

    }
}

//Tait_Liv2
spriteset(spriteset_Tait_Liv2_purchase,   "gfx/Tait_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Tait_Liv2_Motor_lead,   "gfx/Tait_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Tait_Liv2_Motor_rear,   "gfx/Tait_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Tait_Liv2_DrivingTrailer_lead,   "gfx/Tait_Liv2.png") {template_8(187, 39)}
spriteset(spriteset_Tait_Liv2_DrivingTrailer_rear,   "gfx/Tait_Liv2.png") {template_8(187, 64)}
spriteset(spriteset_Tait_Liv2_Trailer,   "gfx/Tait_Liv2.png") {template_8(7, 89)}
spriteset(spriteset_Tait_Liv2_NonControlMotor,   "gfx/Tait_Liv2.png") {template_8(187, 89)}
spriteset(spriteset_Tait_Liv2_NonControlMotor_r,   "gfx/Tait_Liv2.png") {template_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Tait_Liv2_NonControlMotor_r;
    return spriteset_Tait_Liv2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Tait_Liv2_NonControlMotor;
    return spriteset_Tait_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv2_NonControlMotor_r;
    return spriteset_Tait_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv2_Trailer;
    return spriteset_Tait_Liv2_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Tait_Liv2_NonControlMotor;
    return spriteset_Tait_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv2_pantocheck_at_1_r;
    return sw_Tait_Liv2_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Tait_Liv2_Trailer;
    return sw_Tait_Liv2_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv2_pantocheck_at_2_r;
    return sw_Tait_Liv2_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Tait_Liv2_Trailer;
    3 : sw_Tait_Liv2_pantocheck_at_1_r;
    4 : sw_Tait_Liv2_sidecheck_4_r;
    5 : sw_Tait_Liv2_pantocheck_at_2_r;
    6 .. 7 : sw_Tait_Liv2_sidecheck_6_r;
    return sw_Tait_Liv2_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Tait_Liv2_NonControlMotor_r;
    return spriteset_Tait_Liv2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Tait_Liv2_NonControlMotor;
    return spriteset_Tait_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv2_NonControlMotor_r;
    return spriteset_Tait_Liv2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Tait_Liv2_NonControlMotor;
    return spriteset_Tait_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv2_pantocheck_at_1;
    return sw_Tait_Liv2_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv2_pantocheck_at_1;
    return spriteset_Tait_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv2_pantocheck_at_2;
    return sw_Tait_Liv2_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Tait_Liv2_Trailer;
    3 : sw_Tait_Liv2_pantocheck_at_1;
    4 : sw_Tait_Liv2_sidecheck_4;
    5 : sw_Tait_Liv2_pantocheck_at_2;
    6 .. 7 : sw_Tait_Liv2_sidecheck_6;
    return sw_Tait_Liv2_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Tait_Liv2_Motor_lead; //Panto
    return spriteset_Tait_Liv2_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_panto_direction_r, vehicle_is_flipped){
    0 : sw_Tait_Liv2_panto_direction_r_pos;        //Front panto
    return spriteset_Tait_Liv2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Tait_Liv2_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Tait_Liv2_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_frontcheck_r, position_in_vehid_chain){
    0: sw_Tait_Liv2_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Tait_Liv2_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_panto_direction, vehicle_is_flipped){
    0 : spriteset_Tait_Liv2_Motor_lead;        //Front panto
    return spriteset_Tait_Liv2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Tait_Liv2_panto_direction;        //Not flipped, give Panto
    return spriteset_Tait_Liv2_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv2_frontcheck, position_in_vehid_chain){
    0: sw_Tait_Liv2_panto_direction; //We need a pantograph, guaranteed
    return sw_Tait_Liv2_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Tait_Liv2_directioncheck, vehicle_is_reversed){
    0: sw_Tait_Liv2_frontcheck; //We are going forwards
    return sw_Tait_Liv2_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Tait_Liv2_revcheck, vehicle_is_reversed){
    0 : sw_Tait_Liv2_lencheck;
    return sw_Tait_Liv2_lencheck_r;
}

item(FEAT_TRAINS, Item_Tait_Liv2, 5101) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TAIT);
        introduction_date:                date(1919,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            80 km/h;
        power:                            282 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             180;
        cargo_capacity:                  72/param_capacity_mod;
        loading_speed: 5;

        variant_group: Item_Tait_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Tait_Liv2_directioncheck;
        can_attach_wagon: sw_Tait_attach ;
        purchase: spriteset_Tait_Liv2_purchase;
        additional_text: string(STR_INFO_TAIT);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Tait_Liv2_revcheck ;
        length                      : 8;
        cargo_capacity              : (72/param_capacity_mod) ;
        power                       : 141 ;
		weight:                        35;
		running_cost_factor:             45;

    }
}

//Tait_Liv3
spriteset(spriteset_Tait_Liv3_purchase,   "gfx/Tait_Liv3.png") {template_purchase(7, 21)}
spriteset(spriteset_Tait_Liv3_Motor_lead,   "gfx/Tait_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Tait_Liv3_Motor_rear,   "gfx/Tait_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Tait_Liv3_DrivingTrailer_lead,   "gfx/Tait_Liv3.png") {template_8(187, 39)}
spriteset(spriteset_Tait_Liv3_DrivingTrailer_rear,   "gfx/Tait_Liv3.png") {template_8(187, 64)}
spriteset(spriteset_Tait_Liv3_Trailer,   "gfx/Tait_Liv3.png") {template_8(7, 89)}
spriteset(spriteset_Tait_Liv3_NonControlMotor,   "gfx/Tait_Liv3.png") {template_8(187, 89)}
spriteset(spriteset_Tait_Liv3_NonControlMotor_r,   "gfx/Tait_Liv3.png") {template_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Tait_Liv3_NonControlMotor_r;
    return spriteset_Tait_Liv3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Tait_Liv3_NonControlMotor;
    return spriteset_Tait_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv3_NonControlMotor_r;
    return spriteset_Tait_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv3_Trailer;
    return spriteset_Tait_Liv3_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Tait_Liv3_NonControlMotor;
    return spriteset_Tait_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv3_pantocheck_at_1_r;
    return sw_Tait_Liv3_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Tait_Liv3_Trailer;
    return sw_Tait_Liv3_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv3_pantocheck_at_2_r;
    return sw_Tait_Liv3_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Tait_Liv3_Trailer;
    3 : sw_Tait_Liv3_pantocheck_at_1_r;
    4 : sw_Tait_Liv3_sidecheck_4_r;
    5 : sw_Tait_Liv3_pantocheck_at_2_r;
    6 .. 7 : sw_Tait_Liv3_sidecheck_6_r;
    return sw_Tait_Liv3_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Tait_Liv3_NonControlMotor_r;
    return spriteset_Tait_Liv3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Tait_Liv3_NonControlMotor;
    return spriteset_Tait_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Tait_Liv3_NonControlMotor_r;
    return spriteset_Tait_Liv3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Tait_Liv3_NonControlMotor;
    return spriteset_Tait_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv3_pantocheck_at_1;
    return sw_Tait_Liv3_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv3_pantocheck_at_1;
    return spriteset_Tait_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Tait_Liv3_pantocheck_at_2;
    return sw_Tait_Liv3_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Tait_Liv3_Trailer;
    3 : sw_Tait_Liv3_pantocheck_at_1;
    4 : sw_Tait_Liv3_sidecheck_4;
    5 : sw_Tait_Liv3_pantocheck_at_2;
    6 .. 7 : sw_Tait_Liv3_sidecheck_6;
    return sw_Tait_Liv3_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Tait_Liv3_Motor_lead; //Panto
    return spriteset_Tait_Liv3_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_panto_direction_r, vehicle_is_flipped){
    0 : sw_Tait_Liv3_panto_direction_r_pos;        //Front panto
    return spriteset_Tait_Liv3_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Tait_Liv3_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Tait_Liv3_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_frontcheck_r, position_in_vehid_chain){
    0: sw_Tait_Liv3_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Tait_Liv3_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_panto_direction, vehicle_is_flipped){
    0 : spriteset_Tait_Liv3_Motor_lead;        //Front panto
    return spriteset_Tait_Liv3_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Tait_Liv3_panto_direction;        //Not flipped, give Panto
    return spriteset_Tait_Liv3_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Tait_Liv3_frontcheck, position_in_vehid_chain){
    0: sw_Tait_Liv3_panto_direction; //We need a pantograph, guaranteed
    return sw_Tait_Liv3_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Tait_Liv3_directioncheck, vehicle_is_reversed){
    0: sw_Tait_Liv3_frontcheck; //We are going forwards
    return sw_Tait_Liv3_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Tait_Liv3_revcheck, vehicle_is_reversed){
    0 : sw_Tait_Liv3_lencheck;
    return sw_Tait_Liv3_lencheck_r;
}

item(FEAT_TRAINS, Item_Tait_Liv3, 5102) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TAIT);
        introduction_date:                date(1919,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            80 km/h;
        power:                            282 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             180;
        cargo_capacity:                  72/param_capacity_mod;
        loading_speed: 5;

        variant_group: Item_Tait_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Tait_Liv3_directioncheck;
        can_attach_wagon: sw_Tait_attach ;
        purchase: spriteset_Tait_Liv3_purchase;
        additional_text: string(STR_INFO_TAIT);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Tait_Liv3_revcheck ;
        length                      : 8;
        cargo_capacity              : (72/param_capacity_mod) ;
        power                       : 141 ;
		weight:                        35;
		running_cost_factor:             45;

    }
}

switch(FEAT_TRAINS, SELF, sw_Harris_attach, vehicle_type_id){
	Item_Harris_2Door_VR     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Harris_3Door_VR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Harris_2Door_VR
spriteset(spriteset_Harris_2Door_VR_Purchase,   "gfx/Harris_VR.png") {template_purchase(7, 21)}
spriteset(spriteset_Harris_2Door_VR_Lead,   "gfx/Harris_VR.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Harris_2Door_VR_Rear,   "gfx/Harris_VR.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Harris_2Door_VR_Trailer,   "gfx/Harris_VR.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Harris_2Door_VR_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Harris_2Door_VR_Rear;
    spriteset_Harris_2Door_VR_Lead;
}

item(FEAT_TRAINS, Item_Harris_2Door_VR, 5501) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HARRIS_2DOOR);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            115 km/h;
        power:                            808 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  101/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Harris_2Door_VR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Harris_2Door_VR_last;
        can_attach_wagon: sw_Harris_attach;
        purchase: spriteset_Harris_2Door_VR_Purchase;
        additional_text: string(STR_INFO_HARRIS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Harris_2Door_VR_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (101/param_capacity_mod) ;
        power                       : 404 ;
		weight:                        46;
		running_cost_factor: 45;
    }
}

//Harris_3Door_VR
spriteset(spriteset_Harris_3Door_VR_Purchase,   "gfx/Harris_VR.png") {template_purchase(367, 21)}
spriteset(spriteset_Harris_3Door_VR_Lead,   "gfx/Harris_VR.png") {template_8(367, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Harris_3Door_VR_Rear,   "gfx/Harris_VR.png") {template_8(367, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Harris_3Door_VR_Trailer,   "gfx/Harris_VR.png") {template_8(367, 89)}

switch(FEAT_TRAINS, SELF, sw_Harris_3Door_VR_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Harris_3Door_VR_Rear;
    spriteset_Harris_3Door_VR_Lead;
}

item(FEAT_TRAINS, Item_Harris_3Door_VR, 5521) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HARRIS_3DOOR);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            115 km/h;
        power:                            808 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  101/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Harris_3Door_VR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Harris_3Door_VR_last;
        can_attach_wagon: sw_Harris_attach;
        purchase: spriteset_Harris_3Door_VR_Purchase;
        additional_text: string(STR_INFO_HARRIS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Harris_3Door_VR_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (101/param_capacity_mod) ;
        power                       : 404 ;
		weight:                        46;
		running_cost_factor: 45;
    }
}

switch(FEAT_TRAINS, SELF, sw_Hitachi_attach, vehicle_type_id){
    Item_Hitachi_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Hitachi_MTA    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Hitachi_Connex    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Hitachi_MTM    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Hitachi_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Hitachi_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Hitachi_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Hitachi_Silver
spriteset(spriteset_Hitachi_Silver_Purchase,   "gfx/Hitachi_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_Hitachi_Silver_Lead,   "gfx/Hitachi_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_Silver_Rear,   "gfx/Hitachi_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_Silver_Trailer,   "gfx/Hitachi_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_Silver_Rear;
    spriteset_Hitachi_Silver_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_Silver, 5701) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI);
        introduction_date:                date(1972,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            115 km/h;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_Silver_last;
        can_attach_wagon: sw_Hitachi_attach;
        purchase: spriteset_Hitachi_Silver_Purchase;
        additional_text: string(STR_INFO_HITACHI);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (115/param_capacity_mod) ;
        power                       : 400 ;
		weight:                        41;
		running_cost_factor:             43;

    }
}

//Hitachi_MTA
spriteset(spriteset_Hitachi_MTA_Purchase,   "gfx/Hitachi_MTA.png") {template_purchase(7, 21)}
spriteset(spriteset_Hitachi_MTA_Lead,   "gfx/Hitachi_MTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_MTA_Rear,   "gfx/Hitachi_MTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_MTA_Trailer,   "gfx/Hitachi_MTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_MTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_MTA_Rear;
    spriteset_Hitachi_MTA_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_MTA, 5702) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI);
        introduction_date:                date(1972,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            115 km/h;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_MTA_last;
        can_attach_wagon: sw_Hitachi_attach;
        purchase: spriteset_Hitachi_MTA_Purchase;
        additional_text: string(STR_INFO_HITACHI);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_MTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (115/param_capacity_mod) ;
        power                       : 400 ;
		weight:                        41;
		running_cost_factor:             43;

    }
}

//Hitachi_Connex
spriteset(spriteset_Hitachi_Connex_Purchase,   "gfx/Hitachi_Connex.png") {template_purchase(7, 21)}
spriteset(spriteset_Hitachi_Connex_Lead,   "gfx/Hitachi_Connex.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_Connex_Rear,   "gfx/Hitachi_Connex.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_Connex_Trailer,   "gfx/Hitachi_Connex.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_Connex_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_Connex_Rear;
    spriteset_Hitachi_Connex_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_Connex, 5703) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI);
        introduction_date:                date(1972,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            115 km/h;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_Connex_last;
        can_attach_wagon: sw_Hitachi_attach;
        purchase: spriteset_Hitachi_Connex_Purchase;
        additional_text: string(STR_INFO_HITACHI);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_Connex_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (115/param_capacity_mod) ;
        power                       : 400 ;
		weight:                        41;
		running_cost_factor:             43;

    }
}

//Hitachi_MTM
spriteset(spriteset_Hitachi_MTM_Purchase,   "gfx/Hitachi_MTM.png") {template_purchase(7, 21)}
spriteset(spriteset_Hitachi_MTM_Lead,   "gfx/Hitachi_MTM.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_MTM_Rear,   "gfx/Hitachi_MTM.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_MTM_Trailer,   "gfx/Hitachi_MTM.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_MTM_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_MTM_Rear;
    spriteset_Hitachi_MTM_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_MTM, 5704) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI);
        introduction_date:                date(1972,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            115 km/h;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_MTM_last;
        can_attach_wagon: sw_Hitachi_attach;
        purchase: spriteset_Hitachi_MTM_Purchase;
        additional_text: string(STR_INFO_HITACHI);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_MTM_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (115/param_capacity_mod) ;
        power                       : 400 ;
		weight:                        41;
		running_cost_factor:             43;

    }
}

//Hitachi_Liv1
spriteset(spriteset_Hitachi_Liv1_Purchase,   "gfx/Hitachi_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Hitachi_Liv1_Lead,   "gfx/Hitachi_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_Liv1_Rear,   "gfx/Hitachi_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_Liv1_Trailer,   "gfx/Hitachi_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_Liv1_Rear;
    spriteset_Hitachi_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_Liv1, 5705) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI);
        introduction_date:                date(1972,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            115 km/h;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_Liv1_last;
        can_attach_wagon: sw_Hitachi_attach;
        purchase: spriteset_Hitachi_Liv1_Purchase;
        additional_text: string(STR_INFO_HITACHI);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (115/param_capacity_mod) ;
        power                       : 400 ;
		weight:                        41;
		running_cost_factor:             43;

    }
}

//Hitachi_Liv2
spriteset(spriteset_Hitachi_Liv2_Purchase,   "gfx/Hitachi_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Hitachi_Liv2_Lead,   "gfx/Hitachi_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_Liv2_Rear,   "gfx/Hitachi_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_Liv2_Trailer,   "gfx/Hitachi_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_Liv2_Rear;
    spriteset_Hitachi_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_Liv2, 5706) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI);
        introduction_date:                date(1972,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            115 km/h;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_Liv2_last;
        can_attach_wagon: sw_Hitachi_attach;
        purchase: spriteset_Hitachi_Liv2_Purchase;
        additional_text: string(STR_INFO_HITACHI);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (115/param_capacity_mod) ;
        power                       : 400 ;
		weight:                        41;
		running_cost_factor:             43;

    }
}

//Hitachi_Liv3
spriteset(spriteset_Hitachi_Liv3_Purchase,   "gfx/Hitachi_Liv3.png") {template_purchase(7, 21)}
spriteset(spriteset_Hitachi_Liv3_Lead,   "gfx/Hitachi_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_Liv3_Rear,   "gfx/Hitachi_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_Liv3_Trailer,   "gfx/Hitachi_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_Liv3_Rear;
    spriteset_Hitachi_Liv3_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_Liv3, 5707) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI);
        introduction_date:                date(1972,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            115 km/h;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_Liv3_last;
        can_attach_wagon: sw_Hitachi_attach;
        purchase: spriteset_Hitachi_Liv3_Purchase;
        additional_text: string(STR_INFO_HITACHI);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (115/param_capacity_mod) ;
        power                       : 400 ;
		weight:                        41;
		running_cost_factor:             43;

    }
}

switch(FEAT_TRAINS, SELF, sw_Comeng_SMU_attach, vehicle_type_id){
    Item_Comeng_SMU_VR    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Comeng_SMU_MTA    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Comeng_SMU_Mtrain    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Comeng_SMU_Connex    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Comeng_SMU_MTM    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Comeng_SMU_VR
spriteset(spriteset_Comeng_SMU_VR_Purchase,   "gfx/Comeng_SMU_VR.png") {template_purchase(7, 21)}
spriteset(spriteset_Comeng_SMU_VR_Lead,   "gfx/Comeng_SMU_VR.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comeng_SMU_VR_Rear,   "gfx/Comeng_SMU_VR.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comeng_SMU_VR_Trailer,   "gfx/Comeng_SMU_VR.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comeng_SMU_VR_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comeng_SMU_VR_Rear;
    spriteset_Comeng_SMU_VR_Lead;
}

item(FEAT_TRAINS, Item_Comeng_SMU_VR, 5801) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMENG_SMU);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        47 ton;
        speed:                            115 km/h;
        power:                            885 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  127/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comeng_SMU_VR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comeng_SMU_VR_last;
        can_attach_wagon: sw_Comeng_SMU_attach;
        purchase: spriteset_Comeng_SMU_VR_Purchase;
        additional_text: string(STR_INFO_COMENG_SMU);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comeng_SMU_VR_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (127/param_capacity_mod) ;
        power                       : 442 ;
		weight:                        47;
		running_cost_factor:             48;
    }
}

//Comeng_SMU_MTA
spriteset(spriteset_Comeng_SMU_MTA_Purchase,   "gfx/Comeng_SMU_MTA.png") {template_purchase(7, 21)}
spriteset(spriteset_Comeng_SMU_MTA_Lead,   "gfx/Comeng_SMU_MTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comeng_SMU_MTA_Rear,   "gfx/Comeng_SMU_MTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comeng_SMU_MTA_Trailer,   "gfx/Comeng_SMU_MTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comeng_SMU_MTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comeng_SMU_MTA_Rear;
    spriteset_Comeng_SMU_MTA_Lead;
}

item(FEAT_TRAINS, Item_Comeng_SMU_MTA, 5802) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMENG_SMU);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        47 ton;
        speed:                            115 km/h;
        power:                            885 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  127/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comeng_SMU_VR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comeng_SMU_MTA_last;
        can_attach_wagon: sw_Comeng_SMU_attach;
        purchase: spriteset_Comeng_SMU_MTA_Purchase;
        additional_text: string(STR_INFO_COMENG_SMU);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comeng_SMU_MTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (127/param_capacity_mod) ;
        power                       : 442 ;
		weight:                        47;
		running_cost_factor:             48;
    }
}

//Comeng_SMU_Mtrain
spriteset(spriteset_Comeng_SMU_Mtrain_Purchase,   "gfx/Comeng_SMU_Mtrain.png") {template_purchase(7, 21)}
spriteset(spriteset_Comeng_SMU_Mtrain_Lead,   "gfx/Comeng_SMU_Mtrain.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comeng_SMU_Mtrain_Rear,   "gfx/Comeng_SMU_Mtrain.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comeng_SMU_Mtrain_Trailer,   "gfx/Comeng_SMU_Mtrain.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comeng_SMU_Mtrain_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comeng_SMU_Mtrain_Rear;
    spriteset_Comeng_SMU_Mtrain_Lead;
}

item(FEAT_TRAINS, Item_Comeng_SMU_Mtrain, 5803) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMENG_SMU);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        47 ton;
        speed:                            115 km/h;
        power:                            885 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  127/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comeng_SMU_VR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comeng_SMU_Mtrain_last;
        can_attach_wagon: sw_Comeng_SMU_attach;
        purchase: spriteset_Comeng_SMU_Mtrain_Purchase;
        additional_text: string(STR_INFO_COMENG_SMU);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comeng_SMU_Mtrain_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (127/param_capacity_mod) ;
        power                       : 442 ;
		weight:                        47;
		running_cost_factor:             48;
    }
}

//Comeng_SMU_Connex
spriteset(spriteset_Comeng_SMU_Connex_Purchase,   "gfx/Comeng_SMU_Connex.png") {template_purchase(7, 21)}
spriteset(spriteset_Comeng_SMU_Connex_Lead,   "gfx/Comeng_SMU_Connex.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comeng_SMU_Connex_Rear,   "gfx/Comeng_SMU_Connex.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comeng_SMU_Connex_Trailer,   "gfx/Comeng_SMU_Connex.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comeng_SMU_Connex_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comeng_SMU_Connex_Rear;
    spriteset_Comeng_SMU_Connex_Lead;
}

item(FEAT_TRAINS, Item_Comeng_SMU_Connex, 5804) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMENG_SMU);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        47 ton;
        speed:                            115 km/h;
        power:                            885 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  127/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comeng_SMU_VR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comeng_SMU_Connex_last;
        can_attach_wagon: sw_Comeng_SMU_attach;
        purchase: spriteset_Comeng_SMU_Connex_Purchase;
        additional_text: string(STR_INFO_COMENG_SMU);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comeng_SMU_Connex_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (127/param_capacity_mod) ;
        power                       : 442 ;
		weight:                        47;
		running_cost_factor:             48;
    }
}

//Comeng_SMU_MTM
spriteset(spriteset_Comeng_SMU_MTM_Purchase,   "gfx/Comeng_SMU_MTM.png") {template_purchase(7, 21)}
spriteset(spriteset_Comeng_SMU_MTM_Lead,   "gfx/Comeng_SMU_MTM.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Comeng_SMU_MTM_Rear,   "gfx/Comeng_SMU_MTM.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Comeng_SMU_MTM_Trailer,   "gfx/Comeng_SMU_MTM.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Comeng_SMU_MTM_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Comeng_SMU_MTM_Rear;
    spriteset_Comeng_SMU_MTM_Lead;
}

item(FEAT_TRAINS, Item_Comeng_SMU_MTM, 5805) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMENG_SMU);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        47 ton;
        speed:                            115 km/h;
        power:                            885 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  127/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Comeng_SMU_VR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Comeng_SMU_MTM_last;
        can_attach_wagon: sw_Comeng_SMU_attach;
        purchase: spriteset_Comeng_SMU_MTM_Purchase;
        additional_text: string(STR_INFO_COMENG_SMU);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Comeng_SMU_MTM_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (127/param_capacity_mod) ;
        power                       : 442 ;
		weight:                        47;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Alstom_Xtrapolis_attach, vehicle_type_id){
    Item_Alstom_Xtrapolis_Connex    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Alstom_Xtrapolis_MTM    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Alstom_Xtrapolis_Connex
spriteset(spriteset_Alstom_Xtrapolis_Connex_Purchase,   "gfx/Alstom_Xtrapolis_Connex.png") {template_purchase(7, 21)}
spriteset(spriteset_Alstom_Xtrapolis_Connex_Lead,   "gfx/Alstom_Xtrapolis_Connex.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Alstom_Xtrapolis_Connex_Rear,   "gfx/Alstom_Xtrapolis_Connex.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Alstom_Xtrapolis_Connex_Trailer,   "gfx/Alstom_Xtrapolis_Connex.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Alstom_Xtrapolis_Connex_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Alstom_Xtrapolis_Connex_Rear;
    spriteset_Alstom_Xtrapolis_Connex_Lead;
}

item(FEAT_TRAINS, Item_Alstom_Xtrapolis_Connex, 6001) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ALSTOM_XTRAPOLIS);
        introduction_date:                date(2002,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        39 ton;
        speed:                            145 km/h;
        power:                            1286 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             210;
        cargo_capacity:                  142/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Alstom_Xtrapolis_Connex;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Alstom_Xtrapolis_Connex_last;
        can_attach_wagon: sw_Alstom_Xtrapolis_attach;
        purchase: spriteset_Alstom_Xtrapolis_Connex_Purchase;
        additional_text: string(STR_INFO_ALSTOM_XTRAPOLIS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Alstom_Xtrapolis_Connex_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (142/param_capacity_mod) ;
        power                       : 643 ;
		weight:                        39;
		running_cost_factor:             53;

    }
}

//Alstom_Xtrapolis_MTM
spriteset(spriteset_Alstom_Xtrapolis_MTM_Purchase,   "gfx/Alstom_Xtrapolis_MTM.png") {template_purchase(7, 21)}
spriteset(spriteset_Alstom_Xtrapolis_MTM_Lead,   "gfx/Alstom_Xtrapolis_MTM.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Alstom_Xtrapolis_MTM_Rear,   "gfx/Alstom_Xtrapolis_MTM.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Alstom_Xtrapolis_MTM_Trailer,   "gfx/Alstom_Xtrapolis_MTM.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Alstom_Xtrapolis_MTM_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Alstom_Xtrapolis_MTM_Rear;
    spriteset_Alstom_Xtrapolis_MTM_Lead;
}

item(FEAT_TRAINS, Item_Alstom_Xtrapolis_MTM, 6002) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ALSTOM_XTRAPOLIS);
        introduction_date:                date(2002,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        39 ton;
        speed:                            145 km/h;
        power:                            1286 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             210;
        cargo_capacity:                  142/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Alstom_Xtrapolis_Connex;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Alstom_Xtrapolis_MTM_last;
        can_attach_wagon: sw_Alstom_Xtrapolis_attach;
        purchase: spriteset_Alstom_Xtrapolis_MTM_Purchase;
        additional_text: string(STR_INFO_ALSTOM_XTRAPOLIS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Alstom_Xtrapolis_MTM_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (142/param_capacity_mod) ;
        power                       : 643 ;
		weight:                        39;
		running_cost_factor:             53;

    }
}

switch(FEAT_TRAINS, SELF, sw_Siemens_Nexus_attach, vehicle_type_id){
	Item_Siemens_Nexus_MTrain1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Siemens_Nexus_MTrain2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Siemens_Nexus_MTrain3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Siemens_Nexus_Connex    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Siemens_Nexus_MTM    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Siemens_Nexus_MTrain1
spriteset(spriteset_Siemens_Nexus_MTrain1_Purchase,   "gfx/Siemens_Nexus_MTrain1.png") {template_purchase(7, 21)}
spriteset(spriteset_Siemens_Nexus_MTrain1_Lead,   "gfx/Siemens_Nexus_MTrain1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Siemens_Nexus_MTrain1_Rear,   "gfx/Siemens_Nexus_MTrain1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Siemens_Nexus_MTrain1_Trailer,   "gfx/Siemens_Nexus_MTrain1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Siemens_Nexus_MTrain1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Siemens_Nexus_MTrain1_Rear;
    spriteset_Siemens_Nexus_MTrain1_Lead;
}

item(FEAT_TRAINS, Item_Siemens_Nexus_MTrain1, 6021) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SIEMENS_NEXUS);
        introduction_date:                date(2003,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        40 ton;
        speed:                            145 km/h;
        power:                            1286 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             210;
        cargo_capacity:                  142/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Siemens_Nexus_MTrain1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Siemens_Nexus_MTrain1_last;
        can_attach_wagon: sw_Siemens_Nexus_attach;
        purchase: spriteset_Siemens_Nexus_MTrain1_Purchase;
        additional_text: string(STR_INFO_SIEMENS_NEXUS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Siemens_Nexus_MTrain1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (142/param_capacity_mod) ;
        power                       : 643 ;
		weight:                        40;
		running_cost_factor:             53;

    }
}

//Siemens_Nexus_MTrain2
spriteset(spriteset_Siemens_Nexus_MTrain2_Purchase,   "gfx/Siemens_Nexus_MTrain2.png") {template_purchase(7, 21)}
spriteset(spriteset_Siemens_Nexus_MTrain2_Lead,   "gfx/Siemens_Nexus_MTrain2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Siemens_Nexus_MTrain2_Rear,   "gfx/Siemens_Nexus_MTrain2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Siemens_Nexus_MTrain2_Trailer,   "gfx/Siemens_Nexus_MTrain2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Siemens_Nexus_MTrain2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Siemens_Nexus_MTrain2_Rear;
    spriteset_Siemens_Nexus_MTrain2_Lead;
}

item(FEAT_TRAINS, Item_Siemens_Nexus_MTrain2, 6022) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SIEMENS_NEXUS);
        introduction_date:                date(2003,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        40 ton;
        speed:                            145 km/h;
        power:                            1286 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             210;
        cargo_capacity:                  142/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Siemens_Nexus_MTrain1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Siemens_Nexus_MTrain2_last;
        can_attach_wagon: sw_Siemens_Nexus_attach;
        purchase: spriteset_Siemens_Nexus_MTrain2_Purchase;
        additional_text: string(STR_INFO_SIEMENS_NEXUS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Siemens_Nexus_MTrain2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (142/param_capacity_mod) ;
        power                       : 643 ;
		weight:                        40;
		running_cost_factor:             53;

    }
}

//Siemens_Nexus_MTrain3
spriteset(spriteset_Siemens_Nexus_MTrain3_Purchase,   "gfx/Siemens_Nexus_MTrain3.png") {template_purchase(7, 21)}
spriteset(spriteset_Siemens_Nexus_MTrain3_Lead,   "gfx/Siemens_Nexus_MTrain3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Siemens_Nexus_MTrain3_Rear,   "gfx/Siemens_Nexus_MTrain3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Siemens_Nexus_MTrain3_Trailer,   "gfx/Siemens_Nexus_MTrain3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Siemens_Nexus_MTrain3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Siemens_Nexus_MTrain3_Rear;
    spriteset_Siemens_Nexus_MTrain3_Lead;
}

item(FEAT_TRAINS, Item_Siemens_Nexus_MTrain3, 6023) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SIEMENS_NEXUS);
        introduction_date:                date(2003,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        40 ton;
        speed:                            145 km/h;
        power:                            1286 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             210;
        cargo_capacity:                  142/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Siemens_Nexus_MTrain1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Siemens_Nexus_MTrain3_last;
        can_attach_wagon: sw_Siemens_Nexus_attach;
        purchase: spriteset_Siemens_Nexus_MTrain3_Purchase;
        additional_text: string(STR_INFO_SIEMENS_NEXUS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Siemens_Nexus_MTrain3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (142/param_capacity_mod) ;
        power                       : 643 ;
		weight:                        40;
		running_cost_factor:             53;

    }
}

//Siemens_Nexus_Connex
spriteset(spriteset_Siemens_Nexus_Connex_Purchase,   "gfx/Siemens_Nexus_Connex.png") {template_purchase(7, 21)}
spriteset(spriteset_Siemens_Nexus_Connex_Lead,   "gfx/Siemens_Nexus_Connex.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Siemens_Nexus_Connex_Rear,   "gfx/Siemens_Nexus_Connex.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Siemens_Nexus_Connex_Trailer,   "gfx/Siemens_Nexus_Connex.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Siemens_Nexus_Connex_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Siemens_Nexus_Connex_Rear;
    spriteset_Siemens_Nexus_Connex_Lead;
}

item(FEAT_TRAINS, Item_Siemens_Nexus_Connex, 6024) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SIEMENS_NEXUS);
        introduction_date:                date(2003,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        40 ton;
        speed:                            145 km/h;
        power:                            1286 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             210;
        cargo_capacity:                  142/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Siemens_Nexus_MTrain1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Siemens_Nexus_Connex_last;
        can_attach_wagon: sw_Siemens_Nexus_attach;
        purchase: spriteset_Siemens_Nexus_Connex_Purchase;
        additional_text: string(STR_INFO_SIEMENS_NEXUS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Siemens_Nexus_Connex_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (142/param_capacity_mod) ;
        power                       : 643 ;
		weight:                        40;
		running_cost_factor:             53;

    }
}

//Siemens_Nexus_MTM
spriteset(spriteset_Siemens_Nexus_MTM_Purchase,   "gfx/Siemens_Nexus_MTM.png") {template_purchase(7, 21)}
spriteset(spriteset_Siemens_Nexus_MTM_Lead,   "gfx/Siemens_Nexus_MTM.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Siemens_Nexus_MTM_Rear,   "gfx/Siemens_Nexus_MTM.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Siemens_Nexus_MTM_Trailer,   "gfx/Siemens_Nexus_MTM.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Siemens_Nexus_MTM_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Siemens_Nexus_MTM_Rear;
    spriteset_Siemens_Nexus_MTM_Lead;
}

item(FEAT_TRAINS, Item_Siemens_Nexus_MTM, 6025) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SIEMENS_NEXUS);
        introduction_date:                date(2003,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        40 ton;
        speed:                            145 km/h;
        power:                            1286 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             210;
        cargo_capacity:                  142/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Siemens_Nexus_MTrain1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Siemens_Nexus_MTM_last;
        can_attach_wagon: sw_Siemens_Nexus_attach;
        purchase: spriteset_Siemens_Nexus_MTM_Purchase;
        additional_text: string(STR_INFO_SIEMENS_NEXUS);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Siemens_Nexus_MTM_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (142/param_capacity_mod) ;
        power                       : 643 ;
		weight:                        40;
		running_cost_factor:             53;

    }
}

switch(FEAT_TRAINS, SELF, sw_CRRC_HCMT_attach, vehicle_type_id){
	Item_CRRC_HCMT_MTM    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_CRRC_HCMT_JR    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_CRRC_HCMT_Knockoffhorse    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//CRRC_HCMT_MTM
spriteset(spriteset_CRRC_HCMT_MTM_Purchase,   "gfx/CRRC_HCMT_MTM.png") {template_purchase(7, 21)}
spriteset(spriteset_CRRC_HCMT_MTM_Lead,   "gfx/CRRC_HCMT_MTM.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_HCMT_MTM_Rear,   "gfx/CRRC_HCMT_MTM.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_HCMT_MTM_Trailer,   "gfx/CRRC_HCMT_MTM.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_HCMT_MTM_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_HCMT_MTM_Rear;
    spriteset_CRRC_HCMT_MTM_Lead;
}

item(FEAT_TRAINS, Item_CRRC_HCMT_MTM, 6201) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_HCMT);
        introduction_date:                date(2024,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            130 km/h;
        power:                            1500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             196;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_CRRC_HCMT_MTM;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_HCMT_MTM_last;
        can_attach_wagon: sw_CRRC_HCMT_attach;
        purchase: spriteset_CRRC_HCMT_MTM_Purchase;
        additional_text: string(STR_INFO_CRRC_HCMT);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_HCMT_MTM_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (160/param_capacity_mod) ;
        power                       : 750 ;
		weight:                        38;
		running_cost_factor:             49;
    }
}

//CRRC_HCMT_JR
spriteset(spriteset_CRRC_HCMT_JR_Purchase,   "gfx/CRRC_HCMT_JR.png") {template_purchase(7, 21)}
spriteset(spriteset_CRRC_HCMT_JR_Lead,   "gfx/CRRC_HCMT_JR.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_HCMT_JR_Rear,   "gfx/CRRC_HCMT_JR.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_HCMT_JR_Trailer,   "gfx/CRRC_HCMT_JR.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_HCMT_JR_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_HCMT_JR_Rear;
    spriteset_CRRC_HCMT_JR_Lead;
}

item(FEAT_TRAINS, Item_CRRC_HCMT_JR, 6202) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_HCMT);
        introduction_date:                date(2024,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            130 km/h;
        power:                            1500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             196;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_CRRC_HCMT_MTM;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_HCMT_JR_last;
        can_attach_wagon: sw_CRRC_HCMT_attach;
        purchase: spriteset_CRRC_HCMT_JR_Purchase;
        additional_text: string(STR_INFO_CRRC_HCMT);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_HCMT_JR_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (160/param_capacity_mod) ;
        power                       : 750 ;
		weight:                        38;
		running_cost_factor:             49;
    }
}

//CRRC_HCMT_Knockoffhorse
spriteset(spriteset_CRRC_HCMT_Knockoffhorse_Purchase,   "gfx/CRRC_HCMT_Knockoffhorse.png") {template_purchase(7, 21)}
spriteset(spriteset_CRRC_HCMT_Knockoffhorse_Lead,   "gfx/CRRC_HCMT_Knockoffhorse.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_HCMT_Knockoffhorse_Rear,   "gfx/CRRC_HCMT_Knockoffhorse.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_HCMT_Knockoffhorse_Trailer,   "gfx/CRRC_HCMT_Knockoffhorse.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_HCMT_Knockoffhorse_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_HCMT_Knockoffhorse_Rear;
    spriteset_CRRC_HCMT_Knockoffhorse_Lead;
}

item(FEAT_TRAINS, Item_CRRC_HCMT_Knockoffhorse, 6203) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_HCMT);
        introduction_date:                date(2024,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            130 km/h;
        power:                            1500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             196;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_CRRC_HCMT_MTM;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_HCMT_Knockoffhorse_last;
        can_attach_wagon: sw_CRRC_HCMT_attach;
        purchase: spriteset_CRRC_HCMT_Knockoffhorse_Purchase;
        additional_text: string(STR_INFO_CRRC_HCMT);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_HCMT_Knockoffhorse_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (160/param_capacity_mod) ;
        power                       : 750 ;
		weight:                        38;
		running_cost_factor:             49;
    }
}

switch(FEAT_TRAINS, SELF, sw_Alstom_Xtrapolis2_attach, vehicle_type_id){
	Item_Alstom_Xtrapolis2_MTM    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Alstom_Xtrapolis2_MTM
spriteset(spriteset_Alstom_Xtrapolis2_MTM_Purchase,   "gfx/Alstom_Xtrapolis2_MTM.png") {template_purchase(7, 21)}
spriteset(spriteset_Alstom_Xtrapolis2_MTM_Lead,   "gfx/Alstom_Xtrapolis2_MTM.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Alstom_Xtrapolis2_MTM_Rear,   "gfx/Alstom_Xtrapolis2_MTM.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Alstom_Xtrapolis2_MTM_Trailer,   "gfx/Alstom_Xtrapolis2_MTM.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Alstom_Xtrapolis2_MTM_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Alstom_Xtrapolis2_MTM_Rear;
    spriteset_Alstom_Xtrapolis2_MTM_Lead;
}

item(FEAT_TRAINS, Item_Alstom_Xtrapolis2_MTM, 6221) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        THIRDRAIL_MAINLINE;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ALSTOM_XTRAPOLIS2);
        introduction_date:                date(2026,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            130 km/h;
        power:                            1500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             196;
        cargo_capacity:                  169/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Alstom_Xtrapolis2_MTM;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Alstom_Xtrapolis2_MTM_last;
        can_attach_wagon: sw_Alstom_Xtrapolis2_attach;
        purchase: spriteset_Alstom_Xtrapolis2_MTM_Purchase;
        additional_text: string(STR_INFO_ALSTOM_XTRAPOLIS2);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Alstom_Xtrapolis2_MTM_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length                      : 8;
        cargo_capacity              : (169/param_capacity_mod) ;
        power                       : 750 ;
		weight:                        38;
		running_cost_factor:             49;
    }
}