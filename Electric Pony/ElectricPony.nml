grf{
    grfid: "ZM\13\01";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESCRIPTION);
    version: 2;
    min_compatible_version: 1;
//Purchase Cost Parameter
    param {
        param_purchase_cost {
            type: int;
            name: string(STR_PARAM_PURCHASE_COST);
            desc: string(STR_PARAM_PURCHASE_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Running Cost Parameter
     param {
        param_running_cost {
            type: int;
            name: string(STR_PARAM_RUNNING_COST);
            desc: string(STR_PARAM_RUNNING_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Carry Capacity Parameter
//Get this working for the next update!
    param {
                param_capacities {
                        type: int;
                        name: string(STR_PARAM_NAME_CAPACITY);
                        desc: string(STR_PARAM_DESC_CAPACITY);
                        min_value: 0;
                        max_value: 1;
                        def_value: 0;
                        names: {
                                                0: string(STR_PARAM_REAL_CAPACITY);
                                                1: string(STR_PARAM_NORMAL_REDUCED);
                        };
                }
        }
}


//Carry Capacity Variables
if (param_capacities == 0) {
    param_capacity_mod = 0;
}

if (param_capacities == 1) {
    param_capacity_mod = 2;
}

railtypetable {
    "RAIL", SAA3: [ MTRO, SBA3, SCA3, SDA3, "3RDR", "3RDC", MTRO, ELRL], "ELRL", MONO, NAAE: [NAAE, NAAN, IHD_, ELRL], NAA3: [NAA3, MTRO, NBA3, NCA3, NDA3, "3RDR", "3RDC", MTRO, ELRL]
}

cargotable {
PASS, COAL, MAIL, OIL_, LVST, EOIL, COKE, VBOD, SULP, SASH, MNO2, BOOM, IRON, QLME, PHOS, VPTS, SLAG, PIPE, CASS, NUTS, METL, GOOD, GRAI, WOOD, IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, FRUT, MAIZ, CORE, WATR, DIAM, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BEER, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, DYES, ENSP, FERT, FICR, FISH, FMSP, FRVG, GLAS, GRVL, JAVA, LIME, MILK, MNSP, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, TOUR, VEHI, WDPR, WOOL, URAN, YETI, YETY, BEAN, NITR
}

//Basecost Paramater Variables
basecost {
 PR_BUILD_VEHICLE_TRAIN: 1 + param_purchase_cost - 4;
 PR_RUNNING_TRAIN_ELECTRIC: 3 + param_running_cost - 4;
 PR_RUNNING_TRAIN_DIESEL: 3 + param_running_cost - 4;
}

// Fix depot view
traininfo_y_offset = 2;
train_width_32_px = 1;


// Purchase Sprite
template template_purchase(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x   , y, 88, 15, -35, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

// Purchase Sprite
template template_purchase_Subway(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x   , y, 88, 15, -47, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}



// 4 Template
template template_4(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -8,        -15]
    [ x+32,     y,        33,        16,        0,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -12,        -15]
}

template template_4_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -20]
    [ x+98,     y,        22,        20,        -8,        -15]
    [ x+121,    y,        33,        16,        0,        -12]
    [ x+155,    y,        22,        20,        -4,            -11]

    [ x,        y,        8,        24,        -3,            -13]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -12,        -15]
}

// 5 Template
template template_5(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -10,        -14]
}

// 6 Template
template template_6(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -17]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
}

template template_6_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -15]
    [ x+98,     y,        22,        20,        -12,        -13]
    [ x+121,    y,        33,        16,        -8,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]

    [ x,        y,        8,        24,        -3,            -15]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -8,            -13]
}

//7 Template
template template_7(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -15]
    [ x+9,      y,        22,        20,        -14,        -12]
    [ x+32,     y,        33,        16,        -12,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -6,        -12]
}

//7 Template Reversed
template template_7_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89 , y, 8 , 24,  -3, -15]
    [ x+98 , y, 22, 20, -14, -12]
    [ x+121, y, 33, 16, -12, -12]
    [ x+155, y, 22, 20,  -4, -11]

    [ x    , y, 8 , 24,  -3, -13]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 33, 16, -16, -12]
    [ x+66 , y, 22, 20,  -6, -12]
}

// 8 Template
template template_8(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]
}

template template_8_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]

    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

sort(FEAT_TRAINS, [Item_Westie1, Item_Gazelle, Item_Shoogly, Item_Clockworker1]);

//Westie1
spriteset(spriteset_Westie1_Purchase,   "gfx/Westie1.png") {template_purchase(7, 21)}
spriteset(spriteset_Westie1,   "gfx/Westie1.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Westie1, 5200) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        track_type:                        NAAE;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_CARGO;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_WESTIE);
        introduction_date:                date(1920,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        44 ton;
        speed:                            60 mph;
        power:                            700 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             40;
		cargo_capacity:                  0;

        variant_group: Item_Westie1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Westie1;
        purchase: spriteset_Westie1_Purchase;
        additional_text: string(STR_INFO_WESTIE);
		reverse_build_probability: return 50;
}
}

//Westie2
spriteset(spriteset_Westie2_Purchase,   "gfx/Westie2.png") {template_purchase(7, 21)}
spriteset(spriteset_Westie2,   "gfx/Westie2.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Westie2, 5201) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        track_type:                        NAAE;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_CARGO;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_WESTIE);
        introduction_date:                date(1920,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        44 ton;
        speed:                            60 mph;
        power:                            700 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             40;
		cargo_capacity:                  0;

        variant_group: Item_Westie1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Westie2;
        purchase: spriteset_Westie2_Purchase;
        additional_text: string(STR_INFO_WESTIE);
		reverse_build_probability: return 50;
}
}

//Gazelle
spriteset(spriteset_Gazelle_Purchase,   "gfx/Gazelle.png") {template_purchase(7, 21)}
spriteset(spriteset_Gazelle,   "gfx/Gazelle.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Gazelle, 6100) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        track_type:                        NAAE;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_CARGO;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_GAZELLE);
        introduction_date:                date(2010,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        40 ton;
        speed:                            75 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             59;
		cargo_capacity:                  0;

        variant_group: Item_Gazelle;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Gazelle;
        purchase: spriteset_Gazelle_Purchase;
        additional_text: string(STR_INFO_GAZELLE);
		reverse_build_probability: return 50;
}
}

//Shoogly
spriteset(spriteset_Shoogly_Purchase,   "gfx/Shoogly.png") {template_purchase_Subway(7, 21)}
spriteset(spriteset_Shoogly,   "gfx/Shoogly.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Shoogly_r,   "gfx/Shoogly.png") {template_6_r(7, 39)}

switch(FEAT_TRAINS, SELF, switch_Shoogly_position, position_in_articulated_veh) {
 0: spriteset_Shoogly;
 1: spriteset_Shoogly_r;
}

// Articulated part callback
switch(FEAT_TRAINS, SELF, switch_Shoogly_articulated_part, extra_callback_info1) {
    1: return Item_Shoogly;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

item(FEAT_TRAINS, Item_Shoogly, 1000) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        NAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SHOOGLY);
        introduction_date:                date(1895,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        35 ton;
        speed:                            45 mph;
        power:                            300 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     2;
        running_cost_factor:             25;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Shoogly;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: switch_Shoogly_position;
        purchase: spriteset_Shoogly_Purchase;
        additional_text: string(STR_INFO_SHOOGLY);
		articulated_part: switch_Shoogly_articulated_part;
}
}

//Shoogly2
spriteset(spriteset_Shoogly2_Purchase,   "gfx/Shoogly2.png") {template_purchase_Subway(7, 21)}
spriteset(spriteset_Shoogly2,   "gfx/Shoogly2.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Shoogly2_r,   "gfx/Shoogly2.png") {template_6_r(7, 39)}

switch(FEAT_TRAINS, SELF, switch_Shoogly2_position, position_in_articulated_veh) {
 0: spriteset_Shoogly2;
 1: spriteset_Shoogly2_r;
}

// Articulated part callback
switch(FEAT_TRAINS, SELF, switch_Shoogly2_articulated_part, extra_callback_info1) {
    1: return Item_Shoogly2;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

item(FEAT_TRAINS, Item_Shoogly2, 1001) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        NAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SHOOGLY);
        introduction_date:                date(1895,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        35 ton;
        speed:                            45 mph;
        power:                            300 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     2;
        running_cost_factor:             25;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Shoogly;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: switch_Shoogly2_position;
        purchase: spriteset_Shoogly2_Purchase;
        additional_text: string(STR_INFO_SHOOGLY);
		articulated_part: switch_Shoogly2_articulated_part;
}
}

//Clockworker1
spriteset(spriteset_Clockworker1_Purchase,   "gfx/Clockworker1.png") {template_purchase_Subway(7, 21)}
spriteset(spriteset_Clockworker1,   "gfx/Clockworker1.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Clockworker1_r,   "gfx/Clockworker1.png") {template_6_r(7, 39)}

switch(FEAT_TRAINS, SELF, switch_Clockworker1_position, position_in_articulated_veh) {
 0: spriteset_Clockworker1;
 1: spriteset_Clockworker1_r;
}

// Articulated part callback
switch(FEAT_TRAINS, SELF, switch_Clockworker1_articulated_part, extra_callback_info1) {
    1: return Item_Clockworker1;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

item(FEAT_TRAINS, Item_Clockworker1, 1800) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        NAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CLOCKWORKER);
        introduction_date:                date(1980,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             40;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Clockworker1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: switch_Clockworker1_position;
        purchase: spriteset_Clockworker1_Purchase;
        additional_text: string(STR_INFO_CLOCKWORKER);
		articulated_part: switch_Clockworker1_articulated_part;
}
}

//Clockworker2
spriteset(spriteset_Clockworker2_Purchase,   "gfx/Clockworker2.png") {template_purchase_Subway(7, 21)}
spriteset(spriteset_Clockworker2,   "gfx/Clockworker2.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Clockworker2_r,   "gfx/Clockworker2.png") {template_6_r(7, 39)}

switch(FEAT_TRAINS, SELF, switch_Clockworker2_position, position_in_articulated_veh) {
 0: spriteset_Clockworker2;
 1: spriteset_Clockworker2_r;
}

// Articulated part callback
switch(FEAT_TRAINS, SELF, switch_Clockworker2_articulated_part, extra_callback_info1) {
    1: return Item_Clockworker2;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

item(FEAT_TRAINS, Item_Clockworker2, 1801) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        NAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CLOCKWORKER);
        introduction_date:                date(1980,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             40;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Clockworker1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: switch_Clockworker2_position;
        purchase: spriteset_Clockworker2_Purchase;
        additional_text: string(STR_INFO_CLOCKWORKER);
		articulated_part: switch_Clockworker2_articulated_part;
}
}

//Clockworker3
spriteset(spriteset_Clockworker3_Purchase,   "gfx/Clockworker3.png") {template_purchase_Subway(7, 21)}
spriteset(spriteset_Clockworker3,   "gfx/Clockworker3.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Clockworker3_r,   "gfx/Clockworker3.png") {template_6_r(7, 39)}

switch(FEAT_TRAINS, SELF, switch_Clockworker3_position, position_in_articulated_veh) {
 0: spriteset_Clockworker3;
 1: spriteset_Clockworker3_r;
}

// Articulated part callback
switch(FEAT_TRAINS, SELF, switch_Clockworker3_articulated_part, extra_callback_info1) {
    1: return Item_Clockworker3;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

item(FEAT_TRAINS, Item_Clockworker3, 1802) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        NAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CLOCKWORKER);
        introduction_date:                date(1980,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             40;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Clockworker1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: switch_Clockworker3_position;
        purchase: spriteset_Clockworker3_Purchase;
        additional_text: string(STR_INFO_CLOCKWORKER);
		articulated_part: switch_Clockworker3_articulated_part;
}
}