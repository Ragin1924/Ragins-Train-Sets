grf {
    grfid: "ZM\08\03";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESC);
    version: 1;
    min_compatible_version: 0;
}

if (!extended_feature_test("action3_signals_custom_signal_sprites")) {
	error(FATAL, string(STR_UNSUPPORTED_VERSION));
}
//templates use the following format :
// template [template name](x,y){
//	[ x, y, sx, sy, ox, oy]
// where the first x and y are the starting coordinates of a sprite
// sx and sy are size in x and y respectively
// ox and oy are offset in x and y respectively
//}
template template_signal_invisible(x,y){

		[ x, y, 1, 1, -1, -21]
		[ x, y, 1, 1, -1, -21]
		[ x, y, 1, 1, -1, -21]
		[ x, y, 1, 1, -1, -21]
		[ x, y, 1, 1, -1, -21]
		[ x, y, 1, 1, -1, -21]
		[ x, y, 1, 1, -1, -21]
		[ x, y, 1, 1, -1, -21]

}
template template_signal_2tall(x,y){

	[ x, y, 5, 19, -1, -21, ANIM]
	[ x+66, y, 6, 19, -1, -21, ANIM]
	[ x+132, y, 6, 19, -1, -21, ANIM]
	[ x+198, y, 5, 19, -6, -21, ANIM]
	[ x+264, y, 5, 19, -2, -21, ANIM]
	[ x+330, y, 5, 19, -3, -19, ANIM]
	[ x+396, y, 6, 19, -2, -21, ANIM]
	[ x+462, y, 6, 19, -1, -21, ANIM]
}

template template_signal_3tall(x,y){

	[ x, y, 5, 20, -1, -19, ANIM]
	[ x+66, y, 6, 20, -1, -19, ANIM]
	[ x+132, y, 6, 20, -1, -19, ANIM]
	[ x+198, y, 5, 20, -6, -19, ANIM]
	[ x+264, y, 5, 20, -2, -19, ANIM]
	[ x+330, y, 5, 20, -3, -17, ANIM]
	[ x+396, y, 6, 20, -2, -19, ANIM]
	[ x+462, y, 6, 20, -1, -19, ANIM]
}

template template_signal_4tall(x,y){

	[ x, y, 5, 22, -1, -21, ANIM]
	[ x+66, y, 6, 22, -1, -21, ANIM]
	[ x+132, y, 6, 22, -1, -21, ANIM]
	[ x+198, y, 5, 22, -6, -21, ANIM]
	[ x+264, y, 5, 22, -2, -21, ANIM]
	[ x+330, y, 5, 22, -3, -19, ANIM]
	[ x+396, y, 6, 22, -2, -21, ANIM]
	[ x+462, y, 6, 22, -1, -21, ANIM]
}

template template_signal_5tall(x,y){

	[ x, y, 5, 24, -1, -23,ANIM]
	[ x+66, y, 6, 24, -1, -23,ANIM]
	[ x+132, y, 6, 24, -1, -23,ANIM]
	[ x+198, y, 5, 24, -6, -23,ANIM]
	[ x+264, y, 5, 24, -2, -23,ANIM]
	[ x+330, y, 5, 24, -3, -21,ANIM]
	[ x+396, y, 6, 24, -2, -23,ANIM]
	[ x+462, y, 6, 24, -1, -23,ANIM]
}

template template_signal_6tall(x,y){

	[ x, y, 5, 26, -1, -25,ANIM]
	[ x+66, y, 6, 26, -1, -25,ANIM]
	[ x+132, y, 6, 26, -1, -25,ANIM]
	[ x+198, y, 5, 26, -6, -25,ANIM]
	[ x+264, y, 5, 26, -2, -25,ANIM]
	[ x+330, y, 5, 26, -3, -23,ANIM]
	[ x+396, y, 6, 26, -2, -25,ANIM]
	[ x+462, y, 6, 26, -1, -25,ANIM]
}

template template_signal_4talldistant(x,y){

	[ x, y, 5, 22, -1, -25]
	[ x+66, y, 6, 22, -1, -22]
	[ x+132, y, 6, 22, -1, -25]
	[ x+198, y, 5, 22, -6, -20]
	[ x+264, y, 5, 22, -2, -20]
	[ x+330, y, 5, 22, -3, -23]
	[ x+396, y, 6, 22, -2, -25]
	[ x+462, y, 6, 22, -1, -25]
}

template template_signal_2talldistant(x,y){

	[ x, y, 5, 20, -1, -25]
	[ x+66, y, 6, 20, -1, -20]
	[ x+132, y, 6, 20, -1, -25]
	[ x+198, y, 5, 20, -6, -18]
	[ x+264, y, 5, 20, -2, -20]
	[ x+330, y, 5, 20, -3, -23]
	[ x+396, y, 6, 20, -2, -25]
	[ x+462, y, 6, 20, -1, -25]
}

template template_signal_repeater(x,y){

	[ x, y, 5, 21, -1, -25]
	[ x+66, y, 6, 21, -1, -22]
	[ x+132, y, 6, 21, -1, -25]
	[ x+198, y, 5, 21, -10, -20]
	[ x+264, y, 5, 21, -2, -20]
	[ x+330, y, 5, 21, -3, -23]
	[ x+396, y, 6, 21, -2, -25]
	[ x+462, y, 6, 21, -1, -25]
}

template template_signal_small(x,y){

	[ x, y, 5, 8, -1, -11]
	[ x+66, y, 6, 8, -1, -11]
	[ x+132, y, 6, 8, -1, -11]
	[ x+198, y, 5, 8, -2, -6]
	[ x+264, y, 5, 8, -2, -8]
	[ x+330, y, 5, 8, -3, -9]
	[ x+396, y, 6, 8, -2, -11]
	[ x+462, y, 6, 8, -1, -11]
}

spriteset(signal_hidden, "japanmultiaspect.png"){template_signal_invisible(35,28)}

// 2 tall signals

spriteset(signal_2a_clear, "japanmultiaspect.png"){template_signal_2tall(35,31)}
spriteset(signal_2a_stop, "japanmultiaspect.png"){template_signal_2tall(70,31)}
spriteset(signal_2b_ct, "japanmultiaspect.png"){template_signal_2tall(56,56)}

//This switch decides which spriteset to use for each signal aspect for one signal type (this will be used for block electric, style one)
switch(FEAT_SIGNALS, SELF, twonormal, getbits(extra_callback_info2, 0, 8)){
	00: signal_2a_stop;
	01:	signal_2a_clear;
	02:	signal_2a_clear;
	03:	signal_2a_clear;
}

//signals
switch(FEAT_SIGNALS, SELF, tw_lamp_signal, getbits(extra_callback_info2, 16, 8)){
	00: twonormal; //block signal
	04: twonormal; //Path
	05: twonormal; //Path one way
}

switch(FEAT_SIGNALS, SELF, sw_japanmultiaspect, signal_style){
	01: tw_lamp_signal;
}

item (FEAT_SIGNALS, custom_signals, 0) { 
	property{
		extra_aspects:		2;	//Number of extra aspects to be used across all signal types (0=only red/green, 1=red/yellow/green etc). Set it to the max of all your signal types
		
		define_style:		1;
		style_name:			string(STR_SIG_2);
//		style_lookahead_extra_aspects:	4;
		style_electric_enabled: bitmask(SIGNAL_TYPE_NORMAL, SIGNAL_TYPE_PBS, SIGNAL_TYPE_PBS_ONEWAY);

	}

    graphics {
        sw_japanmultiaspect;
    }
}
