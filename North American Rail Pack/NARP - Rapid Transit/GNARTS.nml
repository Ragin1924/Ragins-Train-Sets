grf{
    grfid: "ZM\07\01";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESCRIPTION);
    version: 4;
    min_compatible_version: 1;
//Purchase Cost Parameter
    param {
        param_purchase_cost {
            type: int;
            name: string(STR_PARAM_PURCHASE_COST);
            desc: string(STR_PARAM_PURCHASE_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Running Cost Parameter
     param {
        param_running_cost {
            type: int;
            name: string(STR_PARAM_RUNNING_COST);
            desc: string(STR_PARAM_RUNNING_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Carry Capacity Parameter
    param {
                param_capacities {
                        type: int;
                        name: string(STR_PARAM_NAME_CAPACITY);
                        desc: string(STR_PARAM_DESC_CAPACITY);
                        min_value: 0;
                        max_value: 1;
                        def_value: 0;
                        names: {
                                                0: string(STR_PARAM_REAL_CAPACITY);
                                                1: string(STR_PARAM_NORMAL_REDUCED);
                        };
                }
        }
}


//Carry Capacity Variables
if (param_capacities == 0) {
    param_capacity_mod = 0;
}

if (param_capacities == 1) {
    param_capacity_mod = 2;
}

railtypetable {
    RAIL, METRO: [MTRO, SAA4, SAA3, "3RDR", SAAZ, "3RDC", SAAE, ELRL], THIRDRAIL_MAINLINE: [SAA3, "3RDR", SAAZ, "3RDC", MTRO, SAAE, ELRL], ELRL
}

cargotable {
PASS, COAL, MAIL, OIL_, LVST, EOIL, COKE, VBOD, SULP, SASH, MNO2, BOOM, IRON, QLME, PHOS, VPTS, SLAG, PIPE, CASS, NUTS, METL, GOOD, GRAI, WOOD, IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, FRUT, MAIZ, CORE, WATR, DIAM, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BEER, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, DYES, ENSP, FERT, FICR, FISH, FMSP, FRVG, GLAS, GRVL, JAVA, LIME, MILK, MNSP, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, TOUR, VEHI, WDPR, WOOL, URAN, YETI, YETY, BEAN, NITR
}

//Basecost Paramater Variables
basecost {
 PR_BUILD_VEHICLE_TRAIN: 1 + param_purchase_cost - 4;
 PR_BUILD_VEHICLE_WAGON: 3 + param_purchase_cost - 4;
 PR_RUNNING_TRAIN_STEAM: 4 + param_running_cost - 4;
 PR_RUNNING_TRAIN_DIESEL: 3 + param_running_cost - 4;
 PR_RUNNING_TRAIN_ELECTRIC: 2 + param_running_cost - 4;
}

// Fix depot view
traininfo_y_offset = 2;
train_width_32_px = 1;


// Purchase Sprite
template template_purchase(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -60, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}


template template_purchase_4(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -31, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_5(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -33, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_6(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -35, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_7(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -37, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_8(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -39, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_44(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -39, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_55(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -43, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_66(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -47, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_66mu(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -33, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_77(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -51, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_77mu(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -37, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_88(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -55, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_88mu(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -41, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

template template_purchase_88xl(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -55, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}

// 4 Template
template template_4(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -8,        -15]
    [ x+32,     y,        33,        16,        0,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -12,        -15]
}

template template_4_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -20]
    [ x+98,     y,        22,        20,        -8,        -15]
    [ x+121,    y,        33,        16,        0,        -12]
    [ x+155,    y,        22,        20,        -4,            -11]

    [ x,        y,        8,        24,        -3,            -13]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -12,        -15]
}

// 5 Template
template template_5(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -10,        -14]
}

// 6 Template
template template_6(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -17]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
}

template template_6_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
    
    [ x,        y,        8,        24,        -3,            -17]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

//7 Template
template template_7(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -15]
    [ x+9,      y,        22,        20,        -14,        -12]
    [ x+32,     y,        33,        16,        -12,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -6,        -12]
}

//7 Template Reversed
template template_7_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89 , y, 8 , 24,  -3, -15]
    [ x+98 , y, 22, 20, -14, -12]
    [ x+121, y, 33, 16, -12, -12]
    [ x+155, y, 22, 20,  -4, -11]

    [ x    , y, 8 , 24,  -3, -13]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 33, 16, -16, -12]
    [ x+66 , y, 22, 20,  -6, -12]
}

// 8 Template
template template_8(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]
}

template template_8_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]

    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

spriteset(spriteset_MU_purchase,   "gfx/MU_Carriage.png") {template_purchase_8(7, 21)}
spriteset(spriteset_MU_trailer,   "gfx/MU_Carriage.png") {template_8(7, 89)}

//Vehicle
item (FEAT_TRAINS, Item_MU_Trailer, 0) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        track_type:                        METRO;
		running_cost_base: RUNNING_COST_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;

        name:                            string(STR_MU_TRAILER);
        introduction_date:                date(1890,1,1);
        model_life:                        VEHICLE_NEVER_EXPIRES;
        length:                            8;

        weight:                         0 ton;
        speed:                            0 mph;
		power:                            0 hp;
        cost_factor:                     100;
        running_cost_factor:             10;

        refittable_cargo_classes:        bitmask();
        default_cargo_type:                PASS;
        cargo_capacity:                    100;
        loading_speed: 30;

    }
    graphics {
        default:                        spriteset_MU_trailer;
        purchase:                        spriteset_MU_purchase;
        additional_text: string(STR_MU_TRAILER_INFO);

}
}


switch(FEAT_TRAINS, SELF, sw_BrooklynGateCar_attach, vehicle_type_id){
    Item_BrooklynGateCar_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BrooklynGateCar_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BrooklynGateCar_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//BrooklynGateCar_Liv1
spriteset(spriteset_BrooklynGateCar_Liv1_Purchase,   "gfx/BrooklynGateCar_Liv1.png") {template_purchase_7(7, 21)}
spriteset(spriteset_BrooklynGateCar_Liv1,   "gfx/BrooklynGateCar_Liv1.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_BrooklynGateCar_Liv1, 1000) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BROOKLYNGATECAR);
        introduction_date:                date(1890,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        35 ton;
        speed:                            35 mph;
        power:                            120 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     2;
        running_cost_factor:             45;
        cargo_capacity:                  150/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BrooklynGateCar_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_BrooklynGateCar_Liv1;
        can_attach_wagon: sw_BrooklynGateCar_attach;
        purchase: spriteset_BrooklynGateCar_Liv1_Purchase;
        additional_text: string(STR_INFO_BROOKLYNGATECAR);
		reverse_build_probability: return 50;
}
}

//BrooklynGateCar_Liv2
spriteset(spriteset_BrooklynGateCar_Liv2_Purchase,   "gfx/BrooklynGateCar_Liv2.png") {template_purchase_7(7, 21)}
spriteset(spriteset_BrooklynGateCar_Liv2,   "gfx/BrooklynGateCar_Liv2.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_BrooklynGateCar_Liv2, 1001) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BROOKLYNGATECAR);
        introduction_date:                date(1890,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        35 ton;
        speed:                            35 mph;
        power:                            120 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     2;
        running_cost_factor:             45;
        cargo_capacity:                  150/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BrooklynGateCar_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_BrooklynGateCar_Liv2;
        can_attach_wagon: sw_BrooklynGateCar_attach;
        purchase: spriteset_BrooklynGateCar_Liv2_Purchase;
        additional_text: string(STR_INFO_BROOKLYNGATECAR);
		reverse_build_probability: return 50;
}
}

//BrooklynGateCar_Liv3
spriteset(spriteset_BrooklynGateCar_Liv3_Purchase,   "gfx/BrooklynGateCar_Liv3.png") {template_purchase_7(7, 21)}
spriteset(spriteset_BrooklynGateCar_Liv3,   "gfx/BrooklynGateCar_Liv3.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_BrooklynGateCar_Liv3, 1002) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BROOKLYNGATECAR);
        introduction_date:                date(1890,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        35 ton;
        speed:                            35 mph;
        power:                            120 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     2;
        running_cost_factor:             45;
        cargo_capacity:                  150/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BrooklynGateCar_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_BrooklynGateCar_Liv3;
        can_attach_wagon: sw_BrooklynGateCar_attach;
        purchase: spriteset_BrooklynGateCar_Liv3_Purchase;
        additional_text: string(STR_INFO_BROOKLYNGATECAR);
		reverse_build_probability: return 50;
}
}

switch(FEAT_TRAINS, SELF, sw_PressedSteelElCar_attach, vehicle_type_id){
    Item_PressedSteelElCar_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PressedSteelElCar_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PressedSteelElCar_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PressedSteelElCar_Liv4    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//PressedSteelElCar_Liv1
spriteset(spriteset_PressedSteelElCar_Liv1_Purchase,   "gfx/PressedSteelElCar_Liv1.png") {template_purchase_7(7, 21)}
spriteset(spriteset_PressedSteelElCar_Liv1,   "gfx/PressedSteelElCar_Liv1.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_PressedSteelElCar_Liv1, 1040) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRESSEDSTEELELCAR);
        introduction_date:                date(1906,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        36 ton;
        speed:                            35 mph;
        power:                            134 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  152/param_capacity_mod;
        loading_speed: 25;

        variant_group: Item_PressedSteelElCar_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_PressedSteelElCar_Liv1;
        can_attach_wagon: sw_PressedSteelElCar_attach;
        purchase: spriteset_PressedSteelElCar_Liv1_Purchase;
        additional_text: string(STR_INFO_PRESSEDSTEELELCAR);
		reverse_build_probability: return 50;
}
}

//PressedSteelElCar_Liv2
spriteset(spriteset_PressedSteelElCar_Liv2_Purchase,   "gfx/PressedSteelElCar_Liv2.png") {template_purchase_7(7, 21)}
spriteset(spriteset_PressedSteelElCar_Liv2,   "gfx/PressedSteelElCar_Liv2.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_PressedSteelElCar_Liv2, 1041) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRESSEDSTEELELCAR);
        introduction_date:                date(1906,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        36 ton;
        speed:                            35 mph;
        power:                            134 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  152/param_capacity_mod;
        loading_speed: 25;

        variant_group: Item_PressedSteelElCar_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_PressedSteelElCar_Liv2;
        can_attach_wagon: sw_PressedSteelElCar_attach;
        purchase: spriteset_PressedSteelElCar_Liv2_Purchase;
        additional_text: string(STR_INFO_PRESSEDSTEELELCAR);
		reverse_build_probability: return 50;
}
}

//PressedSteelElCar_Liv3
spriteset(spriteset_PressedSteelElCar_Liv3_Purchase,   "gfx/PressedSteelElCar_Liv3.png") {template_purchase_7(7, 21)}
spriteset(spriteset_PressedSteelElCar_Liv3,   "gfx/PressedSteelElCar_Liv3.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_PressedSteelElCar_Liv3, 1042) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRESSEDSTEELELCAR);
        introduction_date:                date(1906,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        36 ton;
        speed:                            35 mph;
        power:                            134 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  152/param_capacity_mod;
        loading_speed: 25;

        variant_group: Item_PressedSteelElCar_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_PressedSteelElCar_Liv3;
        can_attach_wagon: sw_PressedSteelElCar_attach;
        purchase: spriteset_PressedSteelElCar_Liv3_Purchase;
        additional_text: string(STR_INFO_PRESSEDSTEELELCAR);
		reverse_build_probability: return 50;
}
}

//PressedSteelElCar_Liv4
spriteset(spriteset_PressedSteelElCar_Liv4_Purchase,   "gfx/PressedSteelElCar_Liv4.png") {template_purchase_7(7, 21)}
spriteset(spriteset_PressedSteelElCar_Liv4,   "gfx/PressedSteelElCar_Liv4.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_PressedSteelElCar_Liv4, 1043) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRESSEDSTEELELCAR);
        introduction_date:                date(1906,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        36 ton;
        speed:                            35 mph;
        power:                            134 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  152/param_capacity_mod;
        loading_speed: 25;

        variant_group: Item_PressedSteelElCar_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_PressedSteelElCar_Liv4;
        can_attach_wagon: sw_PressedSteelElCar_attach;
        purchase: spriteset_PressedSteelElCar_Liv4_Purchase;
        additional_text: string(STR_INFO_PRESSEDSTEELELCAR);
		reverse_build_probability: return 50;
}
}

switch(FEAT_TRAINS, SELF, sw_4000Series_attach, vehicle_type_id){
	Item_4000Series_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_4000Series_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//4000Series_Liv1
spriteset(spriteset_4000Series_Liv1_Purchase,   "gfx/4000Series_Liv1.png") {template_purchase_7(7, 21)}
spriteset(spriteset_4000Series_Liv1,   "gfx/4000Series_Liv1.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_4000Series_Liv1, 1120) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_4000SERIES);
        introduction_date:                date(1914,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        31 ton;
        speed:                            35 mph;
        power:                            140 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     4;
        running_cost_factor:             55;
        cargo_capacity:                  155/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_4000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_4000Series_Liv1;
        can_attach_wagon: sw_4000Series_attach;
        purchase: spriteset_4000Series_Liv1_Purchase;
        additional_text: string(STR_INFO_4000SERIES);
		reverse_build_probability: return 50;
}
}

//4000Series_Liv2
spriteset(spriteset_4000Series_Liv2_Purchase,   "gfx/4000Series_Liv2.png") {template_purchase_7(7, 21)}
spriteset(spriteset_4000Series_Liv2,   "gfx/4000Series_Liv2.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_4000Series_Liv2, 1121) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_4000SERIES);
        introduction_date:                date(1914,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        31 ton;
        speed:                            35 mph;
        power:                            140 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     4;
        running_cost_factor:             55;
        cargo_capacity:                  155/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_4000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_4000Series_Liv2;
        can_attach_wagon: sw_4000Series_attach;
        purchase: spriteset_4000Series_Liv2_Purchase;
        additional_text: string(STR_INFO_4000SERIES);
		reverse_build_probability: return 50;
}
}

switch(FEAT_TRAINS, SELF, sw_QueensCar_attach, vehicle_type_id){
	Item_QueensCar_BRT    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_QueensCar_TwoTone    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_QueensCar_Stripe    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//QueensCar_BRT
spriteset(spriteset_QueensCar_BRT_Purchase,   "gfx/QueensCar_BRT.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_QueensCar_BRT_Lead,   "gfx/QueensCar_BRT.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_QueensCar_BRT_Rear,   "gfx/QueensCar_BRT.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_QueensCar_BRT_Trailer,   "gfx/QueensCar_BRT.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_QueensCar_BRT_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_QueensCar_BRT_Rear;
    spriteset_QueensCar_BRT_Lead;
}

item(FEAT_TRAINS, Item_QueensCar_BRT, 1321) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_QUEENSCAR);
        introduction_date:                date(1935,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        25 ton;
        speed:                            50 mph;
        power:                            200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     4;
        running_cost_factor:             70;
        cargo_capacity:                  155/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_QueensCar_BRT;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_QueensCar_BRT_last;
        can_attach_wagon: sw_QueensCar_attach;
        purchase: spriteset_QueensCar_BRT_Purchase;
        additional_text: string(STR_INFO_QUEENSCAR);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_QueensCar_BRT_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (155/param_capacity_mod);
        power:                            100;
		weight:                        24;
		running_cost_factor:             18;
    }
}

//QueensCar_TwoTone
spriteset(spriteset_QueensCar_TwoTone_Purchase,   "gfx/QueensCar_TwoTone.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_QueensCar_TwoTone_Lead,   "gfx/QueensCar_TwoTone.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_QueensCar_TwoTone_Rear,   "gfx/QueensCar_TwoTone.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_QueensCar_TwoTone_Trailer,   "gfx/QueensCar_TwoTone.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_QueensCar_TwoTone_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_QueensCar_TwoTone_Rear;
    spriteset_QueensCar_TwoTone_Lead;
}

item(FEAT_TRAINS, Item_QueensCar_TwoTone, 1322) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_QUEENSCAR);
        introduction_date:                date(1935,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        25 ton;
        speed:                            50 mph;
        power:                            200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     4;
        running_cost_factor:             70;
        cargo_capacity:                  155/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_QueensCar_BRT;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_QueensCar_TwoTone_last;
        can_attach_wagon: sw_QueensCar_attach;
        purchase: spriteset_QueensCar_TwoTone_Purchase;
        additional_text: string(STR_INFO_QUEENSCAR);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_QueensCar_TwoTone_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (155/param_capacity_mod);
        power:                            100;
		weight:                        24;
		running_cost_factor:             18;
    }
}

//QueensCar_Stripe
spriteset(spriteset_QueensCar_Stripe_Purchase,   "gfx/QueensCar_Stripe.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_QueensCar_Stripe_Lead,   "gfx/QueensCar_Stripe.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_QueensCar_Stripe_Rear,   "gfx/QueensCar_Stripe.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_QueensCar_Stripe_Trailer,   "gfx/QueensCar_Stripe.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_QueensCar_Stripe_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_QueensCar_Stripe_Rear;
    spriteset_QueensCar_Stripe_Lead;
}

item(FEAT_TRAINS, Item_QueensCar_Stripe, 1323) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_QUEENSCAR);
        introduction_date:                date(1935,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        25 ton;
        speed:                            50 mph;
        power:                            200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     4;
        running_cost_factor:             70;
        cargo_capacity:                  155/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_QueensCar_BRT;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_QueensCar_Stripe_last;
        can_attach_wagon: sw_QueensCar_attach;
        purchase: spriteset_QueensCar_Stripe_Purchase;
        additional_text: string(STR_INFO_QUEENSCAR);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_QueensCar_Stripe_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (155/param_capacity_mod);
        power:                            100;
		weight:                        24;
		running_cost_factor:             18;
    }
}

switch(FEAT_TRAINS, SELF, sw_SLCC_5000Series_attach, vehicle_type_id){
	Item_SLCC_5000Series_CRTC    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_5000Series_TwoTone    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_5000Series_RedandBlue1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_5000Series_RedandBlue2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//SLCC_5000Series_CRTC
spriteset(spriteset_SLCC_5000Series_CRTC_Purchase,   "gfx/SLCC_5000Series_CRTC.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_5000Series_CRTC_Lead,   "gfx/SLCC_5000Series_CRTC.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_5000Series_CRTC_Rear,   "gfx/SLCC_5000Series_CRTC.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_5000Series_CRTC_Trailer,   "gfx/SLCC_5000Series_CRTC.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_5000Series_CRTC_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_5000Series_CRTC_Rear;
    spriteset_SLCC_5000Series_CRTC_Lead;
}

item(FEAT_TRAINS, Item_SLCC_5000Series_CRTC, 1401) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_5000SERIES);
        introduction_date:                date(1947,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            75 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             90;
        cargo_capacity:                  158/param_capacity_mod;
        loading_speed: 15;

        variant_group: Item_SLCC_5000Series_CRTC;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_5000Series_CRTC_last;
        can_attach_wagon: sw_SLCC_5000Series_attach;
        purchase: spriteset_SLCC_5000Series_CRTC_Purchase;
        additional_text: string(STR_INFO_SLCC_5000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_5000Series_CRTC_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (158/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             22;
    }
}

//SLCC_5000Series_TwoTone
spriteset(spriteset_SLCC_5000Series_TwoTone_Purchase,   "gfx/SLCC_5000Series_TwoTone.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_5000Series_TwoTone_Lead,   "gfx/SLCC_5000Series_TwoTone.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_5000Series_TwoTone_Rear,   "gfx/SLCC_5000Series_TwoTone.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_5000Series_TwoTone_Trailer,   "gfx/SLCC_5000Series_TwoTone.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_5000Series_TwoTone_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_5000Series_TwoTone_Rear;
    spriteset_SLCC_5000Series_TwoTone_Lead;
}

item(FEAT_TRAINS, Item_SLCC_5000Series_TwoTone, 1402) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_5000SERIES);
        introduction_date:                date(1947,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            75 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  158/param_capacity_mod;
        loading_speed: 15;

        variant_group: Item_SLCC_5000Series_CRTC;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_5000Series_TwoTone_last;
        can_attach_wagon: sw_SLCC_5000Series_attach;
        purchase: spriteset_SLCC_5000Series_TwoTone_Purchase;
        additional_text: string(STR_INFO_SLCC_5000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_5000Series_TwoTone_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (158/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             22;
    }
}

//SLCC_5000Series_RedandBlue1
spriteset(spriteset_SLCC_5000Series_RedandBlue1_Purchase,   "gfx/SLCC_5000Series_RedandBlue1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_5000Series_RedandBlue1_Lead,   "gfx/SLCC_5000Series_RedandBlue1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_5000Series_RedandBlue1_Rear,   "gfx/SLCC_5000Series_RedandBlue1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_5000Series_RedandBlue1_Trailer,   "gfx/SLCC_5000Series_RedandBlue1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_5000Series_RedandBlue1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_5000Series_RedandBlue1_Rear;
    spriteset_SLCC_5000Series_RedandBlue1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_5000Series_RedandBlue1, 1403) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_5000SERIES);
        introduction_date:                date(1947,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            75 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             90;
        cargo_capacity:                  158/param_capacity_mod;
        loading_speed: 15;

        variant_group: Item_SLCC_5000Series_CRTC;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_5000Series_RedandBlue1_last;
        can_attach_wagon: sw_SLCC_5000Series_attach;
        purchase: spriteset_SLCC_5000Series_RedandBlue1_Purchase;
        additional_text: string(STR_INFO_SLCC_5000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_5000Series_RedandBlue1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (158/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             22;
    }
}

//SLCC_5000Series_RedandBlue2
spriteset(spriteset_SLCC_5000Series_RedandBlue2_Purchase,   "gfx/SLCC_5000Series_RedandBlue2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_5000Series_RedandBlue2_Lead,   "gfx/SLCC_5000Series_RedandBlue2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_5000Series_RedandBlue2_Rear,   "gfx/SLCC_5000Series_RedandBlue2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_5000Series_RedandBlue2_Trailer,   "gfx/SLCC_5000Series_RedandBlue2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_5000Series_RedandBlue2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_5000Series_RedandBlue2_Rear;
    spriteset_SLCC_5000Series_RedandBlue2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_5000Series_RedandBlue2, 1404) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_5000SERIES);
        introduction_date:                date(1947,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            75 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             90;
        cargo_capacity:                  158/param_capacity_mod;
        loading_speed: 15;

        variant_group: Item_SLCC_5000Series_CRTC;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_5000Series_RedandBlue2_last;
        can_attach_wagon: sw_SLCC_5000Series_attach;
        purchase: spriteset_SLCC_5000Series_RedandBlue2_Purchase;
        additional_text: string(STR_INFO_SLCC_5000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_5000Series_RedandBlue2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (158/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             22;
    }
}

switch(FEAT_TRAINS, SELF, sw_CTA_Metal_attach, vehicle_type_id){
	Item_SLCC_6000Series_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_6000Series_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_6000Series_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_6000Series_RedandBlue1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_6000Series_RedandBlue2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_6000Series_SEPTA    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_150Series_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_150Series_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_150Series_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_150Series_RedandBlue1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_150Series_RedandBlue2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_150Series_SEPTA    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//SLCC_6000Series_Liv1
spriteset(spriteset_SLCC_6000Series_Liv1_Purchase,   "gfx/SLCC_6000Series_Liv1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_6000Series_Liv1_Lead,   "gfx/SLCC_6000Series_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_6000Series_Liv1_Rear,   "gfx/SLCC_6000Series_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_6000Series_Liv1_Trailer,   "gfx/SLCC_6000Series_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_6000Series_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_6000Series_Liv1_Rear;
    spriteset_SLCC_6000Series_Liv1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_6000Series_Liv1, 1501) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_6000SERIES);
        introduction_date:                date(1950,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            50 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             100;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_6000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_6000Series_Liv1_last;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_6000Series_Liv1_Purchase;
        additional_text: string(STR_INFO_SLCC_6000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_6000Series_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (160/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             25;
    }
}

//SLCC_6000Series_Liv2
spriteset(spriteset_SLCC_6000Series_Liv2_Purchase,   "gfx/SLCC_6000Series_Liv2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_6000Series_Liv2_Lead,   "gfx/SLCC_6000Series_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_6000Series_Liv2_Rear,   "gfx/SLCC_6000Series_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_6000Series_Liv2_Trailer,   "gfx/SLCC_6000Series_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_6000Series_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_6000Series_Liv2_Rear;
    spriteset_SLCC_6000Series_Liv2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_6000Series_Liv2, 1502) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_6000SERIES);
        introduction_date:                date(1950,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            50 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             100;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_6000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_6000Series_Liv2_last;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_6000Series_Liv2_Purchase;
        additional_text: string(STR_INFO_SLCC_6000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_6000Series_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (160/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             25;
    }
}

//SLCC_6000Series_Liv3
spriteset(spriteset_SLCC_6000Series_Liv3_Purchase,   "gfx/SLCC_6000Series_Liv3.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_6000Series_Liv3_Lead,   "gfx/SLCC_6000Series_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_6000Series_Liv3_Rear,   "gfx/SLCC_6000Series_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_6000Series_Liv3_Trailer,   "gfx/SLCC_6000Series_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_6000Series_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_6000Series_Liv3_Rear;
    spriteset_SLCC_6000Series_Liv3_Lead;
}

item(FEAT_TRAINS, Item_SLCC_6000Series_Liv3, 1503) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_6000SERIES);
        introduction_date:                date(1950,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            50 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             100;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_6000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_6000Series_Liv3_last;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_6000Series_Liv3_Purchase;
        additional_text: string(STR_INFO_SLCC_6000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_6000Series_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (160/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             25;
    }
}

//SLCC_6000Series_RedandBlue1
spriteset(spriteset_SLCC_6000Series_RedandBlue1_Purchase,   "gfx/SLCC_6000Series_RedandBlue1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_6000Series_RedandBlue1_Lead,   "gfx/SLCC_6000Series_RedandBlue1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_6000Series_RedandBlue1_Rear,   "gfx/SLCC_6000Series_RedandBlue1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_6000Series_RedandBlue1_Trailer,   "gfx/SLCC_6000Series_RedandBlue1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_6000Series_RedandBlue1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_6000Series_RedandBlue1_Rear;
    spriteset_SLCC_6000Series_RedandBlue1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_6000Series_RedandBlue1, 1504) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_6000SERIES);
        introduction_date:                date(1950,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            50 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             100;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_6000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_6000Series_RedandBlue1_last;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_6000Series_RedandBlue1_Purchase;
        additional_text: string(STR_INFO_SLCC_6000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_6000Series_RedandBlue1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (160/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             25;
    }
}

//SLCC_6000Series_RedandBlue2
spriteset(spriteset_SLCC_6000Series_RedandBlue2_Purchase,   "gfx/SLCC_6000Series_RedandBlue2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_6000Series_RedandBlue2_Lead,   "gfx/SLCC_6000Series_RedandBlue2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_6000Series_RedandBlue2_Rear,   "gfx/SLCC_6000Series_RedandBlue2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_6000Series_RedandBlue2_Trailer,   "gfx/SLCC_6000Series_RedandBlue2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_6000Series_RedandBlue2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_6000Series_RedandBlue2_Rear;
    spriteset_SLCC_6000Series_RedandBlue2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_6000Series_RedandBlue2, 1505) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_6000SERIES);
        introduction_date:                date(1950,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            50 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             100;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_6000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_6000Series_RedandBlue2_last;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_6000Series_RedandBlue2_Purchase;
        additional_text: string(STR_INFO_SLCC_6000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_6000Series_RedandBlue2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (160/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             25;
    }
}

//SLCC_6000Series_SEPTA
spriteset(spriteset_SLCC_6000Series_SEPTA_Purchase,   "gfx/SLCC_6000Series_SEPTA.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_SLCC_6000Series_SEPTA_Lead,   "gfx/SLCC_6000Series_SEPTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_6000Series_SEPTA_Rear,   "gfx/SLCC_6000Series_SEPTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_6000Series_SEPTA_Trailer,   "gfx/SLCC_6000Series_SEPTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_6000Series_SEPTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_6000Series_SEPTA_Rear;
    spriteset_SLCC_6000Series_SEPTA_Lead;
}

item(FEAT_TRAINS, Item_SLCC_6000Series_SEPTA, 1506) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_6000SERIES);
        introduction_date:                date(1950,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            50 mph;
        power:                            440 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             100;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_6000Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_6000Series_SEPTA_last;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_6000Series_SEPTA_Purchase;
        additional_text: string(STR_INFO_SLCC_6000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_6000Series_SEPTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (160/param_capacity_mod);
        power:                            220;
		weight:                        28;
		running_cost_factor:             25;
    }
}

switch(FEAT_TRAINS, SELF, sw_Pullman_MBTACars_Orange_attach, vehicle_type_id){
	Item_Pullman_MBTACars_Liv1_Orange    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_MBTACars_Liv2_Orange    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Pullman_MBTACars_Liv1_Orange
spriteset(spriteset_Pullman_MBTACars_Liv1_Orange_Purchase,   "gfx/Pullman_MBTACars_Liv1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Pullman_MBTACars_Liv1_Orange_Lead,   "gfx/Pullman_MBTACars_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_MBTACars_Liv1_Orange_Rear,   "gfx/Pullman_MBTACars_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_MBTACars_Liv1_Orange_Trailer,   "gfx/Pullman_MBTACars_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_MBTACars_Liv1_Orange_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_MBTACars_Liv1_Orange_Rear;
    spriteset_Pullman_MBTACars_Liv1_Orange_Lead;
}

item(FEAT_TRAINS, Item_Pullman_MBTACars_Liv1_Orange, 1540) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_MBTA_ORANGE);
        introduction_date:                date(1957,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             104;
        cargo_capacity:                  169/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Pullman_MBTACars_Liv1_Orange;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_MBTACars_Liv1_Orange_last;
        can_attach_wagon: sw_Pullman_MBTACars_Orange_attach;
        purchase: spriteset_Pullman_MBTACars_Liv1_Orange_Purchase;
        additional_text: string(STR_INFO_PULLMAN_MBTA_ORANGE);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_MBTACars_Liv1_Orange_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (169/param_capacity_mod);
        power:                            400;
		weight:                        28;
		running_cost_factor:             26;
    }
}

//Pullman_MBTACars_Liv2_Orange
spriteset(spriteset_Pullman_MBTACars_Liv2_Orange_Purchase,   "gfx/Pullman_MBTACars_Liv2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Pullman_MBTACars_Liv2_Orange_Lead,   "gfx/Pullman_MBTACars_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_MBTACars_Liv2_Orange_Rear,   "gfx/Pullman_MBTACars_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_MBTACars_Liv2_Orange_Trailer,   "gfx/Pullman_MBTACars_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_MBTACars_Liv2_Orange_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_MBTACars_Liv2_Orange_Rear;
    spriteset_Pullman_MBTACars_Liv2_Orange_Lead;
}

item(FEAT_TRAINS, Item_Pullman_MBTACars_Liv2_Orange, 1541) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_MBTA_ORANGE);
        introduction_date:                date(1957,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             104;
        cargo_capacity:                  169/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Pullman_MBTACars_Liv1_Orange;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_MBTACars_Liv2_Orange_last;
        can_attach_wagon: sw_Pullman_MBTACars_Orange_attach;
        purchase: spriteset_Pullman_MBTACars_Liv2_Orange_Purchase;
        additional_text: string(STR_INFO_PULLMAN_MBTA_ORANGE);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_MBTACars_Liv2_Orange_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (169/param_capacity_mod);
        power:                            400;
		weight:                        28;
		running_cost_factor:             26;
    }
}

//150Series_Liv1
spriteset(spriteset_SLCC_150Series_Liv1_Purchase,   "gfx/SLCC_6000Series_Liv1.png") {template_purchase_7(187, 21)}
spriteset(spriteset_SLCC_150Series_Liv1,   "gfx/SLCC_6000Series_Liv1.png") {template_7(187, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_150Series_Liv1, 1601) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_150SERIES);
        introduction_date:                date(1961,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        22 ton;
        speed:                            50 mph;
        power:                            220 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SLCC_150Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_150Series_Liv1;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_150Series_Liv1_Purchase;
        additional_text: string(STR_INFO_SLCC_150SERIES);
		reverse_build_probability: return 50;
}
}

//150Series_Liv2
spriteset(spriteset_SLCC_150Series_Liv2_Purchase,   "gfx/SLCC_6000Series_Liv2.png") {template_purchase_7(187, 21)}
spriteset(spriteset_SLCC_150Series_Liv2,   "gfx/SLCC_6000Series_Liv2.png") {template_7(187, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_150Series_Liv2, 1602) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_150SERIES);
        introduction_date:                date(1961,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        22 ton;
        speed:                            50 mph;
        power:                            220 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SLCC_150Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_150Series_Liv2;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_150Series_Liv2_Purchase;
        additional_text: string(STR_INFO_SLCC_150SERIES);
		reverse_build_probability: return 50;
}
}

//150Series_Liv3
spriteset(spriteset_SLCC_150Series_Liv3_Purchase,   "gfx/SLCC_6000Series_Liv3.png") {template_purchase_7(187, 21)}
spriteset(spriteset_SLCC_150Series_Liv3,   "gfx/SLCC_6000Series_Liv3.png") {template_7(187, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_150Series_Liv3, 1603) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_150SERIES);
        introduction_date:                date(1961,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        22 ton;
        speed:                            50 mph;
        power:                            220 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SLCC_150Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_150Series_Liv3;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_150Series_Liv3_Purchase;
        additional_text: string(STR_INFO_SLCC_150SERIES);
		reverse_build_probability: return 50;
}
}

//150Series_RedandBlue1
spriteset(spriteset_SLCC_150Series_RedandBlue1_Purchase,   "gfx/SLCC_6000Series_RedandBlue1.png") {template_purchase_7(187, 21)}
spriteset(spriteset_SLCC_150Series_RedandBlue1,   "gfx/SLCC_6000Series_RedandBlue1.png") {template_7(187, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_150Series_RedandBlue1, 1604) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_150SERIES);
        introduction_date:                date(1961,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        22 ton;
        speed:                            50 mph;
        power:                            220 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SLCC_150Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_150Series_RedandBlue1;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_150Series_RedandBlue1_Purchase;
        additional_text: string(STR_INFO_SLCC_150SERIES);
		reverse_build_probability: return 50;
}
}

//150Series_RedandBlue2
spriteset(spriteset_SLCC_150Series_RedandBlue2_Purchase,   "gfx/SLCC_6000Series_RedandBlue2.png") {template_purchase_7(187, 21)}
spriteset(spriteset_SLCC_150Series_RedandBlue2,   "gfx/SLCC_6000Series_RedandBlue2.png") {template_7(187, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_150Series_RedandBlue2, 1605) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_150SERIES);
        introduction_date:                date(1961,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        22 ton;
        speed:                            50 mph;
        power:                            220 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SLCC_150Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_150Series_RedandBlue2;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_150Series_RedandBlue2_Purchase;
        additional_text: string(STR_INFO_SLCC_150SERIES);
		reverse_build_probability: return 50;
}
}

//150Series_SEPTA
spriteset(spriteset_SLCC_150Series_SEPTA_Purchase,   "gfx/SLCC_6000Series_SEPTA.png") {template_purchase_7(187, 21)}
spriteset(spriteset_SLCC_150Series_SEPTA,   "gfx/SLCC_6000Series_SEPTA.png") {template_7(187, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_150Series_SEPTA, 1606) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_150SERIES);
        introduction_date:                date(1961,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        22 ton;
        speed:                            50 mph;
        power:                            220 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SLCC_150Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_150Series_SEPTA;
        can_attach_wagon: sw_CTA_Metal_attach;
        purchase: spriteset_SLCC_150Series_SEPTA_Purchase;
        additional_text: string(STR_INFO_SLCC_150SERIES);
		reverse_build_probability: return 50;
}
}

switch(FEAT_TRAINS, SELF, sw_Pullman_2000Series_attach, vehicle_type_id){
	Item_Pullman_2000Series_TwoTone    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_2000Series_RedandBlue1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_2000Series_RedandBlue2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_2000Series_Dark     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Pullman_2000Series_TwoTone
spriteset(spriteset_Pullman_2000Series_TwoTone_Purchase,   "gfx/Pullman_2000Series_TwoTone.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Pullman_2000Series_TwoTone_Lead,   "gfx/Pullman_2000Series_TwoTone.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_2000Series_TwoTone_Rear,   "gfx/Pullman_2000Series_TwoTone.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_2000Series_TwoTone_Trailer,   "gfx/Pullman_2000Series_TwoTone.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_2000Series_TwoTone_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_2000Series_TwoTone_Rear;
    spriteset_Pullman_2000Series_TwoTone_Lead;
}

item(FEAT_TRAINS, Item_Pullman_2000Series_TwoTone, 1641) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_2000SERIES);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            65 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             104;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Pullman_2000Series_TwoTone;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_2000Series_TwoTone_last;
        can_attach_wagon: sw_Pullman_2000Series_attach;
        purchase: spriteset_Pullman_2000Series_TwoTone_Purchase;
        additional_text: string(STR_INFO_PULLMAN_2000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_2000Series_TwoTone_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        28;
		running_cost_factor:             26;
    }
}

//Pullman_2000Series_RedandBlue1
spriteset(spriteset_Pullman_2000Series_RedandBlue1_Purchase,   "gfx/Pullman_2000Series_RedandBlue1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Pullman_2000Series_RedandBlue1_Lead,   "gfx/Pullman_2000Series_RedandBlue1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_2000Series_RedandBlue1_Rear,   "gfx/Pullman_2000Series_RedandBlue1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_2000Series_RedandBlue1_Trailer,   "gfx/Pullman_2000Series_RedandBlue1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_2000Series_RedandBlue1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_2000Series_RedandBlue1_Rear;
    spriteset_Pullman_2000Series_RedandBlue1_Lead;
}

item(FEAT_TRAINS, Item_Pullman_2000Series_RedandBlue1, 1642) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_2000SERIES);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            65 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             104;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Pullman_2000Series_TwoTone;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_2000Series_RedandBlue1_last;
        can_attach_wagon: sw_Pullman_2000Series_attach;
        purchase: spriteset_Pullman_2000Series_RedandBlue1_Purchase;
        additional_text: string(STR_INFO_PULLMAN_2000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_2000Series_RedandBlue1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        28;
		running_cost_factor:             26;
    }
}

//Pullman_2000Series_RedandBlue2
spriteset(spriteset_Pullman_2000Series_RedandBlue2_Purchase,   "gfx/Pullman_2000Series_RedandBlue2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Pullman_2000Series_RedandBlue2_Lead,   "gfx/Pullman_2000Series_RedandBlue2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_2000Series_RedandBlue2_Rear,   "gfx/Pullman_2000Series_RedandBlue2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_2000Series_RedandBlue2_Trailer,   "gfx/Pullman_2000Series_RedandBlue2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_2000Series_RedandBlue2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_2000Series_RedandBlue2_Rear;
    spriteset_Pullman_2000Series_RedandBlue2_Lead;
}

item(FEAT_TRAINS, Item_Pullman_2000Series_RedandBlue2, 1643) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_2000SERIES);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            65 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             104;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Pullman_2000Series_TwoTone;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_2000Series_RedandBlue2_last;
        can_attach_wagon: sw_Pullman_2000Series_attach;
        purchase: spriteset_Pullman_2000Series_RedandBlue2_Purchase;
        additional_text: string(STR_INFO_PULLMAN_2000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_2000Series_RedandBlue2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        28;
		running_cost_factor:             26;
    }
}

//Pullman_2000Series_Dark
spriteset(spriteset_Pullman_2000Series_Dark_Purchase,   "gfx/Pullman_2000Series_Dark.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Pullman_2000Series_Dark_Lead,   "gfx/Pullman_2000Series_Dark.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_2000Series_Dark_Rear,   "gfx/Pullman_2000Series_Dark.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_2000Series_Dark_Trailer,   "gfx/Pullman_2000Series_Dark.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_2000Series_Dark_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_2000Series_Dark_Rear;
    spriteset_Pullman_2000Series_Dark_Lead;
}

item(FEAT_TRAINS, Item_Pullman_2000Series_Dark, 1644) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_2000SERIES);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            65 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             104;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Pullman_2000Series_TwoTone;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_2000Series_Dark_last;
        can_attach_wagon: sw_Pullman_2000Series_attach;
        purchase: spriteset_Pullman_2000Series_Dark_Purchase;
        additional_text: string(STR_INFO_PULLMAN_2000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_2000Series_Dark_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        28;
		running_cost_factor:             26;
    }
}

switch(FEAT_TRAINS, SELF, sw_Budd_2200Series_attach, vehicle_type_id){
	Item_Budd_2200Series_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_2200Series_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_2200Series_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_2200Series_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_2200Series_Silver
spriteset(spriteset_Budd_2200Series_Silver_Purchase,   "gfx/Budd_2200Series_Silver.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2200Series_Silver_Lead,   "gfx/Budd_2200Series_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2200Series_Silver_Rear,   "gfx/Budd_2200Series_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2200Series_Silver_Trailer,   "gfx/Budd_2200Series_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2200Series_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2200Series_Silver_Rear;
    spriteset_Budd_2200Series_Silver_Lead;
}

item(FEAT_TRAINS, Item_Budd_2200Series_Silver, 1681) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2200SERIES);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        21 ton;
        speed:                            70 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             96;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2200Series_Silver_last;
        can_attach_wagon: sw_Budd_2200Series_attach;
        purchase: spriteset_Budd_2200Series_Silver_Purchase;
        additional_text: string(STR_INFO_BUDD_2200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2200Series_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        21;
		running_cost_factor:             24;
    }
}

//Budd_2200Series_Liv1
spriteset(spriteset_Budd_2200Series_Liv1_Purchase,   "gfx/Budd_2200Series_Liv1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2200Series_Liv1_Lead,   "gfx/Budd_2200Series_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2200Series_Liv1_Rear,   "gfx/Budd_2200Series_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2200Series_Liv1_Trailer,   "gfx/Budd_2200Series_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2200Series_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2200Series_Liv1_Rear;
    spriteset_Budd_2200Series_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Budd_2200Series_Liv1, 1682) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2200SERIES);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        21 ton;
        speed:                            70 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             96;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2200Series_Liv1_last;
        can_attach_wagon: sw_Budd_2200Series_attach;
        purchase: spriteset_Budd_2200Series_Liv1_Purchase;
        additional_text: string(STR_INFO_BUDD_2200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2200Series_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        21;
		running_cost_factor:             24;
    }
}

//Budd_2200Series_Liv2
spriteset(spriteset_Budd_2200Series_Liv2_Purchase,   "gfx/Budd_2200Series_Liv2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2200Series_Liv2_Lead,   "gfx/Budd_2200Series_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2200Series_Liv2_Rear,   "gfx/Budd_2200Series_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2200Series_Liv2_Trailer,   "gfx/Budd_2200Series_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2200Series_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2200Series_Liv2_Rear;
    spriteset_Budd_2200Series_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Budd_2200Series_Liv2, 1683) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2200SERIES);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        21 ton;
        speed:                            70 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             96;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2200Series_Liv2_last;
        can_attach_wagon: sw_Budd_2200Series_attach;
        purchase: spriteset_Budd_2200Series_Liv2_Purchase;
        additional_text: string(STR_INFO_BUDD_2200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2200Series_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        21;
		running_cost_factor:             24;
    }
}

//Budd_2200Series_Liv3
spriteset(spriteset_Budd_2200Series_Liv3_Purchase,   "gfx/Budd_2200Series_Liv3.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2200Series_Liv3_Lead,   "gfx/Budd_2200Series_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2200Series_Liv3_Rear,   "gfx/Budd_2200Series_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2200Series_Liv3_Trailer,   "gfx/Budd_2200Series_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2200Series_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2200Series_Liv3_Rear;
    spriteset_Budd_2200Series_Liv3_Lead;
}

item(FEAT_TRAINS, Item_Budd_2200Series_Liv3, 1684) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2200SERIES);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        21 ton;
        speed:                            70 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             96;
        cargo_capacity:                  165/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2200Series_Liv3_last;
        can_attach_wagon: sw_Budd_2200Series_attach;
        purchase: spriteset_Budd_2200Series_Liv3_Purchase;
        additional_text: string(STR_INFO_BUDD_2200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2200Series_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (165/param_capacity_mod);
        power:                            400;
		weight:                        21;
		running_cost_factor:             24;
    }
}

switch(FEAT_TRAINS, SELF, sw_Budd_2600Series_attach, vehicle_type_id){
	Item_Budd_2600Series_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_2600Series_RedandBlue    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_2600Series_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_2600Series_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_2600Series_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_2600Series_Silver
spriteset(spriteset_Budd_2600Series_Silver_Purchase,   "gfx/Budd_2600Series_Silver.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2600Series_Silver_Lead,   "gfx/Budd_2600Series_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2600Series_Silver_Rear,   "gfx/Budd_2600Series_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2600Series_Silver_Trailer,   "gfx/Budd_2600Series_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2600Series_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2600Series_Silver_Rear;
    spriteset_Budd_2600Series_Silver_Lead;
}

item(FEAT_TRAINS, Item_Budd_2600Series_Silver, 1801) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2600SERIES);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            880 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             100;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2600Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2600Series_Silver_last;
        can_attach_wagon: sw_Budd_2600Series_attach;
        purchase: spriteset_Budd_2600Series_Silver_Purchase;
        additional_text: string(STR_INFO_BUDD_2600SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2600Series_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            440;
		weight:                        24;
		running_cost_factor:             25;
    }
}

//Budd_2600Series_RedandBlue
spriteset(spriteset_Budd_2600Series_RedandBlue_Purchase,   "gfx/Budd_2600Series_RedandBlue.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2600Series_RedandBlue_Lead,   "gfx/Budd_2600Series_RedandBlue.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2600Series_RedandBlue_Rear,   "gfx/Budd_2600Series_RedandBlue.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2600Series_RedandBlue_Trailer,   "gfx/Budd_2600Series_RedandBlue.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2600Series_RedandBlue_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2600Series_RedandBlue_Rear;
    spriteset_Budd_2600Series_RedandBlue_Lead;
}

item(FEAT_TRAINS, Item_Budd_2600Series_RedandBlue, 1802) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2600SERIES);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            880 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             100;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2600Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2600Series_RedandBlue_last;
        can_attach_wagon: sw_Budd_2600Series_attach;
        purchase: spriteset_Budd_2600Series_RedandBlue_Purchase;
        additional_text: string(STR_INFO_BUDD_2600SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2600Series_RedandBlue_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            440;
		weight:                        24;
		running_cost_factor:             25;
    }
}

//Budd_2600Series_Liv1
spriteset(spriteset_Budd_2600Series_Liv1_Purchase,   "gfx/Budd_2600Series_Liv1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2600Series_Liv1_Lead,   "gfx/Budd_2600Series_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2600Series_Liv1_Rear,   "gfx/Budd_2600Series_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2600Series_Liv1_Trailer,   "gfx/Budd_2600Series_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2600Series_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2600Series_Liv1_Rear;
    spriteset_Budd_2600Series_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Budd_2600Series_Liv1, 1803) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2600SERIES);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            880 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             100;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2600Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2600Series_Liv1_last;
        can_attach_wagon: sw_Budd_2600Series_attach;
        purchase: spriteset_Budd_2600Series_Liv1_Purchase;
        additional_text: string(STR_INFO_BUDD_2600SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2600Series_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            440;
		weight:                        24;
		running_cost_factor:             25;
    }
}

//Budd_2600Series_Liv2
spriteset(spriteset_Budd_2600Series_Liv2_Purchase,   "gfx/Budd_2600Series_Liv2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2600Series_Liv2_Lead,   "gfx/Budd_2600Series_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2600Series_Liv2_Rear,   "gfx/Budd_2600Series_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2600Series_Liv2_Trailer,   "gfx/Budd_2600Series_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2600Series_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2600Series_Liv2_Rear;
    spriteset_Budd_2600Series_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Budd_2600Series_Liv2, 1804) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2600SERIES);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            880 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             100;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2600Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2600Series_Liv2_last;
        can_attach_wagon: sw_Budd_2600Series_attach;
        purchase: spriteset_Budd_2600Series_Liv2_Purchase;
        additional_text: string(STR_INFO_BUDD_2600SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2600Series_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            440;
		weight:                        24;
		running_cost_factor:             25;
    }
}

//Budd_2600Series_Liv3
spriteset(spriteset_Budd_2600Series_Liv3_Purchase,   "gfx/Budd_2600Series_Liv3.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Budd_2600Series_Liv3_Lead,   "gfx/Budd_2600Series_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_2600Series_Liv3_Rear,   "gfx/Budd_2600Series_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_2600Series_Liv3_Trailer,   "gfx/Budd_2600Series_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_2600Series_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_2600Series_Liv3_Rear;
    spriteset_Budd_2600Series_Liv3_Lead;
}

item(FEAT_TRAINS, Item_Budd_2600Series_Liv3, 1805) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_2600SERIES);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            880 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             100;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_2600Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_2600Series_Liv3_last;
        can_attach_wagon: sw_Budd_2600Series_attach;
        purchase: spriteset_Budd_2600Series_Liv3_Purchase;
        additional_text: string(STR_INFO_BUDD_2600SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_2600Series_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            440;
		weight:                        24;
		running_cost_factor:             25;
    }
}

switch(FEAT_TRAINS, SELF, sw_MK_3200Series_attach, vehicle_type_id){
	Item_MK_3200Series_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MK_3200Series_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MK_3200Series_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MK_3200Series_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//MK_3200Series_Silver
spriteset(spriteset_MK_3200Series_Silver_Purchase,   "gfx/MK_3200Series_Silver.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_MK_3200Series_Silver_Lead,   "gfx/MK_3200Series_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_MK_3200Series_Silver_Rear,   "gfx/MK_3200Series_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_MK_3200Series_Silver_Trailer,   "gfx/MK_3200Series_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_MK_3200Series_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_MK_3200Series_Silver_Rear;
    spriteset_MK_3200Series_Silver_Lead;
}

item(FEAT_TRAINS, Item_MK_3200Series_Silver, 1901) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_MK_3200SERIES);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1048 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_MK_3200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_MK_3200Series_Silver_last;
        can_attach_wagon: sw_MK_3200Series_attach;
        purchase: spriteset_MK_3200Series_Silver_Purchase;
        additional_text: string(STR_INFO_MK_3200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_MK_3200Series_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            524;
		weight:                        24;
		running_cost_factor:             27;
    }
}

//MK_3200Series_Liv1
spriteset(spriteset_MK_3200Series_Liv1_Purchase,   "gfx/MK_3200Series_Liv1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_MK_3200Series_Liv1_Lead,   "gfx/MK_3200Series_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_MK_3200Series_Liv1_Rear,   "gfx/MK_3200Series_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_MK_3200Series_Liv1_Trailer,   "gfx/MK_3200Series_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_MK_3200Series_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_MK_3200Series_Liv1_Rear;
    spriteset_MK_3200Series_Liv1_Lead;
}

item(FEAT_TRAINS, Item_MK_3200Series_Liv1, 1902) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_MK_3200SERIES);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1048 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_MK_3200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_MK_3200Series_Liv1_last;
        can_attach_wagon: sw_MK_3200Series_attach;
        purchase: spriteset_MK_3200Series_Liv1_Purchase;
        additional_text: string(STR_INFO_MK_3200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_MK_3200Series_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            524;
		weight:                        24;
		running_cost_factor:             27;
    }
}

//MK_3200Series_Liv2
spriteset(spriteset_MK_3200Series_Liv2_Purchase,   "gfx/MK_3200Series_Liv2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_MK_3200Series_Liv2_Lead,   "gfx/MK_3200Series_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_MK_3200Series_Liv2_Rear,   "gfx/MK_3200Series_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_MK_3200Series_Liv2_Trailer,   "gfx/MK_3200Series_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_MK_3200Series_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_MK_3200Series_Liv2_Rear;
    spriteset_MK_3200Series_Liv2_Lead;
}

item(FEAT_TRAINS, Item_MK_3200Series_Liv2, 1903) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_MK_3200SERIES);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1048 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_MK_3200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_MK_3200Series_Liv2_last;
        can_attach_wagon: sw_MK_3200Series_attach;
        purchase: spriteset_MK_3200Series_Liv2_Purchase;
        additional_text: string(STR_INFO_MK_3200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_MK_3200Series_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            524;
		weight:                        24;
		running_cost_factor:             27;
    }
}

//MK_3200Series_Liv3
spriteset(spriteset_MK_3200Series_Liv3_Purchase,   "gfx/MK_3200Series_Liv3.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_MK_3200Series_Liv3_Lead,   "gfx/MK_3200Series_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_MK_3200Series_Liv3_Rear,   "gfx/MK_3200Series_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_MK_3200Series_Liv3_Trailer,   "gfx/MK_3200Series_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_MK_3200Series_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_MK_3200Series_Liv3_Rear;
    spriteset_MK_3200Series_Liv3_Lead;
}

item(FEAT_TRAINS, Item_MK_3200Series_Liv3, 1904) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_MK_3200SERIES);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1048 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_MK_3200Series_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_MK_3200Series_Liv3_last;
        can_attach_wagon: sw_MK_3200Series_attach;
        purchase: spriteset_MK_3200Series_Liv3_Purchase;
        additional_text: string(STR_INFO_MK_3200SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_MK_3200Series_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            524;
		weight:                        24;
		running_cost_factor:             27;
    }
}

switch(FEAT_TRAINS, SELF, sw_Adtranz_M4_attach, vehicle_type_id){
	Item_Adtranz_M4_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_M4_SEPTA    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_M4_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_M4_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_M4_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Adtranz_M4_Silver
spriteset(spriteset_Adtranz_M4_Silver_Purchase,   "gfx/Adtranz_M4_Silver.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Adtranz_M4_Silver_Lead,   "gfx/Adtranz_M4_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Adtranz_M4_Silver_Rear,   "gfx/Adtranz_M4_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Adtranz_M4_Silver_Trailer,   "gfx/Adtranz_M4_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_M4_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Adtranz_M4_Silver_Rear;
    spriteset_Adtranz_M4_Silver_Lead;
}

item(FEAT_TRAINS, Item_Adtranz_M4_Silver, 1941) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_M4);
        introduction_date:                date(1997,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Adtranz_M4_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_M4_Silver_last;
        can_attach_wagon: sw_Adtranz_M4_attach;
        purchase: spriteset_Adtranz_M4_Silver_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_M4);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_M4_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            550;
		weight:                        24;
		running_cost_factor:             27;
    }
}

//Adtranz_M4_SEPTA
spriteset(spriteset_Adtranz_M4_SEPTA_Purchase,   "gfx/Adtranz_M4_SEPTA.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Adtranz_M4_SEPTA_Lead,   "gfx/Adtranz_M4_SEPTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Adtranz_M4_SEPTA_Rear,   "gfx/Adtranz_M4_SEPTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Adtranz_M4_SEPTA_Trailer,   "gfx/Adtranz_M4_SEPTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_M4_SEPTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Adtranz_M4_SEPTA_Rear;
    spriteset_Adtranz_M4_SEPTA_Lead;
}

item(FEAT_TRAINS, Item_Adtranz_M4_SEPTA, 1942) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_M4);
        introduction_date:                date(1997,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Adtranz_M4_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_M4_SEPTA_last;
        can_attach_wagon: sw_Adtranz_M4_attach;
        purchase: spriteset_Adtranz_M4_SEPTA_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_M4);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_M4_SEPTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            550;
		weight:                        24;
		running_cost_factor:             27;
    }
}

//Adtranz_M4_Liv1
spriteset(spriteset_Adtranz_M4_Liv1_Purchase,   "gfx/Adtranz_M4_Liv1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Adtranz_M4_Liv1_Lead,   "gfx/Adtranz_M4_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Adtranz_M4_Liv1_Rear,   "gfx/Adtranz_M4_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Adtranz_M4_Liv1_Trailer,   "gfx/Adtranz_M4_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_M4_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Adtranz_M4_Liv1_Rear;
    spriteset_Adtranz_M4_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Adtranz_M4_Liv1, 1943) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_M4);
        introduction_date:                date(1997,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Adtranz_M4_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_M4_Liv1_last;
        can_attach_wagon: sw_Adtranz_M4_attach;
        purchase: spriteset_Adtranz_M4_Liv1_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_M4);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_M4_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            550;
		weight:                        24;
		running_cost_factor:             27;
    }
}

//Adtranz_M4_Liv2
spriteset(spriteset_Adtranz_M4_Liv2_Purchase,   "gfx/Adtranz_M4_Liv2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Adtranz_M4_Liv2_Lead,   "gfx/Adtranz_M4_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Adtranz_M4_Liv2_Rear,   "gfx/Adtranz_M4_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Adtranz_M4_Liv2_Trailer,   "gfx/Adtranz_M4_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_M4_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Adtranz_M4_Liv2_Rear;
    spriteset_Adtranz_M4_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Adtranz_M4_Liv2, 1944) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_M4);
        introduction_date:                date(1997,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Adtranz_M4_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_M4_Liv2_last;
        can_attach_wagon: sw_Adtranz_M4_attach;
        purchase: spriteset_Adtranz_M4_Liv2_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_M4);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_M4_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            550;
		weight:                        24;
		running_cost_factor:             27;
    }
}

//Adtranz_M4_Liv3
spriteset(spriteset_Adtranz_M4_Liv3_Purchase,   "gfx/Adtranz_M4_Liv3.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Adtranz_M4_Liv3_Lead,   "gfx/Adtranz_M4_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Adtranz_M4_Liv3_Rear,   "gfx/Adtranz_M4_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Adtranz_M4_Liv3_Trailer,   "gfx/Adtranz_M4_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_M4_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Adtranz_M4_Liv3_Rear;
    spriteset_Adtranz_M4_Liv3_Lead;
}

item(FEAT_TRAINS, Item_Adtranz_M4_Liv3, 1945) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_M4);
        introduction_date:                date(1997,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             170;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Adtranz_M4_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_M4_Liv3_last;
        can_attach_wagon: sw_Adtranz_M4_attach;
        purchase: spriteset_Adtranz_M4_Liv3_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_M4);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_M4_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            550;
		weight:                        24;
		running_cost_factor:             27;
    }
}

switch(FEAT_TRAINS, SELF, sw_CRRC_7000Series_attach, vehicle_type_id){
	Item_CRRC_7000Series_CTA    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_CRRC_7000Series_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_CRRC_7000Series_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_CRRC_7000Series_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//CRRC_7000Series_CTA
spriteset(spriteset_CRRC_7000Series_CTA_Purchase,   "gfx/CRRC_7000Series_CTA.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_CRRC_7000Series_CTA_Lead,   "gfx/CRRC_7000Series_CTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_7000Series_CTA_Rear,   "gfx/CRRC_7000Series_CTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_7000Series_CTA_Trailer,   "gfx/CRRC_7000Series_CTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_7000Series_CTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_7000Series_CTA_Rear;
    spriteset_CRRC_7000Series_CTA_Lead;
}

item(FEAT_TRAINS, Item_CRRC_7000Series_CTA, 2201) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_7000SERIES);
        introduction_date:                date(2021,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            70 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             120;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_CRRC_7000Series_CTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_7000Series_CTA_last;
        can_attach_wagon: sw_CRRC_7000Series_attach;
        purchase: spriteset_CRRC_7000Series_CTA_Purchase;
        additional_text: string(STR_INFO_CRRC_7000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_7000Series_CTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (180/param_capacity_mod);
        power:                            600;
		weight:                        28;
		running_cost_factor:             30;
    }
}

//CRRC_7000Series_Liv1
spriteset(spriteset_CRRC_7000Series_Liv1_Purchase,   "gfx/CRRC_7000Series_Liv1.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_CRRC_7000Series_Liv1_Lead,   "gfx/CRRC_7000Series_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_7000Series_Liv1_Rear,   "gfx/CRRC_7000Series_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_7000Series_Liv1_Trailer,   "gfx/CRRC_7000Series_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_7000Series_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_7000Series_Liv1_Rear;
    spriteset_CRRC_7000Series_Liv1_Lead;
}

item(FEAT_TRAINS, Item_CRRC_7000Series_Liv1, 2202) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_7000SERIES);
        introduction_date:                date(2021,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            70 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             120;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_CRRC_7000Series_CTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_7000Series_Liv1_last;
        can_attach_wagon: sw_CRRC_7000Series_attach;
        purchase: spriteset_CRRC_7000Series_Liv1_Purchase;
        additional_text: string(STR_INFO_CRRC_7000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_7000Series_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (180/param_capacity_mod);
        power:                            600;
		weight:                        28;
		running_cost_factor:             30;
    }
}

//CRRC_7000Series_Liv2
spriteset(spriteset_CRRC_7000Series_Liv2_Purchase,   "gfx/CRRC_7000Series_Liv2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_CRRC_7000Series_Liv2_Lead,   "gfx/CRRC_7000Series_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_7000Series_Liv2_Rear,   "gfx/CRRC_7000Series_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_7000Series_Liv2_Trailer,   "gfx/CRRC_7000Series_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_7000Series_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_7000Series_Liv2_Rear;
    spriteset_CRRC_7000Series_Liv2_Lead;
}

item(FEAT_TRAINS, Item_CRRC_7000Series_Liv2, 2203) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_7000SERIES);
        introduction_date:                date(2021,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            70 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             120;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_CRRC_7000Series_CTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_7000Series_Liv2_last;
        can_attach_wagon: sw_CRRC_7000Series_attach;
        purchase: spriteset_CRRC_7000Series_Liv2_Purchase;
        additional_text: string(STR_INFO_CRRC_7000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_7000Series_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (180/param_capacity_mod);
        power:                            600;
		weight:                        28;
		running_cost_factor:             30;
    }
}

//CRRC_7000Series_Liv3
spriteset(spriteset_CRRC_7000Series_Liv3_Purchase,   "gfx/CRRC_7000Series_Liv3.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_CRRC_7000Series_Liv3_Lead,   "gfx/CRRC_7000Series_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_7000Series_Liv3_Rear,   "gfx/CRRC_7000Series_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_7000Series_Liv3_Trailer,   "gfx/CRRC_7000Series_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_7000Series_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_7000Series_Liv3_Rear;
    spriteset_CRRC_7000Series_Liv3_Lead;
}

item(FEAT_TRAINS, Item_CRRC_7000Series_Liv3, 2204) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_7000SERIES);
        introduction_date:                date(2021,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        28 ton;
        speed:                            70 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             120;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_CRRC_7000Series_CTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_7000Series_Liv3_last;
        can_attach_wagon: sw_CRRC_7000Series_attach;
        purchase: spriteset_CRRC_7000Series_Liv3_Purchase;
        additional_text: string(STR_INFO_CRRC_7000SERIES);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_7000Series_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (180/param_capacity_mod);
        power:                            600;
		weight:                        28;
		running_cost_factor:             30;
    }
}

switch(FEAT_TRAINS, SELF, sw_Hitachi_M5_attach, vehicle_type_id){
	Item_Hitachi_M5_SEPTA    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Hitachi_M5_SEPTA2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Hitachi_M5_SEPTA
spriteset(spriteset_Hitachi_M5_SEPTA_Purchase,   "gfx/Hitachi_M5_SEPTA.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Hitachi_M5_SEPTA_Lead,   "gfx/Hitachi_M5_SEPTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_M5_SEPTA_Rear,   "gfx/Hitachi_M5_SEPTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_M5_SEPTA_Trailer,   "gfx/Hitachi_M5_SEPTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_M5_SEPTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_M5_SEPTA_Rear;
    spriteset_Hitachi_M5_SEPTA_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_M5_SEPTA, 2241) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI_M5);
        introduction_date:                date(2029,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             130;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_M5_SEPTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_M5_SEPTA_last;
        can_attach_wagon: sw_Hitachi_M5_attach;
        purchase: spriteset_Hitachi_M5_SEPTA_Purchase;
        additional_text: string(STR_INFO_HITACHI_M5);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_M5_SEPTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (180/param_capacity_mod);
        power:                            600;
		weight:                        24;
		running_cost_factor:             32;
    }
}

//Hitachi_M5_SEPTA2
spriteset(spriteset_Hitachi_M5_SEPTA2_Purchase,   "gfx/Hitachi_M5_SEPTA2.png") {template_purchase_77mu(7, 21)}
spriteset(spriteset_Hitachi_M5_SEPTA2_Lead,   "gfx/Hitachi_M5_SEPTA2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_M5_SEPTA2_Rear,   "gfx/Hitachi_M5_SEPTA2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_M5_SEPTA2_Trailer,   "gfx/Hitachi_M5_SEPTA2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_M5_SEPTA2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_M5_SEPTA2_Rear;
    spriteset_Hitachi_M5_SEPTA2_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_M5_SEPTA2, 2242) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI_M5);
        introduction_date:                date(2029,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        24 ton;
        speed:                            70 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             130;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_M5_SEPTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_M5_SEPTA2_last;
        can_attach_wagon: sw_Hitachi_M5_attach;
        purchase: spriteset_Hitachi_M5_SEPTA2_Purchase;
        additional_text: string(STR_INFO_HITACHI_M5);
}

        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_M5_SEPTA2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            7;
        cargo_capacity:                   (180/param_capacity_mod);
        power:                            600;
		weight:                        24;
		running_cost_factor:             32;
    }
}

switch(FEAT_TRAINS, SELF, sw_NYCEarly_attach, vehicle_type_id){
    Item_Composite_IRT    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_LoV_IRT    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Composite_IRT
spriteset(spriteset_Composite_IRT_Purchase,   "gfx/Composite_IRT.png") {template_purchase_7(7, 21)}
spriteset(spriteset_Composite_IRT,   "gfx/Composite_IRT.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Composite_IRT, 5000) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_COMPOSITE);
        introduction_date:                date(1903,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        33 ton;
        speed:                            55 mph;
        power:                            240 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             50;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Composite_IRT;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Composite_IRT;
        can_attach_wagon: sw_NYCEarly_attach;
        purchase: spriteset_Composite_IRT_Purchase;
        additional_text: string(STR_INFO_COMPOSITE);
		reverse_build_probability: return 50;
}
}

//LoV_IRT
spriteset(spriteset_LoV_IRT_Purchase,   "gfx/LoV_IRT.png") {template_purchase_7(7, 21)}
spriteset(spriteset_LoV_IRT,   "gfx/LoV_IRT.png") {template_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_LoV_IRT, 5020) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_LOV);
        introduction_date:                date(1911,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            7;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     3;
        running_cost_factor:             55;
        cargo_capacity:                  160/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_LoV_IRT;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_LoV_IRT;
        can_attach_wagon: sw_NYCEarly_attach;
        purchase: spriteset_LoV_IRT_Purchase;
        additional_text: string(STR_INFO_LOV);
		reverse_build_probability: return 50;
}
}

switch(FEAT_TRAINS, SELF, sw_ABStandard_attach, vehicle_type_id){
    Item_ABStandard_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//ABStandard_Liv1
spriteset(spriteset_ABStandard_Liv1_Purchase,   "gfx/ABStandard_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_ABStandard_Liv1_Lead,   "gfx/ABStandard_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_ABStandard_Liv1_Rear,   "gfx/ABStandard_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_ABStandard_Liv1_Trailer,   "gfx/ABStandard_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_ABStandard_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_ABStandard_Liv1_Rear;
    spriteset_ABStandard_Liv1_Lead;
}

item(FEAT_TRAINS, Item_ABStandard_Liv1, 5120) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ABSTANDARD);
        introduction_date:                date(1915,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        43 ton;
        speed:                            45 mph;
        power:                            480 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     11;
        running_cost_factor:             200;
        cargo_capacity:                  169/param_capacity_mod;
        loading_speed: 50;

        variant_group: Item_ABStandard_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_ABStandard_Liv1_last;
        can_attach_wagon: sw_ABStandard_attach ;
        purchase: spriteset_ABStandard_Liv1_Purchase;
        additional_text: string(STR_INFO_ABSTANDARD);
    }
    livery_override (Item_MU_Trailer){
        default                     : spriteset_ABStandard_Liv1_Trailer ;
        length                      : 8;
        cargo_capacity              : (169/param_capacity_mod) ;
        power                       : 240 ;
		weight:                        43;
		running_cost_factor:             50;

    }
}

switch(FEAT_TRAINS, SELF, sw_PressedSteel_Triplex_attach, vehicle_type_id){
    Item_PressedSteel_Triplex_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//PressedSteel_Triplex_Liv1
spriteset(spriteset_PressedSteel_Triplex_Liv1_Purchase,   "gfx/PressedSteel_Triplex_Liv1.png") {template_purchase_66mu(7, 21)}
spriteset(spriteset_PressedSteel_Triplex_Liv1_Lead,   "gfx/PressedSteel_Triplex_Liv1.png") {template_6(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_PressedSteel_Triplex_Liv1_Rear,   "gfx/PressedSteel_Triplex_Liv1.png") {template_6(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_PressedSteel_Triplex_Liv1_Trailer,   "gfx/PressedSteel_Triplex_Liv1.png") {template_6(7, 89)}

switch(FEAT_TRAINS, SELF, sw_PressedSteel_Triplex_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_PressedSteel_Triplex_Liv1_Rear;
    spriteset_PressedSteel_Triplex_Liv1_Lead;
}

item(FEAT_TRAINS, Item_PressedSteel_Triplex_Liv1, 5200) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TRIPLEX);
        introduction_date:                date(1925,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            6;

        weight:                        32 ton;
        speed:                            45 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             150;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PressedSteel_Triplex_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PressedSteel_Triplex_Liv1_last;
        can_attach_wagon: sw_PressedSteel_Triplex_attach ;
        purchase: spriteset_PressedSteel_Triplex_Liv1_Purchase;
        additional_text: string(STR_INFO_TRIPLEX);
    }
    livery_override (Item_MU_Trailer){
        default                     : spriteset_PressedSteel_Triplex_Liv1_Trailer ;
        length                      : 6;
        cargo_capacity              : (96/param_capacity_mod) ;
        power                       : 200 ;
		weight:                        32;
		running_cost_factor:             38;

    }
}

switch(FEAT_TRAINS, SELF, sw_SLCC_ME1_attach, vehicle_type_id){
    Item_SLCC_ME1_Liv1   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_ME1_Liv2   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_ME1_Liv3   : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//SLCC_ME1_Liv1
spriteset(spriteset_SLCC_ME1_Liv1_Purchase,   "gfx/SLCC_ME1_Liv1.png") {template_purchase_8(7, 21)}
spriteset(spriteset_SLCC_ME1_Liv1,   "gfx/SLCC_ME1_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_ME1_Liv1, 5220) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_ME1);
        introduction_date:                date(1925,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        43 ton;
        speed:                            60 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  145/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_ME1_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_ME1_Liv1;
        can_attach_wagon: sw_SLCC_ME1_attach;
        purchase: spriteset_SLCC_ME1_Liv1_Purchase;
        additional_text: string(STR_INFO_SLCC_ME1);
		reverse_build_probability: return 50;
}
}

//SLCC_ME1_Liv2
spriteset(spriteset_SLCC_ME1_Liv2_Purchase,   "gfx/SLCC_ME1_Liv2.png") {template_purchase_8(7, 21)}
spriteset(spriteset_SLCC_ME1_Liv2,   "gfx/SLCC_ME1_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_ME1_Liv2, 5221) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_ME1);
        introduction_date:                date(1925,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        43 ton;
        speed:                            60 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  145/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_ME1_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_ME1_Liv2;
        can_attach_wagon: sw_SLCC_ME1_attach;
        purchase: spriteset_SLCC_ME1_Liv2_Purchase;
        additional_text: string(STR_INFO_SLCC_ME1);
		reverse_build_probability: return 50;
}
}

//SLCC_ME1_Liv3
spriteset(spriteset_SLCC_ME1_Liv3_Purchase,   "gfx/SLCC_ME1_Liv3.png") {template_purchase_8(7, 21)}
spriteset(spriteset_SLCC_ME1_Liv3,   "gfx/SLCC_ME1_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_SLCC_ME1_Liv3, 5222) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_ME1);
        introduction_date:                date(1925,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        43 ton;
        speed:                            60 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  145/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_SLCC_ME1_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_SLCC_ME1_Liv3;
        can_attach_wagon: sw_SLCC_ME1_attach;
        purchase: spriteset_SLCC_ME1_Liv3_Purchase;
        additional_text: string(STR_INFO_SLCC_ME1);
		reverse_build_probability: return 50;
}
}

//ACF_Arnine
spriteset(spriteset_ACF_Arnine_Purchase,   "gfx/ACF_Arnine.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_Arnine,   "gfx/ACF_Arnine.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

switch(FEAT_TRAINS, SELF, sw_ACF_Arnine_attach, vehicle_type_id){
    Item_ACF_Arnine   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_Arnine_TwoTone   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_Arnine_SRA   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_Arnine_R7A   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_Arnine_MTA   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_Arnine_Work   : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

item(FEAT_TRAINS, Item_ACF_Arnine, 5300) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_ARNINE);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            360 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  185/param_capacity_mod;
        loading_speed: 60;

     //   variant_group: Item_ACF_Arnine;
     //   extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_Arnine;
        can_attach_wagon: sw_ACF_Arnine_attach;
        purchase: spriteset_ACF_Arnine_Purchase;
        additional_text: string(STR_INFO_ACF_ARNINE);
		reverse_build_probability: return 50;
}
}

//ACF_Arnine_TwoTone
spriteset(spriteset_ACF_Arnine_TwoTone_Purchase,   "gfx/ACF_Arnine_TwoTone.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_Arnine_TwoTone,   "gfx/ACF_Arnine_TwoTone.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_Arnine_TwoTone, 5301) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_ARNINE);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            360 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  185/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_Arnine;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_Arnine_TwoTone;
        can_attach_wagon: sw_ACF_Arnine_attach;
        purchase: spriteset_ACF_Arnine_TwoTone_Purchase;
        additional_text: string(STR_INFO_ACF_ARNINE);
		reverse_build_probability: return 50;
}
}

//ACF_Arnine_SRA
spriteset(spriteset_ACF_Arnine_SRA_Purchase,   "gfx/ACF_Arnine_SRA.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_Arnine_SRA,   "gfx/ACF_Arnine_SRA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_Arnine_SRA, 5302) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_ARNINE);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            360 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  185/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_Arnine;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_Arnine_SRA;
        can_attach_wagon: sw_ACF_Arnine_attach;
        purchase: spriteset_ACF_Arnine_SRA_Purchase;
        additional_text: string(STR_INFO_ACF_ARNINE);
		reverse_build_probability: return 50;
}
}

//ACF_Arnine_R7A
spriteset(spriteset_ACF_Arnine_R7A_Purchase,   "gfx/ACF_Arnine_R7A.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_Arnine_R7A,   "gfx/ACF_Arnine_R7A.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_Arnine_R7A, 5303) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_ARNINE);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            360 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  185/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_Arnine;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_Arnine_R7A;
        can_attach_wagon: sw_ACF_Arnine_attach;
        purchase: spriteset_ACF_Arnine_R7A_Purchase;
        additional_text: string(STR_INFO_ACF_ARNINE);
		reverse_build_probability: return 50;
}
}

//ACF_Arnine_MTA
spriteset(spriteset_ACF_Arnine_MTA_Purchase,   "gfx/ACF_Arnine_MTA.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_Arnine_MTA,   "gfx/ACF_Arnine_MTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_Arnine_MTA, 5304) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_ARNINE);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            360 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  185/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_Arnine;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_Arnine_MTA;
        can_attach_wagon: sw_ACF_Arnine_attach;
        purchase: spriteset_ACF_Arnine_MTA_Purchase;
        additional_text: string(STR_INFO_ACF_ARNINE);
		reverse_build_probability: return 50;
}
}

//ACF_Arnine_Work
spriteset(spriteset_ACF_Arnine_Work_Purchase,   "gfx/ACF_Arnine_Work.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_Arnine_Work,   "gfx/ACF_Arnine_Work.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_Arnine_Work, 5305) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_ARNINE);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            360 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             90;
        cargo_capacity:                  185/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_Arnine;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_Arnine_Work;
        can_attach_wagon: sw_ACF_Arnine_attach;
        purchase: spriteset_ACF_Arnine_Work_Purchase;
        additional_text: string(STR_INFO_ACF_ARNINE);
		reverse_build_probability: return 50;
}
}

switch(FEAT_TRAINS, SELF, sw_Budd_R11_attach, vehicle_type_id){
	Item_Budd_R11_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_R11_MTA     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_R11_Silver
spriteset(spriteset_Budd_R11_Silver_Purchase,   "gfx/Budd_R11_Silver.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_R11_Silver_Lead,   "gfx/Budd_R11_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_R11_Silver_Rear,   "gfx/Budd_R11_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_R11_Silver_Trailer,   "gfx/Budd_R11_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_R11_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_R11_Silver_Rear;
    spriteset_Budd_R11_Silver_Lead;
}

item(FEAT_TRAINS, Item_Budd_R11_Silver, 5441) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_R11);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             180;
        cargo_capacity:                  188/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Budd_R11_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_R11_Silver_last;
        can_attach_wagon: sw_Budd_R11_attach;
        purchase: spriteset_Budd_R11_Silver_Purchase;
        additional_text: string(STR_INFO_BUDD_R11);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_R11_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (188/param_capacity_mod);
        power:                            400;
		weight:                        37;
		running_cost_factor:             45;
    }
}

//Budd_R11_MTA
spriteset(spriteset_Budd_R11_MTA_Purchase,   "gfx/Budd_R11_MTA.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_R11_MTA_Lead,   "gfx/Budd_R11_MTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_R11_MTA_Rear,   "gfx/Budd_R11_MTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_R11_MTA_Trailer,   "gfx/Budd_R11_MTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_R11_MTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_R11_MTA_Rear;
    spriteset_Budd_R11_MTA_Lead;
}

item(FEAT_TRAINS, Item_Budd_R11_MTA, 5442) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_R11);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             180;
        cargo_capacity:                  188/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Budd_R11_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_R11_MTA_last;
        can_attach_wagon: sw_Budd_R11_attach;
        purchase: spriteset_Budd_R11_MTA_Purchase;
        additional_text: string(STR_INFO_BUDD_R11);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_R11_MTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (188/param_capacity_mod);
        power:                            400;
		weight:                        37;
		running_cost_factor:             45;
    }
}

switch(FEAT_TRAINS, SELF, sw_GRCW_GSeries_attach, vehicle_type_id){
	Item_GRCW_GSeries_Rocket     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_GRCW_GSeries_Aluminium     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_GRCW_GSeries_Late     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_GRCW_GSeries_BCHydro1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_GRCW_GSeries_BCHydro2     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//GRCW_GSeries_Rocket
spriteset(spriteset_GRCW_GSeries_Rocket_Purchase,   "gfx/GRCW_GSeries_Rocket.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_GRCW_GSeries_Rocket_Lead,   "gfx/GRCW_GSeries_Rocket.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_GRCW_GSeries_Rocket_Rear,   "gfx/GRCW_GSeries_Rocket.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_GRCW_GSeries_Rocket_Trailer,   "gfx/GRCW_GSeries_Rocket.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_GRCW_GSeries_Rocket_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_GRCW_GSeries_Rocket_Rear;
    spriteset_GRCW_GSeries_Rocket_Lead;
}

item(FEAT_TRAINS, Item_GRCW_GSeries_Rocket, 5501) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_GRCW_GSERIES);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_GRCW_GSeries_Rocket;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_GRCW_GSeries_Rocket_last;
        can_attach_wagon: sw_GRCW_GSeries_attach;
        purchase: spriteset_GRCW_GSeries_Rocket_Purchase;
        additional_text: string(STR_INFO_GRCW_GSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_GRCW_GSeries_Rocket_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        38;
		running_cost_factor:             45;
    }
}

//GRCW_GSeries_Aluminium
spriteset(spriteset_GRCW_GSeries_Aluminium_Purchase,   "gfx/GRCW_GSeries_Aluminium.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_GRCW_GSeries_Aluminium_Lead,   "gfx/GRCW_GSeries_Aluminium.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_GRCW_GSeries_Aluminium_Rear,   "gfx/GRCW_GSeries_Aluminium.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_GRCW_GSeries_Aluminium_Trailer,   "gfx/GRCW_GSeries_Aluminium.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_GRCW_GSeries_Aluminium_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_GRCW_GSeries_Aluminium_Rear;
    spriteset_GRCW_GSeries_Aluminium_Lead;
}

item(FEAT_TRAINS, Item_GRCW_GSeries_Aluminium, 5502) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_GRCW_GSERIES);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_GRCW_GSeries_Rocket;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_GRCW_GSeries_Aluminium_last;
        can_attach_wagon: sw_GRCW_GSeries_attach;
        purchase: spriteset_GRCW_GSeries_Aluminium_Purchase;
        additional_text: string(STR_INFO_GRCW_GSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_GRCW_GSeries_Aluminium_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        38;
		running_cost_factor:             45;
    }
}

//GRCW_GSeries_Late
spriteset(spriteset_GRCW_GSeries_Late_Purchase,   "gfx/GRCW_GSeries_Late.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_GRCW_GSeries_Late_Lead,   "gfx/GRCW_GSeries_Late.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_GRCW_GSeries_Late_Rear,   "gfx/GRCW_GSeries_Late.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_GRCW_GSeries_Late_Trailer,   "gfx/GRCW_GSeries_Late.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_GRCW_GSeries_Late_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_GRCW_GSeries_Late_Rear;
    spriteset_GRCW_GSeries_Late_Lead;
}

item(FEAT_TRAINS, Item_GRCW_GSeries_Late, 5503) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_GRCW_GSERIES);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_GRCW_GSeries_Rocket;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_GRCW_GSeries_Late_last;
        can_attach_wagon: sw_GRCW_GSeries_attach;
        purchase: spriteset_GRCW_GSeries_Late_Purchase;
        additional_text: string(STR_INFO_GRCW_GSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_GRCW_GSeries_Late_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        38;
		running_cost_factor:             45;
    }
}

//GRCW_GSeries_BCHydro1
spriteset(spriteset_GRCW_GSeries_BCHydro1_Purchase,   "gfx/GRCW_GSeries_BCHydro1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_GRCW_GSeries_BCHydro1_Lead,   "gfx/GRCW_GSeries_BCHydro1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_GRCW_GSeries_BCHydro1_Rear,   "gfx/GRCW_GSeries_BCHydro1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_GRCW_GSeries_BCHydro1_Trailer,   "gfx/GRCW_GSeries_BCHydro1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_GRCW_GSeries_BCHydro1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_GRCW_GSeries_BCHydro1_Rear;
    spriteset_GRCW_GSeries_BCHydro1_Lead;
}

item(FEAT_TRAINS, Item_GRCW_GSeries_BCHydro1, 5504) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_GRCW_GSERIES);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_GRCW_GSeries_Rocket;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_GRCW_GSeries_BCHydro1_last;
        can_attach_wagon: sw_GRCW_GSeries_attach;
        purchase: spriteset_GRCW_GSeries_BCHydro1_Purchase;
        additional_text: string(STR_INFO_GRCW_GSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_GRCW_GSeries_BCHydro1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        38;
		running_cost_factor:             45;
    }
}

//GRCW_GSeries_BCHydro2
spriteset(spriteset_GRCW_GSeries_BCHydro2_Purchase,   "gfx/GRCW_GSeries_BCHydro2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_GRCW_GSeries_BCHydro2_Lead,   "gfx/GRCW_GSeries_BCHydro2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_GRCW_GSeries_BCHydro2_Rear,   "gfx/GRCW_GSeries_BCHydro2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_GRCW_GSeries_BCHydro2_Trailer,   "gfx/GRCW_GSeries_BCHydro2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_GRCW_GSeries_BCHydro2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_GRCW_GSeries_BCHydro2_Rear;
    spriteset_GRCW_GSeries_BCHydro2_Lead;
}

item(FEAT_TRAINS, Item_GRCW_GSeries_BCHydro2, 5505) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_GRCW_GSERIES);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_GRCW_GSeries_Rocket;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_GRCW_GSeries_BCHydro2_last;
        can_attach_wagon: sw_GRCW_GSeries_attach;
        purchase: spriteset_GRCW_GSeries_BCHydro2_Purchase;
        additional_text: string(STR_INFO_GRCW_GSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_GRCW_GSeries_BCHydro2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        38;
		running_cost_factor:             45;
    }
}

switch(FEAT_TRAINS, SELF, sw_ACF_R16_attach, vehicle_type_id){
	Item_ACF_R16_Redbird1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_R16_Redbird2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_R16_MTA1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_R16_MTA2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_R16_MTA3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_R16_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_ACF_R16_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//ACF_R16_Redbird1
spriteset(spriteset_ACF_R16_Redbird1_Purchase,   "gfx/R16-Redbird_Redbird1.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_R16_Redbird1,   "gfx/R16-Redbird_Redbird1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_R16_Redbird1, 5521) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_R16);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             80;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_R16_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_R16_Redbird1;
        can_attach_wagon: sw_ACF_R16_attach;
        purchase: spriteset_ACF_R16_Redbird1_Purchase;
        additional_text: string(STR_INFO_ACF_R16);
		reverse_build_probability: return 50;
}
}

//ACF_R16_Redbird2
spriteset(spriteset_ACF_R16_Redbird2_Purchase,   "gfx/R16-Redbird_Redbird2.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_R16_Redbird2,   "gfx/R16-Redbird_Redbird2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_R16_Redbird2, 5522) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_R16);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             80;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_R16_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_R16_Redbird2;
        can_attach_wagon: sw_ACF_R16_attach;
        purchase: spriteset_ACF_R16_Redbird2_Purchase;
        additional_text: string(STR_INFO_ACF_R16);
		reverse_build_probability: return 50;
}
}

//ACF_R16_MTA1
spriteset(spriteset_ACF_R16_MTA1_Purchase,   "gfx/R16-Redbird_MTA1.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_R16_MTA1,   "gfx/R16-Redbird_MTA1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_R16_MTA1, 5523) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_R16);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             80;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_R16_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_R16_MTA1;
        can_attach_wagon: sw_ACF_R16_attach;
        purchase: spriteset_ACF_R16_MTA1_Purchase;
        additional_text: string(STR_INFO_ACF_R16);
		reverse_build_probability: return 50;
}
}

//ACF_R16_MTA2
spriteset(spriteset_ACF_R16_MTA2_Purchase,   "gfx/R16-Redbird_MTA2.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_R16_MTA2,   "gfx/R16-Redbird_MTA2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_R16_MTA2, 5524) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_R16);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             80;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_R16_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_R16_MTA2;
        can_attach_wagon: sw_ACF_R16_attach;
        purchase: spriteset_ACF_R16_MTA2_Purchase;
        additional_text: string(STR_INFO_ACF_R16);
		reverse_build_probability: return 50;
}
}

//ACF_R16_MTA3
spriteset(spriteset_ACF_R16_MTA3_Purchase,   "gfx/R16-Redbird_MTA3.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_R16_MTA3,   "gfx/R16-Redbird_MTA3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_R16_MTA3, 5525) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_R16);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             80;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_R16_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_R16_MTA3;
        can_attach_wagon: sw_ACF_R16_attach;
        purchase: spriteset_ACF_R16_MTA3_Purchase;
        additional_text: string(STR_INFO_ACF_R16);
		reverse_build_probability: return 50;
}
}

//ACF_R16_Liv1
spriteset(spriteset_ACF_R16_Liv1_Purchase,   "gfx/R16-Redbird_Liv1.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_R16_Liv1,   "gfx/R16-Redbird_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_R16_Liv1, 5526) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_R16);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             80;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_R16_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_R16_Liv1;
        can_attach_wagon: sw_ACF_R16_attach;
        purchase: spriteset_ACF_R16_Liv1_Purchase;
        additional_text: string(STR_INFO_ACF_R16);
		reverse_build_probability: return 50;
}
}

//ACF_R16_Liv2
spriteset(spriteset_ACF_R16_Liv2_Purchase,   "gfx/R16-Redbird_Liv2.png") {template_purchase_8(7, 21)}
spriteset(spriteset_ACF_R16_Liv2,   "gfx/R16-Redbird_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_ACF_R16_Liv2, 5527) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ACF_R16);
        introduction_date:                date(1956,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            55 mph;
        power:                            400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     6;
        running_cost_factor:             80;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_ACF_R16_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_ACF_R16_Liv2;
        can_attach_wagon: sw_ACF_R16_attach;
        purchase: spriteset_ACF_R16_Liv2_Purchase;
        additional_text: string(STR_INFO_ACF_R16);
		reverse_build_probability: return 50;
}
}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_attach, vehicle_type_id){
	Item_SLCC_Redbird_Redbird1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_Redbird_Redbird2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_Redbird_MTA1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_Redbird_MTA2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_Redbird_MTA3     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_Redbird_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_Redbird_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//SLCC_Redbird_Redbird1
spriteset(spriteset_SLCC_Redbird_Redbird1_Purchase,   "gfx/R16-Redbird_Redbird1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_SLCC_Redbird_Redbird1_Lead,   "gfx/R16-Redbird_Redbird1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_Redbird_Redbird1_Rear,   "gfx/R16-Redbird_Redbird1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_Redbird_Redbird1_Trailer,   "gfx/R16-Redbird_Redbird1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_Redbird1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_Redbird_Redbird1_Rear;
    spriteset_SLCC_Redbird_Redbird1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_Redbird_Redbird1, 5581) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_REDBIRD);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_Redbird_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_Redbird_Redbird1_last;
        can_attach_wagon: sw_SLCC_Redbird_attach;
        purchase: spriteset_SLCC_Redbird_Redbird1_Purchase;
        additional_text: string(STR_INFO_SLCC_REDBIRD);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_Redbird_Redbird1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

//SLCC_Redbird_Redbird2
spriteset(spriteset_SLCC_Redbird_Redbird2_Purchase,   "gfx/R16-Redbird_Redbird2.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_SLCC_Redbird_Redbird2_Lead,   "gfx/R16-Redbird_Redbird2.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_Redbird_Redbird2_Rear,   "gfx/R16-Redbird_Redbird2.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_Redbird_Redbird2_Trailer,   "gfx/R16-Redbird_Redbird2.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_Redbird2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_Redbird_Redbird2_Rear;
    spriteset_SLCC_Redbird_Redbird2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_Redbird_Redbird2, 5582) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_REDBIRD);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_Redbird_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_Redbird_Redbird2_last;
        can_attach_wagon: sw_SLCC_Redbird_attach;
        purchase: spriteset_SLCC_Redbird_Redbird2_Purchase;
        additional_text: string(STR_INFO_SLCC_REDBIRD);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_Redbird_Redbird2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

//SLCC_Redbird_MTA1
spriteset(spriteset_SLCC_Redbird_MTA1_Purchase,   "gfx/R16-Redbird_MTA1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_SLCC_Redbird_MTA1_Lead,   "gfx/R16-Redbird_MTA1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_Redbird_MTA1_Rear,   "gfx/R16-Redbird_MTA1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_Redbird_MTA1_Trailer,   "gfx/R16-Redbird_MTA1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_MTA1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_Redbird_MTA1_Rear;
    spriteset_SLCC_Redbird_MTA1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_Redbird_MTA1, 5583) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_REDBIRD);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_Redbird_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_Redbird_MTA1_last;
        can_attach_wagon: sw_SLCC_Redbird_attach;
        purchase: spriteset_SLCC_Redbird_MTA1_Purchase;
        additional_text: string(STR_INFO_SLCC_REDBIRD);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_Redbird_MTA1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

//SLCC_Redbird_MTA2
spriteset(spriteset_SLCC_Redbird_MTA2_Purchase,   "gfx/R16-Redbird_MTA2.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_SLCC_Redbird_MTA2_Lead,   "gfx/R16-Redbird_MTA2.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_Redbird_MTA2_Rear,   "gfx/R16-Redbird_MTA2.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_Redbird_MTA2_Trailer,   "gfx/R16-Redbird_MTA2.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_MTA2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_Redbird_MTA2_Rear;
    spriteset_SLCC_Redbird_MTA2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_Redbird_MTA2, 5584) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_REDBIRD);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_Redbird_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_Redbird_MTA2_last;
        can_attach_wagon: sw_SLCC_Redbird_attach;
        purchase: spriteset_SLCC_Redbird_MTA2_Purchase;
        additional_text: string(STR_INFO_SLCC_REDBIRD);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_Redbird_MTA2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

//SLCC_Redbird_MTA3
spriteset(spriteset_SLCC_Redbird_MTA3_Purchase,   "gfx/R16-Redbird_MTA3.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_SLCC_Redbird_MTA3_Lead,   "gfx/R16-Redbird_MTA3.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_Redbird_MTA3_Rear,   "gfx/R16-Redbird_MTA3.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_Redbird_MTA3_Trailer,   "gfx/R16-Redbird_MTA3.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_MTA3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_Redbird_MTA3_Rear;
    spriteset_SLCC_Redbird_MTA3_Lead;
}

item(FEAT_TRAINS, Item_SLCC_Redbird_MTA3, 5585) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_REDBIRD);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_Redbird_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_Redbird_MTA3_last;
        can_attach_wagon: sw_SLCC_Redbird_attach;
        purchase: spriteset_SLCC_Redbird_MTA3_Purchase;
        additional_text: string(STR_INFO_SLCC_REDBIRD);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_Redbird_MTA3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

//SLCC_Redbird_Liv1
spriteset(spriteset_SLCC_Redbird_Liv1_Purchase,   "gfx/R16-Redbird_Liv1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_SLCC_Redbird_Liv1_Lead,   "gfx/R16-Redbird_Liv1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_Redbird_Liv1_Rear,   "gfx/R16-Redbird_Liv1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_Redbird_Liv1_Trailer,   "gfx/R16-Redbird_Liv1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_Redbird_Liv1_Rear;
    spriteset_SLCC_Redbird_Liv1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_Redbird_Liv1, 5586) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_REDBIRD);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_Redbird_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_Redbird_Liv1_last;
        can_attach_wagon: sw_SLCC_Redbird_attach;
        purchase: spriteset_SLCC_Redbird_Liv1_Purchase;
        additional_text: string(STR_INFO_SLCC_REDBIRD);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_Redbird_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

//SLCC_Redbird_Liv2
spriteset(spriteset_SLCC_Redbird_Liv2_Purchase,   "gfx/R16-Redbird_Liv2.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_SLCC_Redbird_Liv2_Lead,   "gfx/R16-Redbird_Liv2.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_Redbird_Liv2_Rear,   "gfx/R16-Redbird_Liv2.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_Redbird_Liv2_Trailer,   "gfx/R16-Redbird_Liv2.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_Redbird_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_Redbird_Liv2_Rear;
    spriteset_SLCC_Redbird_Liv2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_Redbird_Liv2, 5587) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_REDBIRD);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  190/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_Redbird_Redbird1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_Redbird_Liv2_last;
        can_attach_wagon: sw_SLCC_Redbird_attach;
        purchase: spriteset_SLCC_Redbird_Liv2_Purchase;
        additional_text: string(STR_INFO_SLCC_REDBIRD);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_Redbird_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (190/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_MSeries_attach, vehicle_type_id){
	Item_Toronto_MHT_Liv1_MSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv2_MSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv3_MSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv4_MSeries     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Toronto_MHT_Liv1_MSeries
spriteset(spriteset_Toronto_MHT_Liv1_MSeries_Purchase,   "gfx/Toronto_MHT_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Toronto_MHT_Liv1_MSeries_Lead,   "gfx/Toronto_MHT_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv1_MSeries_Rear,   "gfx/Toronto_MHT_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv1_MSeries_Trailer,   "gfx/Toronto_MHT_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv1_MSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv1_MSeries_Rear;
    spriteset_Toronto_MHT_Liv1_MSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv1_MSeries, 5600) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_MSERIES);
        introduction_date:                date(1962,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        27 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_MSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv1_MSeries_last;
        can_attach_wagon: sw_Toronto_MHT_MSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv1_MSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_MSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv1_MSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        27;
		running_cost_factor:             40;
    }
}

//Toronto_MHT_Liv2_MSeries
spriteset(spriteset_Toronto_MHT_Liv2_MSeries_Purchase,   "gfx/Toronto_MHT_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Toronto_MHT_Liv2_MSeries_Lead,   "gfx/Toronto_MHT_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv2_MSeries_Rear,   "gfx/Toronto_MHT_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv2_MSeries_Trailer,   "gfx/Toronto_MHT_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv2_MSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv2_MSeries_Rear;
    spriteset_Toronto_MHT_Liv2_MSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv2_MSeries, 5601) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_MSERIES);
        introduction_date:                date(1962,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        27 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_MSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv2_MSeries_last;
        can_attach_wagon: sw_Toronto_MHT_MSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv2_MSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_MSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv2_MSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        27;
		running_cost_factor:             40;
    }
}

//Toronto_MHT_Liv3_MSeries
spriteset(spriteset_Toronto_MHT_Liv3_MSeries_Purchase,   "gfx/Toronto_MHT_Liv3.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Toronto_MHT_Liv3_MSeries_Lead,   "gfx/Toronto_MHT_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv3_MSeries_Rear,   "gfx/Toronto_MHT_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv3_MSeries_Trailer,   "gfx/Toronto_MHT_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv3_MSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv3_MSeries_Rear;
    spriteset_Toronto_MHT_Liv3_MSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv3_MSeries, 5602) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_MSERIES);
        introduction_date:                date(1962,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        27 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_MSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv3_MSeries_last;
        can_attach_wagon: sw_Toronto_MHT_MSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv3_MSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_MSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv3_MSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        27;
		running_cost_factor:             40;
    }
}

//Toronto_MHT_Liv4_MSeries
spriteset(spriteset_Toronto_MHT_Liv4_MSeries_Purchase,   "gfx/Toronto_MHT_Liv4.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Toronto_MHT_Liv4_MSeries_Lead,   "gfx/Toronto_MHT_Liv4.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv4_MSeries_Rear,   "gfx/Toronto_MHT_Liv4.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv4_MSeries_Trailer,   "gfx/Toronto_MHT_Liv4.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv4_MSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv4_MSeries_Rear;
    spriteset_Toronto_MHT_Liv4_MSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv4_MSeries, 5603) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_MSERIES);
        introduction_date:                date(1962,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        27 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_MSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv4_MSeries_last;
        can_attach_wagon: sw_Toronto_MHT_MSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv4_MSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_MSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv4_MSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        27;
		running_cost_factor:             40;
    }
}

switch(FEAT_TRAINS, SELF, sw_Pullman_MBTACars_Red_attach, vehicle_type_id){
	Item_Pullman_MBTACars_Red_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_MBTACars_Red_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Pullman_MBTACars_Red_Liv1
spriteset(spriteset_Pullman_MBTACars_Red_Liv1_Purchase,   "gfx/Pullman_MBTACars_Liv1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Pullman_MBTACars_Red_Liv1_Lead,   "gfx/Pullman_MBTACars_Liv1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_MBTACars_Red_Liv1_Rear,   "gfx/Pullman_MBTACars_Liv1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_MBTACars_Red_Liv1_Trailer,   "gfx/Pullman_MBTACars_Liv1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_MBTACars_Red_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_MBTACars_Red_Liv1_Rear;
    spriteset_Pullman_MBTACars_Red_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Pullman_MBTACars_Red_Liv1, 5620) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_MBTA_RED);
        introduction_date:                date(1963,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Pullman_MBTACars_Red_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_MBTACars_Red_Liv1_last;
        can_attach_wagon: sw_Pullman_MBTACars_Red_attach;
        purchase: spriteset_Pullman_MBTACars_Red_Liv1_Purchase;
        additional_text: string(STR_INFO_PULLMAN_MBTA_RED);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_MBTACars_Red_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

//Pullman_MBTACars_Red_Liv2
spriteset(spriteset_Pullman_MBTACars_Red_Liv2_Purchase,   "gfx/Pullman_MBTACars_Liv2.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Pullman_MBTACars_Red_Liv2_Lead,   "gfx/Pullman_MBTACars_Liv2.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_MBTACars_Red_Liv2_Rear,   "gfx/Pullman_MBTACars_Liv2.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_MBTACars_Red_Liv2_Trailer,   "gfx/Pullman_MBTACars_Liv2.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_MBTACars_Red_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_MBTACars_Red_Liv2_Rear;
    spriteset_Pullman_MBTACars_Red_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Pullman_MBTACars_Red_Liv2, 5621) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_MBTA_RED);
        introduction_date:                date(1963,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            55 mph;
        power:                            800 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             160;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Pullman_MBTACars_Red_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_MBTACars_Red_Liv2_last;
        can_attach_wagon: sw_Pullman_MBTACars_Red_attach;
        purchase: spriteset_Pullman_MBTACars_Red_Liv2_Purchase;
        additional_text: string(STR_INFO_PULLMAN_MBTA_RED);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_MBTACars_Red_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            400;
		weight:                        36;
		running_cost_factor:             40;
    }
}

switch(FEAT_TRAINS, SELF, sw_Budd_R32_attach, vehicle_type_id){
	Item_Budd_R32_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_R32_MTA     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_R32_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_R32_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_R32_Liv3     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_R32_Silver
spriteset(spriteset_Budd_R32_Silver_Purchase,   "gfx/Budd_R32_Silver.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_R32_Silver_Lead,   "gfx/Budd_R32_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_R32_Silver_Rear,   "gfx/Budd_R32_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_R32_Silver_Trailer,   "gfx/Budd_R32_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_R32_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_R32_Silver_Rear;
    spriteset_Budd_R32_Silver_Lead;
}

item(FEAT_TRAINS, Item_Budd_R32_Silver, 5681) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_R32);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Budd_R32_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_R32_Silver_last;
        can_attach_wagon: sw_Budd_R32_attach;
        purchase: spriteset_Budd_R32_Silver_Purchase;
        additional_text: string(STR_INFO_BUDD_R32);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_R32_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//Budd_R32_MTA
spriteset(spriteset_Budd_R32_MTA_Purchase,   "gfx/Budd_R32_MTA.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_R32_MTA_Lead,   "gfx/Budd_R32_MTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_R32_MTA_Rear,   "gfx/Budd_R32_MTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_R32_MTA_Trailer,   "gfx/Budd_R32_MTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_R32_MTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_R32_MTA_Rear;
    spriteset_Budd_R32_MTA_Lead;
}

item(FEAT_TRAINS, Item_Budd_R32_MTA, 5682) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_R32);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Budd_R32_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_R32_MTA_last;
        can_attach_wagon: sw_Budd_R32_attach;
        purchase: spriteset_Budd_R32_MTA_Purchase;
        additional_text: string(STR_INFO_BUDD_R32);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_R32_MTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//Budd_R32_Liv1
spriteset(spriteset_Budd_R32_Liv1_Purchase,   "gfx/Budd_R32_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_R32_Liv1_Lead,   "gfx/Budd_R32_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_R32_Liv1_Rear,   "gfx/Budd_R32_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_R32_Liv1_Trailer,   "gfx/Budd_R32_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_R32_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_R32_Liv1_Rear;
    spriteset_Budd_R32_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Budd_R32_Liv1, 5683) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_R32);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Budd_R32_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_R32_Liv1_last;
        can_attach_wagon: sw_Budd_R32_attach;
        purchase: spriteset_Budd_R32_Liv1_Purchase;
        additional_text: string(STR_INFO_BUDD_R32);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_R32_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//Budd_R32_Liv2
spriteset(spriteset_Budd_R32_Liv2_Purchase,   "gfx/Budd_R32_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_R32_Liv2_Lead,   "gfx/Budd_R32_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_R32_Liv2_Rear,   "gfx/Budd_R32_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_R32_Liv2_Trailer,   "gfx/Budd_R32_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_R32_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_R32_Liv2_Rear;
    spriteset_Budd_R32_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Budd_R32_Liv2, 5684) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_R32);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Budd_R32_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_R32_Liv2_last;
        can_attach_wagon: sw_Budd_R32_attach;
        purchase: spriteset_Budd_R32_Liv2_Purchase;
        additional_text: string(STR_INFO_BUDD_R32);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_R32_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//Budd_R32_Liv3
spriteset(spriteset_Budd_R32_Liv3_Purchase,   "gfx/Budd_R32_Liv3.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_R32_Liv3_Lead,   "gfx/Budd_R32_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_R32_Liv3_Rear,   "gfx/Budd_R32_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_R32_Liv3_Trailer,   "gfx/Budd_R32_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_R32_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_R32_Liv3_Rear;
    spriteset_Budd_R32_Liv3_Lead;
}

item(FEAT_TRAINS, Item_Budd_R32_Liv3, 5685) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_R32);
        introduction_date:                date(1964,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Budd_R32_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_R32_Liv3_last;
        can_attach_wagon: sw_Budd_R32_attach;
        purchase: spriteset_Budd_R32_Liv3_Purchase;
        additional_text: string(STR_INFO_BUDD_R32);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_R32_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_HSeries_attach, vehicle_type_id){
	Item_Toronto_MHT_Liv1_HSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv2_HSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv3_HSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv4_HSeries     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Toronto_MHT_Liv1_HSeries
spriteset(spriteset_Toronto_MHT_Liv1_HSeries_Purchase,   "gfx/Toronto_MHT_Liv1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Toronto_MHT_Liv1_HSeries_Lead,   "gfx/Toronto_MHT_Liv1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv1_HSeries_Rear,   "gfx/Toronto_MHT_Liv1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv1_HSeries_Trailer,   "gfx/Toronto_MHT_Liv1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv1_HSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv1_HSeries_Rear;
    spriteset_Toronto_MHT_Liv1_HSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv1_HSeries, 5690) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_HSERIES);
        introduction_date:                date(1965,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        25 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             170;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_HSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv1_HSeries_last;
        can_attach_wagon: sw_Toronto_MHT_HSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv1_HSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_HSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv1_HSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        25;
		running_cost_factor:             42;
    }
}

//Toronto_MHT_Liv2_HSeries
spriteset(spriteset_Toronto_MHT_Liv2_HSeries_Purchase,   "gfx/Toronto_MHT_Liv2.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Toronto_MHT_Liv2_HSeries_Lead,   "gfx/Toronto_MHT_Liv2.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv2_HSeries_Rear,   "gfx/Toronto_MHT_Liv2.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv2_HSeries_Trailer,   "gfx/Toronto_MHT_Liv2.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv2_HSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv2_HSeries_Rear;
    spriteset_Toronto_MHT_Liv2_HSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv2_HSeries, 5691) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_HSERIES);
        introduction_date:                date(1965,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        25 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             170;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_HSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv2_HSeries_last;
        can_attach_wagon: sw_Toronto_MHT_HSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv2_HSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_HSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv2_HSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        25;
		running_cost_factor:             42;
    }
}

//Toronto_MHT_Liv3_HSeries
spriteset(spriteset_Toronto_MHT_Liv3_HSeries_Purchase,   "gfx/Toronto_MHT_Liv3.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Toronto_MHT_Liv3_HSeries_Lead,   "gfx/Toronto_MHT_Liv3.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv3_HSeries_Rear,   "gfx/Toronto_MHT_Liv3.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv3_HSeries_Trailer,   "gfx/Toronto_MHT_Liv3.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv3_HSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv3_HSeries_Rear;
    spriteset_Toronto_MHT_Liv3_HSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv3_HSeries, 5692) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_HSERIES);
        introduction_date:                date(1965,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        25 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             170;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_HSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv3_HSeries_last;
        can_attach_wagon: sw_Toronto_MHT_HSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv3_HSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_HSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv3_HSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        25;
		running_cost_factor:             42;
    }
}

//Toronto_MHT_Liv4_HSeries
spriteset(spriteset_Toronto_MHT_Liv4_HSeries_Purchase,   "gfx/Toronto_MHT_Liv4.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Toronto_MHT_Liv4_HSeries_Lead,   "gfx/Toronto_MHT_Liv4.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv4_HSeries_Rear,   "gfx/Toronto_MHT_Liv4.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv4_HSeries_Trailer,   "gfx/Toronto_MHT_Liv4.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv4_HSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv4_HSeries_Rear;
    spriteset_Toronto_MHT_Liv4_HSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv4_HSeries, 5693) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_HSERIES);
        introduction_date:                date(1965,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        25 ton;
        speed:                            55 mph;
        power:                            960 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             170;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Toronto_MHT_Liv1_HSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv4_HSeries_last;
        can_attach_wagon: sw_Toronto_MHT_HSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv4_HSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_HSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv4_HSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            480;
		weight:                        25;
		running_cost_factor:             42;
    }
}

switch(FEAT_TRAINS, SELF, sw_SLCC_R40_attach, vehicle_type_id){
	Item_SLCC_R40_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_R40_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_R40_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_R40_Liv3     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//SLCC_R40_Silver
spriteset(spriteset_SLCC_R40_Silver_Purchase,   "gfx/SLCC_R40_Silver.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R40_Silver_Lead,   "gfx/SLCC_R40_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R40_Silver_Rear,   "gfx/SLCC_R40_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R40_Silver_Trailer,   "gfx/SLCC_R40_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R40_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R40_Silver_Rear;
    spriteset_SLCC_R40_Silver_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R40_Silver, 5721) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R40);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R40_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R40_Silver_last;
        can_attach_wagon: sw_SLCC_R40_attach;
        purchase: spriteset_SLCC_R40_Silver_Purchase;
        additional_text: string(STR_INFO_SLCC_R40);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R40_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//SLCC_R40_Liv1
spriteset(spriteset_SLCC_R40_Liv1_Purchase,   "gfx/SLCC_R40_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R40_Liv1_Lead,   "gfx/SLCC_R40_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R40_Liv1_Rear,   "gfx/SLCC_R40_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R40_Liv1_Trailer,   "gfx/SLCC_R40_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R40_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R40_Liv1_Rear;
    spriteset_SLCC_R40_Liv1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R40_Liv1, 5722) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R40);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R40_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R40_Liv1_last;
        can_attach_wagon: sw_SLCC_R40_attach;
        purchase: spriteset_SLCC_R40_Liv1_Purchase;
        additional_text: string(STR_INFO_SLCC_R40);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R40_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//SLCC_R40_Liv2
spriteset(spriteset_SLCC_R40_Liv2_Purchase,   "gfx/SLCC_R40_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R40_Liv2_Lead,   "gfx/SLCC_R40_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R40_Liv2_Rear,   "gfx/SLCC_R40_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R40_Liv2_Trailer,   "gfx/SLCC_R40_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R40_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R40_Liv2_Rear;
    spriteset_SLCC_R40_Liv2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R40_Liv2, 5723) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R40);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R40_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R40_Liv2_last;
        can_attach_wagon: sw_SLCC_R40_attach;
        purchase: spriteset_SLCC_R40_Liv2_Purchase;
        additional_text: string(STR_INFO_SLCC_R40);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R40_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//SLCC_R40_Liv3
spriteset(spriteset_SLCC_R40_Liv3_Purchase,   "gfx/SLCC_R40_Liv3.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R40_Liv3_Lead,   "gfx/SLCC_R40_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R40_Liv3_Rear,   "gfx/SLCC_R40_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R40_Liv3_Trailer,   "gfx/SLCC_R40_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R40_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R40_Liv3_Rear;
    spriteset_SLCC_R40_Liv3_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R40_Liv3, 5724) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R40);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R40_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R40_Liv3_last;
        can_attach_wagon: sw_SLCC_R40_attach;
        purchase: spriteset_SLCC_R40_Liv3_Purchase;
        additional_text: string(STR_INFO_SLCC_R40);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R40_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

switch(FEAT_TRAINS, SELF, sw_Pullman_Silverbird_attach, vehicle_type_id){
	Item_Pullman_Silverbird_Liv1_Single     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_Silverbird_Liv2_Single     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_Silverbird_Liv1_Pair     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Pullman_Silverbird_Liv2_Pair     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Pullman_Silverbird_Liv1_Single
spriteset(spriteset_Pullman_Silverbird_Liv1_Single_Purchase,   "gfx/Pullman_Silverbird_Liv1.png") {template_purchase_8(7, 21)}
spriteset(spriteset_Pullman_Silverbird_Liv1_Single,   "gfx/Pullman_Silverbird_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Pullman_Silverbird_Liv1_Single, 5740) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_SILVERBIRD_SINGLE);
        introduction_date:                date(1970,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            460 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             88;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Pullman_Silverbird_Liv1_Single;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Pullman_Silverbird_Liv1_Single;
        can_attach_wagon: sw_Pullman_Silverbird_attach;
        purchase: spriteset_Pullman_Silverbird_Liv1_Single_Purchase;
        additional_text: string(STR_INFO_PULLMAN_SILVERBIRD_SINGLE);
		reverse_build_probability: return 50;
}
}

//Pullman_Silverbird_Liv2_Single
spriteset(spriteset_Pullman_Silverbird_Liv2_Single_Purchase,   "gfx/Pullman_Silverbird_Liv2.png") {template_purchase_8(7, 21)}
spriteset(spriteset_Pullman_Silverbird_Liv2_Single,   "gfx/Pullman_Silverbird_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Pullman_Silverbird_Liv2_Single, 5741) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_SILVERBIRD_SINGLE);
        introduction_date:                date(1970,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            460 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             88;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Pullman_Silverbird_Liv1_Single;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Pullman_Silverbird_Liv2_Single;
        can_attach_wagon: sw_Pullman_Silverbird_attach;
        purchase: spriteset_Pullman_Silverbird_Liv2_Single_Purchase;
        additional_text: string(STR_INFO_PULLMAN_SILVERBIRD_SINGLE);
		reverse_build_probability: return 50;
}
}

//Pullman_Silverbird_Liv1_Pair
spriteset(spriteset_Pullman_Silverbird_Liv1_Pair_Purchase,   "gfx/Pullman_Silverbird_Liv1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Pullman_Silverbird_Liv1_Pair_Lead,   "gfx/Pullman_Silverbird_Liv1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_Silverbird_Liv1_Pair_Rear,   "gfx/Pullman_Silverbird_Liv1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_Silverbird_Liv1_Pair_Trailer,   "gfx/Pullman_Silverbird_Liv1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Silverbird_Liv1_Pair_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_Silverbird_Liv1_Pair_Rear;
    spriteset_Pullman_Silverbird_Liv1_Pair_Lead;
}

item(FEAT_TRAINS, Item_Pullman_Silverbird_Liv1_Pair, 5750) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_SILVERBIRD_PAIR);
        introduction_date:                date(1970,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Pullman_Silverbird_Liv1_Pair;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_Silverbird_Liv1_Pair_last;
        can_attach_wagon: sw_Pullman_Silverbird_attach;
        purchase: spriteset_Pullman_Silverbird_Liv1_Pair_Purchase;
        additional_text: string(STR_INFO_PULLMAN_SILVERBIRD_PAIR);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_Silverbird_Liv1_Pair_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

//Pullman_Silverbird_Liv2_Pair
spriteset(spriteset_Pullman_Silverbird_Liv2_Pair_Purchase,   "gfx/Pullman_Silverbird_Liv2.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Pullman_Silverbird_Liv2_Pair_Lead,   "gfx/Pullman_Silverbird_Liv2.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Pullman_Silverbird_Liv2_Pair_Rear,   "gfx/Pullman_Silverbird_Liv2.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Pullman_Silverbird_Liv2_Pair_Trailer,   "gfx/Pullman_Silverbird_Liv2.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Silverbird_Liv2_Pair_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Pullman_Silverbird_Liv2_Pair_Rear;
    spriteset_Pullman_Silverbird_Liv2_Pair_Lead;
}

item(FEAT_TRAINS, Item_Pullman_Silverbird_Liv2_Pair, 5751) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PULLMAN_SILVERBIRD_PAIR);
        introduction_date:                date(1970,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             175;
        cargo_capacity:                  192/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Pullman_Silverbird_Liv1_Pair;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Pullman_Silverbird_Liv2_Pair_last;
        can_attach_wagon: sw_Pullman_Silverbird_attach;
        purchase: spriteset_Pullman_Silverbird_Liv2_Pair_Purchase;
        additional_text: string(STR_INFO_PULLMAN_SILVERBIRD_PAIR);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Pullman_Silverbird_Liv2_Pair_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (192/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             43;
    }
}

switch(FEAT_TRAINS, SELF, sw_SLCC_R44_attach, vehicle_type_id){
	Item_SLCC_R44_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_R44_MTA     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_R44_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_R44_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SLCC_R44_Liv3     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//SLCC_R44_Silver
spriteset(spriteset_SLCC_R44_Silver_Purchase,   "gfx/SLCC_R44_Silver.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R44_Silver_Lead,   "gfx/SLCC_R44_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R44_Silver_Rear,   "gfx/SLCC_R44_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R44_Silver_Trailer,   "gfx/SLCC_R44_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R44_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R44_Silver_Rear;
    spriteset_SLCC_R44_Silver_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R44_Silver, 5761) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R44);
        introduction_date:                date(1971,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             180;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R44_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R44_Silver_last;
        can_attach_wagon: sw_SLCC_R44_attach;
        purchase: spriteset_SLCC_R44_Silver_Purchase;
        additional_text: string(STR_INFO_SLCC_R44);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R44_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             45;
    }
}

//SLCC_R44_MTA
spriteset(spriteset_SLCC_R44_MTA_Purchase,   "gfx/SLCC_R44_MTA.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R44_MTA_Lead,   "gfx/SLCC_R44_MTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R44_MTA_Rear,   "gfx/SLCC_R44_MTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R44_MTA_Trailer,   "gfx/SLCC_R44_MTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R44_MTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R44_MTA_Rear;
    spriteset_SLCC_R44_MTA_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R44_MTA, 5762) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R44);
        introduction_date:                date(1971,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             180;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R44_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R44_MTA_last;
        can_attach_wagon: sw_SLCC_R44_attach;
        purchase: spriteset_SLCC_R44_MTA_Purchase;
        additional_text: string(STR_INFO_SLCC_R44);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R44_MTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             45;
    }
}

//SLCC_R44_Liv1
spriteset(spriteset_SLCC_R44_Liv1_Purchase,   "gfx/SLCC_R44_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R44_Liv1_Lead,   "gfx/SLCC_R44_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R44_Liv1_Rear,   "gfx/SLCC_R44_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R44_Liv1_Trailer,   "gfx/SLCC_R44_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R44_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R44_Liv1_Rear;
    spriteset_SLCC_R44_Liv1_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R44_Liv1, 5763) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R44);
        introduction_date:                date(1971,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             180;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R44_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R44_Liv1_last;
        can_attach_wagon: sw_SLCC_R44_attach;
        purchase: spriteset_SLCC_R44_Liv1_Purchase;
        additional_text: string(STR_INFO_SLCC_R44);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R44_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             45;
    }
}

//SLCC_R44_Liv2
spriteset(spriteset_SLCC_R44_Liv2_Purchase,   "gfx/SLCC_R44_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R44_Liv2_Lead,   "gfx/SLCC_R44_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R44_Liv2_Rear,   "gfx/SLCC_R44_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R44_Liv2_Trailer,   "gfx/SLCC_R44_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R44_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R44_Liv2_Rear;
    spriteset_SLCC_R44_Liv2_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R44_Liv2, 5764) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R44);
        introduction_date:                date(1971,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             180;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R44_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R44_Liv2_last;
        can_attach_wagon: sw_SLCC_R44_attach;
        purchase: spriteset_SLCC_R44_Liv2_Purchase;
        additional_text: string(STR_INFO_SLCC_R44);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R44_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             45;
    }
}

//SLCC_R44_Liv3
spriteset(spriteset_SLCC_R44_Liv3_Purchase,   "gfx/SLCC_R44_Liv3.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_SLCC_R44_Liv3_Lead,   "gfx/SLCC_R44_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SLCC_R44_Liv3_Rear,   "gfx/SLCC_R44_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SLCC_R44_Liv3_Trailer,   "gfx/SLCC_R44_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_SLCC_R44_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_SLCC_R44_Liv3_Rear;
    spriteset_SLCC_R44_Liv3_Lead;
}

item(FEAT_TRAINS, Item_SLCC_R44_Liv3, 5765) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SLCC_R44);
        introduction_date:                date(1971,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     14;
        running_cost_factor:             180;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_SLCC_R44_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SLCC_R44_Liv3_last;
        can_attach_wagon: sw_SLCC_R44_attach;
        purchase: spriteset_SLCC_R44_Liv3_Purchase;
        additional_text: string(STR_INFO_SLCC_R44);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_SLCC_R44_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (195/param_capacity_mod);
        power:                            460;
		weight:                        35;
		running_cost_factor:             45;
    }
}

switch(FEAT_TRAINS, SELF, sw_HSC_1200Series_attach, vehicle_type_id){
	Item_HSC_1200Series_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//HSC_1200Series_Liv1
spriteset(spriteset_HSC_1200Series_Liv1_Purchase,   "gfx/HSC_1200Series_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_HSC_1200Series_Liv1_Lead,   "gfx/HSC_1200Series_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_HSC_1200Series_Liv1_Rear,   "gfx/HSC_1200Series_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_HSC_1200Series_Liv1_Trailer,   "gfx/HSC_1200Series_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_HSC_1200Series_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_HSC_1200Series_Liv1_Rear;
    spriteset_HSC_1200Series_Liv1_Lead;
}

item(FEAT_TRAINS, Item_HSC_1200Series_Liv1, 5780) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HSC_1200SERIES);
        introduction_date:                date(1981,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            65 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_HSC_1200Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_HSC_1200Series_Liv1_last;
        can_attach_wagon: sw_HSC_1200Series_attach;
        purchase: spriteset_HSC_1200Series_Liv1_Purchase;
        additional_text: string(STR_INFO_HSC_1200SERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_HSC_1200Series_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            450;
		weight:                        36;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_BIV_attach, vehicle_type_id){
	Item_Kawasaki_BIV_Liv1_Single     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_BIV_Liv2_Single     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_BIV_Liv1_Pair     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_BIV_Liv2_Pair     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Kawasaki_BIV_Liv1_Single
spriteset(spriteset_Kawasaki_BIV_Liv1_Single_Purchase,   "gfx/Kawasaki_BIV_Liv1.png") {template_purchase_8(7, 21)}
spriteset(spriteset_Kawasaki_BIV_Liv1_Single,   "gfx/Kawasaki_BIV_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Kawasaki_BIV_Liv1_Single, 5800) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_BIV_SINGLE);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        32 ton;
        speed:                            55 mph;
        power:                            460 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             95;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Kawasaki_BIV_Liv1_Single;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Kawasaki_BIV_Liv1_Single;
        can_attach_wagon: sw_Kawasaki_BIV_attach;
        purchase: spriteset_Kawasaki_BIV_Liv1_Single_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_BIV_SINGLE);
		reverse_build_probability: return 50;
}
}

//Kawasaki_BIV_Liv2_Single
spriteset(spriteset_Kawasaki_BIV_Liv2_Single_Purchase,   "gfx/Kawasaki_BIV_Liv2.png") {template_purchase_8(7, 21)}
spriteset(spriteset_Kawasaki_BIV_Liv2_Single,   "gfx/Kawasaki_BIV_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Kawasaki_BIV_Liv2_Single, 5801) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_BIV_SINGLE);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        32 ton;
        speed:                            55 mph;
        power:                            460 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             95;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Kawasaki_BIV_Liv1_Single;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Kawasaki_BIV_Liv2_Single;
        can_attach_wagon: sw_Kawasaki_BIV_attach;
        purchase: spriteset_Kawasaki_BIV_Liv2_Single_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_BIV_SINGLE);
		reverse_build_probability: return 50;
}
}

//Kawasaki_BIV_Liv1_Pair
spriteset(spriteset_Kawasaki_BIV_Liv1_Pair_Purchase,   "gfx/Kawasaki_BIV_Liv1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Kawasaki_BIV_Liv1_Pair_Lead,   "gfx/Kawasaki_BIV_Liv1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_BIV_Liv1_Pair_Rear,   "gfx/Kawasaki_BIV_Liv1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_BIV_Liv1_Pair_Trailer,   "gfx/Kawasaki_BIV_Liv1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_BIV_Liv1_Pair_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_BIV_Liv1_Pair_Rear;
    spriteset_Kawasaki_BIV_Liv1_Pair_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_BIV_Liv1_Pair, 5810) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_BIV_PAIR);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        32 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Kawasaki_BIV_Liv1_Pair;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_BIV_Liv1_Pair_last;
        can_attach_wagon: sw_Kawasaki_BIV_attach;
        purchase: spriteset_Kawasaki_BIV_Liv1_Pair_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_BIV_PAIR);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_BIV_Liv1_Pair_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            460;
		weight:                        32;
		running_cost_factor:             48;
    }
}

//Kawasaki_BIV_Liv2_Pair
spriteset(spriteset_Kawasaki_BIV_Liv2_Pair_Purchase,   "gfx/Kawasaki_BIV_Liv2.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_Kawasaki_BIV_Liv2_Pair_Lead,   "gfx/Kawasaki_BIV_Liv2.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_BIV_Liv2_Pair_Rear,   "gfx/Kawasaki_BIV_Liv2.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_BIV_Liv2_Pair_Trailer,   "gfx/Kawasaki_BIV_Liv2.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_BIV_Liv2_Pair_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_BIV_Liv2_Pair_Rear;
    spriteset_Kawasaki_BIV_Liv2_Pair_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_BIV_Liv2_Pair, 5811) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_BIV_PAIR);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        32 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Kawasaki_BIV_Liv1_Pair;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_BIV_Liv2_Pair_last;
        can_attach_wagon: sw_Kawasaki_BIV_attach;
        purchase: spriteset_Kawasaki_BIV_Liv2_Pair_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_BIV_PAIR);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_BIV_Liv2_Pair_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            460;
		weight:                        32;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Budd_UTV_attach, vehicle_type_id){
	Item_Budd_UTV_MiamiMetro     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_UTV_Baltimore     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_UTV_SCTD     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_UTV_LAMetro     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_UTV_BroadStreet1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_UTV_BroadStreet2     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_UTV_MiamiMetro
spriteset(spriteset_Budd_UTV_MiamiMetro_Purchase,   "gfx/Budd_UTV_MiamiMetro.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_UTV_MiamiMetro_Lead,   "gfx/Budd_UTV_MiamiMetro.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_UTV_MiamiMetro_Rear,   "gfx/Budd_UTV_MiamiMetro.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_UTV_MiamiMetro_Trailer,   "gfx/Budd_UTV_MiamiMetro.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_UTV_MiamiMetro_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_UTV_MiamiMetro_Rear;
    spriteset_Budd_UTV_MiamiMetro_Lead;
}

item(FEAT_TRAINS, Item_Budd_UTV_MiamiMetro, 5821) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_UTV);
        introduction_date:                date(1983,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            65 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_UTV_MiamiMetro;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_UTV_MiamiMetro_last;
        can_attach_wagon: sw_Budd_UTV_attach;
        purchase: spriteset_Budd_UTV_MiamiMetro_Purchase;
        additional_text: string(STR_INFO_BUDD_UTV);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_UTV_MiamiMetro_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            450;
		weight:                        36;
		running_cost_factor:             48;
    }
}

//Budd_UTV_Baltimore
spriteset(spriteset_Budd_UTV_Baltimore_Purchase,   "gfx/Budd_UTV_Baltimore.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_UTV_Baltimore_Lead,   "gfx/Budd_UTV_Baltimore.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_UTV_Baltimore_Rear,   "gfx/Budd_UTV_Baltimore.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_UTV_Baltimore_Trailer,   "gfx/Budd_UTV_Baltimore.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_UTV_Baltimore_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_UTV_Baltimore_Rear;
    spriteset_Budd_UTV_Baltimore_Lead;
}

item(FEAT_TRAINS, Item_Budd_UTV_Baltimore, 5822) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_UTV);
        introduction_date:                date(1983,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            65 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_UTV_MiamiMetro;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_UTV_Baltimore_last;
        can_attach_wagon: sw_Budd_UTV_attach;
        purchase: spriteset_Budd_UTV_Baltimore_Purchase;
        additional_text: string(STR_INFO_BUDD_UTV);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_UTV_Baltimore_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            450;
		weight:                        36;
		running_cost_factor:             48;
    }
}

//Budd_UTV_SCTD
spriteset(spriteset_Budd_UTV_SCTD_Purchase,   "gfx/Budd_UTV_SCTD.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_UTV_SCTD_Lead,   "gfx/Budd_UTV_SCTD.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_UTV_SCTD_Rear,   "gfx/Budd_UTV_SCTD.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_UTV_SCTD_Trailer,   "gfx/Budd_UTV_SCTD.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_UTV_SCTD_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_UTV_SCTD_Rear;
    spriteset_Budd_UTV_SCTD_Lead;
}

item(FEAT_TRAINS, Item_Budd_UTV_SCTD, 5823) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_UTV);
        introduction_date:                date(1983,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            65 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_UTV_MiamiMetro;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_UTV_SCTD_last;
        can_attach_wagon: sw_Budd_UTV_attach;
        purchase: spriteset_Budd_UTV_SCTD_Purchase;
        additional_text: string(STR_INFO_BUDD_UTV);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_UTV_SCTD_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            450;
		weight:                        36;
		running_cost_factor:             48;
    }
}

//Budd_UTV_LAMetro
spriteset(spriteset_Budd_UTV_LAMetro_Purchase,   "gfx/Budd_UTV_LAMetro.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_UTV_LAMetro_Lead,   "gfx/Budd_UTV_LAMetro.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_UTV_LAMetro_Rear,   "gfx/Budd_UTV_LAMetro.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_UTV_LAMetro_Trailer,   "gfx/Budd_UTV_LAMetro.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_UTV_LAMetro_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_UTV_LAMetro_Rear;
    spriteset_Budd_UTV_LAMetro_Lead;
}

item(FEAT_TRAINS, Item_Budd_UTV_LAMetro, 5824) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_UTV);
        introduction_date:                date(1983,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            65 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_UTV_MiamiMetro;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_UTV_LAMetro_last;
        can_attach_wagon: sw_Budd_UTV_attach;
        purchase: spriteset_Budd_UTV_LAMetro_Purchase;
        additional_text: string(STR_INFO_BUDD_UTV);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_UTV_LAMetro_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            450;
		weight:                        36;
		running_cost_factor:             48;
    }
}

//Budd_UTV_BroadStreet1
spriteset(spriteset_Budd_UTV_BroadStreet1_Purchase,   "gfx/Budd_UTV_BroadStreet1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_UTV_BroadStreet1_Lead,   "gfx/Budd_UTV_BroadStreet1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_UTV_BroadStreet1_Rear,   "gfx/Budd_UTV_BroadStreet1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_UTV_BroadStreet1_Trailer,   "gfx/Budd_UTV_BroadStreet1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_UTV_BroadStreet1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_UTV_BroadStreet1_Rear;
    spriteset_Budd_UTV_BroadStreet1_Lead;
}

item(FEAT_TRAINS, Item_Budd_UTV_BroadStreet1, 5825) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_UTV);
        introduction_date:                date(1983,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            65 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_UTV_MiamiMetro;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_UTV_BroadStreet1_last;
        can_attach_wagon: sw_Budd_UTV_attach;
        purchase: spriteset_Budd_UTV_BroadStreet1_Purchase;
        additional_text: string(STR_INFO_BUDD_UTV);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_UTV_BroadStreet1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            450;
		weight:                        36;
		running_cost_factor:             48;
    }
}

//Budd_UTV_BroadStreet2
spriteset(spriteset_Budd_UTV_BroadStreet2_Purchase,   "gfx/Budd_UTV_BroadStreet2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Budd_UTV_BroadStreet2_Lead,   "gfx/Budd_UTV_BroadStreet2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_UTV_BroadStreet2_Rear,   "gfx/Budd_UTV_BroadStreet2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_UTV_BroadStreet2_Trailer,   "gfx/Budd_UTV_BroadStreet2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_UTV_BroadStreet2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_UTV_BroadStreet2_Rear;
    spriteset_Budd_UTV_BroadStreet2_Lead;
}

item(FEAT_TRAINS, Item_Budd_UTV_BroadStreet2, 5826) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_UTV);
        introduction_date:                date(1983,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            65 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_UTV_MiamiMetro;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_UTV_BroadStreet2_last;
        can_attach_wagon: sw_Budd_UTV_attach;
        purchase: spriteset_Budd_UTV_BroadStreet2_Purchase;
        additional_text: string(STR_INFO_BUDD_UTV);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_UTV_BroadStreet2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            450;
		weight:                        36;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Amarail_R68_attach, vehicle_type_id){
	Item_Amarail_R68_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Amarail_R68_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Amarail_R68_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Amarail_R68_Silver
spriteset(spriteset_Amarail_R68_Silver_Purchase,   "gfx/Amarail_R68_Silver.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Amarail_R68_Silver_Lead,   "gfx/Amarail_R68_Silver.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Amarail_R68_Silver_Rear,   "gfx/Amarail_R68_Silver.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Amarail_R68_Silver_Trailer,   "gfx/Amarail_R68_Silver.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Amarail_R68_Silver_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Amarail_R68_Silver_Rear;
    spriteset_Amarail_R68_Silver_Lead;
}

item(FEAT_TRAINS, Item_Amarail_R68_Silver, 5840) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_AMARAIL_R68);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Amarail_R68_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Amarail_R68_Silver_last;
        can_attach_wagon: sw_Amarail_R68_attach;
        purchase: spriteset_Amarail_R68_Silver_Purchase;
        additional_text: string(STR_INFO_AMARAIL_R68);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Amarail_R68_Silver_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            460;
		weight:                        42;
		running_cost_factor:             48;
    }
}

//Amarail_R68_Liv1
spriteset(spriteset_Amarail_R68_Liv1_Purchase,   "gfx/Amarail_R68_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Amarail_R68_Liv1_Lead,   "gfx/Amarail_R68_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Amarail_R68_Liv1_Rear,   "gfx/Amarail_R68_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Amarail_R68_Liv1_Trailer,   "gfx/Amarail_R68_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Amarail_R68_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Amarail_R68_Liv1_Rear;
    spriteset_Amarail_R68_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Amarail_R68_Liv1, 5841) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_AMARAIL_R68);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Amarail_R68_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Amarail_R68_Liv1_last;
        can_attach_wagon: sw_Amarail_R68_attach;
        purchase: spriteset_Amarail_R68_Liv1_Purchase;
        additional_text: string(STR_INFO_AMARAIL_R68);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Amarail_R68_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            460;
		weight:                        42;
		running_cost_factor:             48;
    }
}

//Amarail_R68_Liv2
spriteset(spriteset_Amarail_R68_Liv2_Purchase,   "gfx/Amarail_R68_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Amarail_R68_Liv2_Lead,   "gfx/Amarail_R68_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Amarail_R68_Liv2_Rear,   "gfx/Amarail_R68_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Amarail_R68_Liv2_Trailer,   "gfx/Amarail_R68_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Amarail_R68_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Amarail_R68_Liv2_Rear;
    spriteset_Amarail_R68_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Amarail_R68_Liv2, 5842) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_AMARAIL_R68);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            55 mph;
        power:                            920 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  200/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Amarail_R68_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Amarail_R68_Liv2_last;
        can_attach_wagon: sw_Amarail_R68_attach;
        purchase: spriteset_Amarail_R68_Liv2_Purchase;
        additional_text: string(STR_INFO_AMARAIL_R68);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Amarail_R68_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (200/param_capacity_mod);
        power:                            460;
		weight:                        42;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Bombardier_1800Series_attach, vehicle_type_id){
	Item_Bombardier_1800Series_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Bombardier_1800Series_Liv1
spriteset(spriteset_Bombardier_1800Series_Liv1_Purchase,   "gfx/Bombardier_1800Series_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Bombardier_1800Series_Liv1_Lead,   "gfx/Bombardier_1800Series_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Bombardier_1800Series_Liv1_Rear,   "gfx/Bombardier_1800Series_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Bombardier_1800Series_Liv1_Trailer,   "gfx/Bombardier_1800Series_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_1800Series_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Bombardier_1800Series_Liv1_Rear;
    spriteset_Bombardier_1800Series_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Bombardier_1800Series_Liv1, 5900) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIER_1800SERIES);
        introduction_date:                date(1993,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        38 ton;
        speed:                            65 mph;
        power:                            100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Bombardier_1800Series_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Bombardier_1800Series_Liv1_last;
        can_attach_wagon: sw_Bombardier_1800Series_attach;
        purchase: spriteset_Bombardier_1800Series_Liv1_Purchase;
        additional_text: string(STR_INFO_BOMBARDIER_1800SERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Bombardier_1800Series_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            500;
		weight:                        38;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Breda_A650_attach, vehicle_type_id){
	Item_Breda_A650_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Breda_A650_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Breda_A650_Liv3     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Breda_A650_Liv1
spriteset(spriteset_Breda_A650_Liv1_Purchase,   "gfx/Breda_A650_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Breda_A650_Liv1_Lead,   "gfx/Breda_A650_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Breda_A650_Liv1_Rear,   "gfx/Breda_A650_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Breda_A650_Liv1_Trailer,   "gfx/Breda_A650_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Breda_A650_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Breda_A650_Liv1_Rear;
    spriteset_Breda_A650_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Breda_A650_Liv1, 5960) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BREDA_A650);
        introduction_date:                date(1993,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            70 mph;
        power:                            1000 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Breda_A650_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Breda_A650_Liv1_last;
        can_attach_wagon: sw_Breda_A650_attach;
        purchase: spriteset_Breda_A650_Liv1_Purchase;
        additional_text: string(STR_INFO_BREDA_A650);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Breda_A650_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            500;
		weight:                        36;
		running_cost_factor:             48;
    }
}

//Breda_A650_Liv2
spriteset(spriteset_Breda_A650_Liv2_Purchase,   "gfx/Breda_A650_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Breda_A650_Liv2_Lead,   "gfx/Breda_A650_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Breda_A650_Liv2_Rear,   "gfx/Breda_A650_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Breda_A650_Liv2_Trailer,   "gfx/Breda_A650_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Breda_A650_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Breda_A650_Liv2_Rear;
    spriteset_Breda_A650_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Breda_A650_Liv2, 5961) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BREDA_A650);
        introduction_date:                date(1993,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            70 mph;
        power:                            1000 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Breda_A650_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Breda_A650_Liv2_last;
        can_attach_wagon: sw_Breda_A650_attach;
        purchase: spriteset_Breda_A650_Liv2_Purchase;
        additional_text: string(STR_INFO_BREDA_A650);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Breda_A650_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            500;
		weight:                        36;
		running_cost_factor:             48;
    }
}

//Breda_A650_Liv3
spriteset(spriteset_Breda_A650_Liv3_Purchase,   "gfx/Breda_A650_Liv3.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Breda_A650_Liv3_Lead,   "gfx/Breda_A650_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Breda_A650_Liv3_Rear,   "gfx/Breda_A650_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Breda_A650_Liv3_Trailer,   "gfx/Breda_A650_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Breda_A650_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Breda_A650_Liv3_Rear;
    spriteset_Breda_A650_Liv3_Lead;
}

item(FEAT_TRAINS, Item_Breda_A650_Liv3, 5962) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BREDA_A650);
        introduction_date:                date(1993,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        36 ton;
        speed:                            70 mph;
        power:                            1000 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Breda_A650_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Breda_A650_Liv3_last;
        can_attach_wagon: sw_Breda_A650_attach;
        purchase: spriteset_Breda_A650_Liv3_Purchase;
        additional_text: string(STR_INFO_BREDA_A650);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Breda_A650_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            500;
		weight:                        36;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_TSeries_attach, vehicle_type_id){
	Item_Toronto_MHT_Liv1_TSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv2_TSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv3_TSeries     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Toronto_MHT_Liv4_TSeries     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Toronto_MHT_Liv1_TSeries
spriteset(spriteset_Toronto_MHT_Liv1_TSeries_Purchase,   "gfx/Toronto_MHT_Liv1.png") {template_purchase_88mu(367, 21)}
spriteset(spriteset_Toronto_MHT_Liv1_TSeries_Lead,   "gfx/Toronto_MHT_Liv1.png") {template_8(367, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv1_TSeries_Rear,   "gfx/Toronto_MHT_Liv1.png") {template_8(367, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv1_TSeries_Trailer,   "gfx/Toronto_MHT_Liv1.png") {template_8(367, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv1_TSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv1_TSeries_Rear;
    spriteset_Toronto_MHT_Liv1_TSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv1_TSeries, 5980) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_TSERIES);
        introduction_date:                date(1995,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        33 ton;
        speed:                            55 mph;
        power:                            1120 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Toronto_MHT_Liv1_TSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv1_TSeries_last;
        can_attach_wagon: sw_Toronto_MHT_TSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv1_TSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_TSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv1_TSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            560;
		weight:                        33;
		running_cost_factor:             48;
    }
}

//Toronto_MHT_Liv2_TSeries
spriteset(spriteset_Toronto_MHT_Liv2_TSeries_Purchase,   "gfx/Toronto_MHT_Liv2.png") {template_purchase_88mu(367, 21)}
spriteset(spriteset_Toronto_MHT_Liv2_TSeries_Lead,   "gfx/Toronto_MHT_Liv2.png") {template_8(367, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv2_TSeries_Rear,   "gfx/Toronto_MHT_Liv2.png") {template_8(367, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv2_TSeries_Trailer,   "gfx/Toronto_MHT_Liv2.png") {template_8(367, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv2_TSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv2_TSeries_Rear;
    spriteset_Toronto_MHT_Liv2_TSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv2_TSeries, 5981) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_TSERIES);
        introduction_date:                date(1995,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        33 ton;
        speed:                            55 mph;
        power:                            1120 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Toronto_MHT_Liv1_TSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv2_TSeries_last;
        can_attach_wagon: sw_Toronto_MHT_TSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv2_TSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_TSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv2_TSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            560;
		weight:                        33;
		running_cost_factor:             48;
    }
}

//Toronto_MHT_Liv3_TSeries
spriteset(spriteset_Toronto_MHT_Liv3_TSeries_Purchase,   "gfx/Toronto_MHT_Liv3.png") {template_purchase_88mu(367, 21)}
spriteset(spriteset_Toronto_MHT_Liv3_TSeries_Lead,   "gfx/Toronto_MHT_Liv3.png") {template_8(367, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv3_TSeries_Rear,   "gfx/Toronto_MHT_Liv3.png") {template_8(367, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv3_TSeries_Trailer,   "gfx/Toronto_MHT_Liv3.png") {template_8(367, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv3_TSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv3_TSeries_Rear;
    spriteset_Toronto_MHT_Liv3_TSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv3_TSeries, 5982) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_TSERIES);
        introduction_date:                date(1995,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        33 ton;
        speed:                            55 mph;
        power:                            1120 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Toronto_MHT_Liv1_TSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv3_TSeries_last;
        can_attach_wagon: sw_Toronto_MHT_TSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv3_TSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_TSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv3_TSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            560;
		weight:                        33;
		running_cost_factor:             48;
    }
}

//Toronto_MHT_Liv4_TSeries
spriteset(spriteset_Toronto_MHT_Liv4_TSeries_Purchase,   "gfx/Toronto_MHT_Liv4.png") {template_purchase_88mu(367, 21)}
spriteset(spriteset_Toronto_MHT_Liv4_TSeries_Lead,   "gfx/Toronto_MHT_Liv4.png") {template_8(367, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Toronto_MHT_Liv4_TSeries_Rear,   "gfx/Toronto_MHT_Liv4.png") {template_8(367, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Toronto_MHT_Liv4_TSeries_Trailer,   "gfx/Toronto_MHT_Liv4.png") {template_8(367, 89)}

switch(FEAT_TRAINS, SELF, sw_Toronto_MHT_Liv4_TSeries_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Toronto_MHT_Liv4_TSeries_Rear;
    spriteset_Toronto_MHT_Liv4_TSeries_Lead;
}

item(FEAT_TRAINS, Item_Toronto_MHT_Liv4_TSeries, 5983) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_TORONTO_TSERIES);
        introduction_date:                date(1995,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        33 ton;
        speed:                            55 mph;
        power:                            1120 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             190;
        cargo_capacity:                  215/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Toronto_MHT_Liv1_TSeries;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Toronto_MHT_Liv4_TSeries_last;
        can_attach_wagon: sw_Toronto_MHT_TSeries_attach;
        purchase: spriteset_Toronto_MHT_Liv4_TSeries_Purchase;
        additional_text: string(STR_INFO_TORONTO_TSERIES);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Toronto_MHT_Liv4_TSeries_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (215/param_capacity_mod);
        power:                            560;
		weight:                        33;
		running_cost_factor:             48;
    }
}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R143_attach, vehicle_type_id){
	Item_Kawasaki_R143_MTA     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_R143_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_R143_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_R143_Cuomo     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_R143_PATH     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Kawasaki_R143_MTA
spriteset(spriteset_Kawasaki_R143_MTA_Purchase,   "gfx/Kawasaki_R143_MTA.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R143_MTA_Lead,   "gfx/Kawasaki_R143_MTA.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R143_MTA_Rear,   "gfx/Kawasaki_R143_MTA.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R143_MTA_Trailer,   "gfx/Kawasaki_R143_MTA.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R143_MTA_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R143_MTA_Rear;
    spriteset_Kawasaki_R143_MTA_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R143_MTA, 6000) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R143);
        introduction_date:                date(2001,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             200;
        cargo_capacity:                  230/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R143_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R143_MTA_last;
        can_attach_wagon: sw_Kawasaki_R143_attach;
        purchase: spriteset_Kawasaki_R143_MTA_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R143);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R143_MTA_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (230/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             50;
    }
}

//Kawasaki_R143_Liv1
spriteset(spriteset_Kawasaki_R143_Liv1_Purchase,   "gfx/Kawasaki_R143_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R143_Liv1_Lead,   "gfx/Kawasaki_R143_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R143_Liv1_Rear,   "gfx/Kawasaki_R143_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R143_Liv1_Trailer,   "gfx/Kawasaki_R143_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R143_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R143_Liv1_Rear;
    spriteset_Kawasaki_R143_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R143_Liv1, 6001) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R143);
        introduction_date:                date(2001,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             200;
        cargo_capacity:                  230/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R143_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R143_Liv1_last;
        can_attach_wagon: sw_Kawasaki_R143_attach;
        purchase: spriteset_Kawasaki_R143_Liv1_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R143);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R143_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (230/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             50;
    }
}

//Kawasaki_R143_Liv2
spriteset(spriteset_Kawasaki_R143_Liv2_Purchase,   "gfx/Kawasaki_R143_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R143_Liv2_Lead,   "gfx/Kawasaki_R143_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R143_Liv2_Rear,   "gfx/Kawasaki_R143_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R143_Liv2_Trailer,   "gfx/Kawasaki_R143_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R143_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R143_Liv2_Rear;
    spriteset_Kawasaki_R143_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R143_Liv2, 6002) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R143);
        introduction_date:                date(2001,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             200;
        cargo_capacity:                  230/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R143_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R143_Liv2_last;
        can_attach_wagon: sw_Kawasaki_R143_attach;
        purchase: spriteset_Kawasaki_R143_Liv2_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R143);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R143_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (230/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             50;
    }
}

//Kawasaki_R143_Cuomo
spriteset(spriteset_Kawasaki_R143_Cuomo_Purchase,   "gfx/Kawasaki_R143_Cuomo.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R143_Cuomo_Lead,   "gfx/Kawasaki_R143_Cuomo.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R143_Cuomo_Rear,   "gfx/Kawasaki_R143_Cuomo.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R143_Cuomo_Trailer,   "gfx/Kawasaki_R143_Cuomo.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R143_Cuomo_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R143_Cuomo_Rear;
    spriteset_Kawasaki_R143_Cuomo_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R143_Cuomo, 6003) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R143);
        introduction_date:                date(2001,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             200;
        cargo_capacity:                  230/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R143_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R143_Cuomo_last;
        can_attach_wagon: sw_Kawasaki_R143_attach;
        purchase: spriteset_Kawasaki_R143_Cuomo_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R143);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R143_Cuomo_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (230/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             50;
    }
}

//Kawasaki_R143_PATH
spriteset(spriteset_Kawasaki_R143_PATH_Purchase,   "gfx/Kawasaki_R143_PATH.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R143_PATH_Lead,   "gfx/Kawasaki_R143_PATH.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R143_PATH_Rear,   "gfx/Kawasaki_R143_PATH.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R143_PATH_Trailer,   "gfx/Kawasaki_R143_PATH.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R143_PATH_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R143_PATH_Rear;
    spriteset_Kawasaki_R143_PATH_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R143_PATH, 6004) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R143);
        introduction_date:                date(2001,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             200;
        cargo_capacity:                  230/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R143_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R143_PATH_last;
        can_attach_wagon: sw_Kawasaki_R143_attach;
        purchase: spriteset_Kawasaki_R143_PATH_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R143);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R143_PATH_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (230/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             50;
    }
}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Rocket_attach, vehicle_type_id){
	Item_Bombardier_Rocket_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Bombardier_Rocket_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Bombardier_Rocket_Liv1
spriteset(spriteset_Bombardier_Rocket_Liv1_Purchase,   "gfx/Bombardier_Rocket_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Bombardier_Rocket_Liv1_Lead,   "gfx/Bombardier_Rocket_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Bombardier_Rocket_Liv1_Rear,   "gfx/Bombardier_Rocket_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Bombardier_Rocket_Liv1_Trailer,   "gfx/Bombardier_Rocket_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Rocket_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Bombardier_Rocket_Liv1_Rear;
    spriteset_Bombardier_Rocket_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Bombardier_Rocket_Liv1, 6100) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIER_ROCKET);
        introduction_date:                date(2011,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        33 ton;
        speed:                            55 mph;
        power:                            1391 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             205;
        cargo_capacity:                  238/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Bombardier_Rocket_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Bombardier_Rocket_Liv1_last;
        can_attach_wagon: sw_Bombardier_Rocket_attach;
        purchase: spriteset_Bombardier_Rocket_Liv1_Purchase;
        additional_text: string(STR_INFO_BOMBARDIER_ROCKET);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Bombardier_Rocket_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (238/param_capacity_mod);
        power:                            696;
		weight:                        33;
		running_cost_factor:             52;
    }
}

//Bombardier_Rocket_Liv2
spriteset(spriteset_Bombardier_Rocket_Liv2_Purchase,   "gfx/Bombardier_Rocket_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Bombardier_Rocket_Liv2_Lead,   "gfx/Bombardier_Rocket_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Bombardier_Rocket_Liv2_Rear,   "gfx/Bombardier_Rocket_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Bombardier_Rocket_Liv2_Trailer,   "gfx/Bombardier_Rocket_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Rocket_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Bombardier_Rocket_Liv2_Rear;
    spriteset_Bombardier_Rocket_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Bombardier_Rocket_Liv2, 6101) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIER_ROCKET);
        introduction_date:                date(2011,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        33 ton;
        speed:                            55 mph;
        power:                            1391 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             205;
        cargo_capacity:                  238/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Bombardier_Rocket_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Bombardier_Rocket_Liv2_last;
        can_attach_wagon: sw_Bombardier_Rocket_attach;
        purchase: spriteset_Bombardier_Rocket_Liv2_Purchase;
        additional_text: string(STR_INFO_BOMBARDIER_ROCKET);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Bombardier_Rocket_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (238/param_capacity_mod);
        power:                            696;
		weight:                        33;
		running_cost_factor:             52;
    }
}

switch(FEAT_TRAINS, SELF, sw_Hitachi_MiamiMetro_attach, vehicle_type_id){
	Item_Hitachi_MiamiMetro_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Hitachi_MiamiMetro_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Hitachi_MiamiMetro_Liv1
spriteset(spriteset_Hitachi_MiamiMetro_Liv1_Purchase,   "gfx/Hitachi_MiamiMetro_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Hitachi_MiamiMetro_Liv1_Lead,   "gfx/Hitachi_MiamiMetro_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_MiamiMetro_Liv1_Rear,   "gfx/Hitachi_MiamiMetro_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_MiamiMetro_Liv1_Trailer,   "gfx/Hitachi_MiamiMetro_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_MiamiMetro_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_MiamiMetro_Liv1_Rear;
    spriteset_Hitachi_MiamiMetro_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_MiamiMetro_Liv1, 6120) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI_MIAMIMETRO);
        introduction_date:                date(2017,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     17;
        running_cost_factor:             210;
        cargo_capacity:                  245/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_MiamiMetro_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_MiamiMetro_Liv1_last;
        can_attach_wagon: sw_Hitachi_MiamiMetro_attach;
        purchase: spriteset_Hitachi_MiamiMetro_Liv1_Purchase;
        additional_text: string(STR_INFO_HITACHI_MIAMIMETRO);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_MiamiMetro_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (245/param_capacity_mod);
        power:                            600;
		weight:                        35;
		running_cost_factor:             53;
    }
}

//Hitachi_MiamiMetro_Liv2
spriteset(spriteset_Hitachi_MiamiMetro_Liv2_Purchase,   "gfx/Hitachi_MiamiMetro_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Hitachi_MiamiMetro_Liv2_Lead,   "gfx/Hitachi_MiamiMetro_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Hitachi_MiamiMetro_Liv2_Rear,   "gfx/Hitachi_MiamiMetro_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Hitachi_MiamiMetro_Liv2_Trailer,   "gfx/Hitachi_MiamiMetro_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Hitachi_MiamiMetro_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Hitachi_MiamiMetro_Liv2_Rear;
    spriteset_Hitachi_MiamiMetro_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Hitachi_MiamiMetro_Liv2, 6121) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_HITACHI_MIAMIMETRO);
        introduction_date:                date(2017,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     17;
        running_cost_factor:             210;
        cargo_capacity:                  245/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Hitachi_MiamiMetro_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Hitachi_MiamiMetro_Liv2_last;
        can_attach_wagon: sw_Hitachi_MiamiMetro_attach;
        purchase: spriteset_Hitachi_MiamiMetro_Liv2_Purchase;
        additional_text: string(STR_INFO_HITACHI_MIAMIMETRO);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Hitachi_MiamiMetro_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (245/param_capacity_mod);
        power:                            600;
		weight:                        35;
		running_cost_factor:             53;
    }
}

switch(FEAT_TRAINS, SELF, sw_CRRC_MBTACars_attach, vehicle_type_id){
	Item_CRRC_MBTACars_Orange_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_CRRC_MBTACars_Red_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//CRRC_MBTACars_Orange_Liv1
spriteset(spriteset_CRRC_MBTACars_Orange_Liv1_Purchase,   "gfx/CRRC_MBTACars_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_CRRC_MBTACars_Orange_Liv1_Lead,   "gfx/CRRC_MBTACars_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_MBTACars_Orange_Liv1_Rear,   "gfx/CRRC_MBTACars_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_MBTACars_Orange_Liv1_Trailer,   "gfx/CRRC_MBTACars_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_MBTACars_Orange_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_MBTACars_Orange_Liv1_Rear;
    spriteset_CRRC_MBTACars_Orange_Liv1_Lead;
}

item(FEAT_TRAINS, Item_CRRC_MBTACars_Orange_Liv1, 6200) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_MBTA_ORANGE);
        introduction_date:                date(2019,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     17;
        running_cost_factor:             210;
        cargo_capacity:                  245/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_CRRC_MBTACars_Orange_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_MBTACars_Orange_Liv1_last;
        can_attach_wagon: sw_CRRC_MBTACars_attach;
        purchase: spriteset_CRRC_MBTACars_Orange_Liv1_Purchase;
        additional_text: string(STR_INFO_CRRC_MBTA_ORANGE);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_MBTACars_Orange_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (245/param_capacity_mod);
        power:                            600;
		weight:                        35;
		running_cost_factor:             53;
    }
}

//CRRC_MBTACars_Red_Liv1
spriteset(spriteset_CRRC_MBTACars_Red_Liv1_Purchase,   "gfx/CRRC_MBTACars_Liv1.png") {template_purchase_88mu(187, 21)}
spriteset(spriteset_CRRC_MBTACars_Red_Liv1_Lead,   "gfx/CRRC_MBTACars_Liv1.png") {template_8(187, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CRRC_MBTACars_Red_Liv1_Rear,   "gfx/CRRC_MBTACars_Liv1.png") {template_8(187, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CRRC_MBTACars_Red_Liv1_Trailer,   "gfx/CRRC_MBTACars_Liv1.png") {template_8(187, 89)}

switch(FEAT_TRAINS, SELF, sw_CRRC_MBTACars_Red_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_CRRC_MBTACars_Red_Liv1_Rear;
    spriteset_CRRC_MBTACars_Red_Liv1_Lead;
}

item(FEAT_TRAINS, Item_CRRC_MBTACars_Red_Liv1, 6210) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CRRC_MBTA_RED);
        introduction_date:                date(2020,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        35 ton;
        speed:                            60 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     17;
        running_cost_factor:             210;
        cargo_capacity:                  245/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_CRRC_MBTACars_Red_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CRRC_MBTACars_Red_Liv1_last;
        can_attach_wagon: sw_CRRC_MBTACars_attach;
        purchase: spriteset_CRRC_MBTACars_Red_Liv1_Purchase;
        additional_text: string(STR_INFO_CRRC_MBTA_RED);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_CRRC_MBTACars_Red_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (245/param_capacity_mod);
        power:                            600;
		weight:                        35;
		running_cost_factor:             53;
    }
}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R211_attach, vehicle_type_id){
	Item_Kawasaki_R211_Liv1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_R211_Liv2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Kawasaki_R211_Liv3     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Kawasaki_R211_Liv1
spriteset(spriteset_Kawasaki_R211_Liv1_Purchase,   "gfx/Kawasaki_R211_Liv1.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R211_Liv1_Lead,   "gfx/Kawasaki_R211_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R211_Liv1_Rear,   "gfx/Kawasaki_R211_Liv1.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R211_Liv1_Trailer,   "gfx/Kawasaki_R211_Liv1.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R211_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R211_Liv1_Rear;
    spriteset_Kawasaki_R211_Liv1_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R211_Liv1, 6220) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R211);
        introduction_date:                date(2023,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     17;
        running_cost_factor:             210;
        cargo_capacity:                  245/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R211_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R211_Liv1_last;
        can_attach_wagon: sw_Kawasaki_R211_attach;
        purchase: spriteset_Kawasaki_R211_Liv1_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R211);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R211_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (245/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             53;
    }
}

//Kawasaki_R211_Liv2
spriteset(spriteset_Kawasaki_R211_Liv2_Purchase,   "gfx/Kawasaki_R211_Liv2.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R211_Liv2_Lead,   "gfx/Kawasaki_R211_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R211_Liv2_Rear,   "gfx/Kawasaki_R211_Liv2.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R211_Liv2_Trailer,   "gfx/Kawasaki_R211_Liv2.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R211_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R211_Liv2_Rear;
    spriteset_Kawasaki_R211_Liv2_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R211_Liv2, 6221) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R211);
        introduction_date:                date(2023,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     17;
        running_cost_factor:             210;
        cargo_capacity:                  245/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R211_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R211_Liv2_last;
        can_attach_wagon: sw_Kawasaki_R211_attach;
        purchase: spriteset_Kawasaki_R211_Liv2_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R211);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R211_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (245/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             53;
    }
}

//Kawasaki_R211_Liv3
spriteset(spriteset_Kawasaki_R211_Liv3_Purchase,   "gfx/Kawasaki_R211_Liv3.png") {template_purchase_88mu(7, 21)}
spriteset(spriteset_Kawasaki_R211_Liv3_Lead,   "gfx/Kawasaki_R211_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Kawasaki_R211_Liv3_Rear,   "gfx/Kawasaki_R211_Liv3.png") {template_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Kawasaki_R211_Liv3_Trailer,   "gfx/Kawasaki_R211_Liv3.png") {template_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Kawasaki_R211_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Kawasaki_R211_Liv3_Rear;
    spriteset_Kawasaki_R211_Liv3_Lead;
}

item(FEAT_TRAINS, Item_Kawasaki_R211_Liv3, 6222) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        METRO;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_KAWASAKI_R211);
        introduction_date:                date(2023,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        37 ton;
        speed:                            55 mph;
        power:                            1200 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     17;
        running_cost_factor:             210;
        cargo_capacity:                  245/param_capacity_mod;
        loading_speed: 60;

        variant_group: Item_Kawasaki_R211_Liv1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Kawasaki_R211_Liv3_last;
        can_attach_wagon: sw_Kawasaki_R211_attach;
        purchase: spriteset_Kawasaki_R211_Liv3_Purchase;
        additional_text: string(STR_INFO_KAWASAKI_R211);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Kawasaki_R211_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (245/param_capacity_mod);
        power:                            600;
		weight:                        37;
		running_cost_factor:             53;
    }
}