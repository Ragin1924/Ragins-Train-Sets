grf{
    grfid: "ZM\10\01";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESCRIPTION);
    version: 2;
    min_compatible_version: 0;

//Purchase Cost Parameter
    param {
        param_purchase_cost {
            type: int;
            name: string(STR_PARAM_PURCHASE_COST);
            desc: string(STR_PARAM_PURCHASE_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Running Cost Parameter
     param {
        param_running_cost {
            type: int;
            name: string(STR_PARAM_RUNNING_COST);
            desc: string(STR_PARAM_RUNNING_COST_DESC);
            min_value: 0;
            max_value: 8;
            def_value: 4;
            names: {
                        0: string(STR_PARAM_DIVIDE_16);
                        1: string(STR_PARAM_DIVIDE_8);
                        2: string(STR_PARAM_DIVIDE_4);
                        3: string(STR_PARAM_DIVIDE_2);
                        4: string(STR_PARAM_NORMAL);
                        5: string(STR_PARAM_TIMES_2);
                        6: string(STR_PARAM_TIMES_4);
                        7: string(STR_PARAM_TIMES_8);
                        8: string(STR_PARAM_TIMES_16);
            };
        }
    }
//Carry Capacity Parameter
    param {
                param_capacities {
                        type: int;
                        name: string(STR_PARAM_NAME_CAPACITY);
                        desc: string(STR_PARAM_DESC_CAPACITY);
                        min_value: 0;
                        max_value: 1;
                        def_value: 0;
                        names: {
                                                0: string(STR_PARAM_REAL_CAPACITY);
                                                1: string(STR_PARAM_NORMAL_REDUCED);
                        };
                }
        }
//RealDisable
	param {
    param_RealDisable {
     name: string(STR_PARAM_NAME_REALDISABLE);
     desc: string(STR_PARAM_DESC_REALDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
  }
//PrototypeDisable
	param {
    param_PrototypeDisable {
     name: string(STR_PARAM_NAME_PROTOTYPEDISABLE);
     desc: string(STR_PARAM_DESC_PROTOTYPEDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
  }
//ProposalDisable
	param {
    param_ProposalDisable {
     name: string(STR_PARAM_NAME_PROPOSALDISABLE);
     desc: string(STR_PARAM_DESC_PROPOSALDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
  }
//FictionalDisable
	param {
    param_FictionalDisable {
     name: string(STR_PARAM_NAME_FICTIONALDISABLE);
     desc: string(STR_PARAM_DESC_FICTIONALDISABLE);
     type: bool;
     bit: 0;
     def_value: 0;
    }
    }
	}

//Carry Capacity Variables
if (param_capacities == 0) {
    param_capacity_mod = 0;
}

if (param_capacities == 1) {
    param_capacity_mod = 2;
}

railtypetable {
    RAIL, SAA3: [ MTRO, SBA3, SCA3, SDA3, "3RDR", "3RDC", MTRO, ELRL], ELRL, IHBA: [SGAA, SGAE, ELRL], TR_UNIVERSAL: [_AAE, RAIL]
}

cargotable {
PASS, COAL, MAIL, OIL_, LVST, EOIL, COKE, VBOD, SULP, SASH, MNO2, BOOM, IRON, QLME, PHOS, VPTS, SLAG, PIPE, CASS, NUTS, METL, GOOD, GRAI, WOOD, IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, FRUT, MAIZ, CORE, WATR, DIAM, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BEER, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, DYES, ENSP, FERT, FICR, FISH, FMSP, FRVG, GLAS, GRVL, JAVA, LIME, MILK, MNSP, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, TOUR, VEHI, WDPR, WOOL, URAN, YETI, YETY, BEAN, NITR
}


//Basecost Paramater Variables
basecost {
 PR_BUILD_VEHICLE_TRAIN: 1 + param_purchase_cost - 4;
 PR_BUILD_VEHICLE_WAGON: 3 + param_purchase_cost - 4;
 PR_RUNNING_TRAIN_STEAM: 4 + param_running_cost - 4;
 PR_RUNNING_TRAIN_DIESEL: 3 + param_running_cost - 4;
 PR_RUNNING_TRAIN_ELECTRIC: 2 + param_running_cost - 4;
}

// Fix depot view
traininfo_y_offset = 2;
train_width_32_px = 1;


// Purchase Sprite
template template_purchase(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
    [x     , y, 88, 15, -60, -11, ANIM]
    [x-2 , y,  1,  1,   0,  0, ANIM]
}


// 4 Template
template template_Old_4(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -8,        -15]
    [ x+32,     y,        33,        16,        0,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -12,        -15]
}

template template_Old_4_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -20]
    [ x+98,     y,        22,        20,        -8,        -15]
    [ x+121,    y,        33,        16,        0,        -12]
    [ x+155,    y,        22,        20,        -4,            -11]
    
    [ x,        y,        8,        24,        -3,            -13]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -12,        -15]
}

// 5 Template
template template_Old_5(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -19]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -10,        -14]
}

// 6 Template
template template_Old_6(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -17]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
}

template template_Old_6_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
    
    [ x,        y,        8,        24,        -3,            -17]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

//7 Template
template template_Old_7(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -15]
    [ x+9,      y,        22,        20,        -14,        -12]
    [ x+32,     y,        33,        16,        -12,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -13]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -6,        -12]
}

//7 Template Reversed
template template_Old_7_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89 , y, 8 , 24,  -3, -15]
    [ x+98 , y, 22, 20, -14, -12]
    [ x+121, y, 33, 16, -12, -12]
    [ x+155, y, 22, 20,  -4, -11]

    [ x    , y, 8 , 24,  -3, -13]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 33, 16, -16, -12]
    [ x+66 , y, 22, 20,  -6, -12]
}

// 8 Template
template template_Old_8(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]
}

template template_Old_8_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up

    [ x+89,     y,        8,        24,        -3,            -12]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]

    [ x,        y,        8,        24,        -3,            -12]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

// 4 Template
template template_4(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -24]
    [ x+9,      y,        22,        20,        -8,        -15]
    [ x+32,     y,        33,        16,        0,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -12,        -15]
}

template template_4_r(x, y) { //WIP
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        29,        -3,            -23]
    [ x+98,     y,        22,        20,        -8,        -15]
    [ x+121,    y,        33,        16,        0,        -12]
    [ x+155,    y,        22,        20,        -4,            -11]

    [ x,        y,        8,        29,        -3,            -16]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -12,        -15]
}

// 5 Template
template template_5(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -22]
    [ x+9,      y,        22,        20,        -10,        -14]
    [ x+32,     y,        33,        16,        -4,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -10,        -14]
}

// 6 Template
template template_6(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -20]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]
}

template template_6_r(x, y) { //WIP
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89,     y,        8,        29,        -3,            -20]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -8,        -13]

    [ x,        y,        8,        29,        -3,            -16]
    [ x+9,      y,        22,        20,        -12,        -13]
    [ x+32,     y,        33,        16,        -8,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

//7 Template
template template_7(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -18]
    [ x+9,      y,        22,        20,        -14,        -12]
    [ x+32,     y,        33,        16,        -12,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -15]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -6,        -12]
}

//7 Template Reversed
template template_7_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x+89 , y, 8 , 29,  -3, -18]
    [ x+98 , y, 22, 20, -14, -12]
    [ x+121, y, 33, 16, -12, -12]
    [ x+155, y, 22, 20,  -4, -11]

    [ x    , y, 8 , 29,  -3, -15]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 33, 16, -16, -12]
    [ x+66 , y, 22, 20,  -6, -12]
}

//7 Template Reversed Alt
template template_7_alt_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -15]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -6,            -12]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -14,        -12]
    [ x+121,    y,        33,        16,        -12,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]
}

// 8 Template
template template_8(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up
    [ x,        y,        8,        29,        -3,            -16]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]
}

template template_8_r(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    //                            more negative to shift left
    //                                            more negative to shift up

    [ x+89,     y,        8,        29,        -3,            -16]
    [ x+98,     y,        22,        20,        -16,        -11]
    [ x+121,    y,        33,        16,        -16,        -12]
    [ x+155,    y,        22,        20,        -4,        -11]

    [ x,        y,        8,        29,        -3,            -16]
    [ x+9,      y,        22,        20,        -16,        -11]
    [ x+32,     y,        33,        16,        -16,        -12]
    [ x+66,     y,        22,        20,        -4,            -11]
}

spriteset(spriteset_MU_purchase,   "gfx/El_MUDC.png") {template_purchase(7, 21)}
spriteset(spriteset_MU_trailer,   "gfx/El_MUDC.png") {template_Old_7(7, 89)}

//Vehicle
item (FEAT_TRAINS, Item_MU_Trailer, 0) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        track_type:                        RAIL;
		running_cost_base: RUNNING_COST_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;

        name:                            string(STR_MU_TRAILER);
        introduction_date:                date(1890,1,1);
        vehicle_life:                     VEHICLE_NEVER_EXPIRES;
        model_life:                        250;
        length:                            7;

        weight:                         0 ton;
        speed:                            0 mph;
		power:                            0 hp;
        cost_factor:                     100;
        running_cost_factor:             10;

        refittable_cargo_classes:        bitmask();
        default_cargo_type:                PASS;
        cargo_capacity:                    100;
        loading_speed: 30;

    }
    graphics {
        default:                        spriteset_MU_trailer;
        purchase:                        spriteset_MU_purchase;
        additional_text: string(STR_MU_TRAILER_INFO);

}
}

switch(FEAT_TRAINS, SELF, sw_Budd_RDC_attach, vehicle_type_id){
	Item_Budd_RDC_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_AmtrakPHII    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_AmtrakPHIII    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_AmtrakPHIV    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_NewHaven   : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_Stripes     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_ColouredFace    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_ColouredFaceMidStripe    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_ColouredFaceHighStripe    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_HalfFace    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_HalfFaceMidStripe    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_RDC_HalfFaceHighStripe    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_Silver_Purchase,   "gfx/Budd_RDC_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_Silver,   "gfx/Budd_RDC_Silver.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_Silver, 451) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_Silver;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_Silver_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_AmtrakPHII_Purchase,   "gfx/Budd_RDC_AmtrakPHII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_AmtrakPHII,   "gfx/Budd_RDC_AmtrakPHII.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_AmtrakPHII, 452) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_AmtrakPHII;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_AmtrakPHII_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_AmtrakPHIII_Purchase,   "gfx/Budd_RDC_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_AmtrakPHIII,   "gfx/Budd_RDC_AmtrakPHIII.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_AmtrakPHIII, 453) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_AmtrakPHIII;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_AmtrakPHIII_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_AmtrakPHIV_Purchase,   "gfx/Budd_RDC_AmtrakPHIV.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_AmtrakPHIV,   "gfx/Budd_RDC_AmtrakPHIV.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_AmtrakPHIV, 454) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_AmtrakPHIV;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_AmtrakPHIV_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_NewHaven_Purchase,   "gfx/Budd_RDC_NewHaven.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_NewHaven,   "gfx/Budd_RDC_NewHaven.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_NewHaven, 455) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_NewHaven;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_NewHaven_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_Stripes_Purchase,   "gfx/Budd_RDC_Stripes.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_Stripes,   "gfx/Budd_RDC_Stripes.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_Stripes, 456) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_Stripes;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_Stripes_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_ColouredFace_Purchase,   "gfx/Budd_RDC_ColouredFace.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_ColouredFace,   "gfx/Budd_RDC_ColouredFace.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_ColouredFace, 457) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_ColouredFace;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_ColouredFace_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_ColouredFaceMidStripe_Purchase,   "gfx/Budd_RDC_ColouredFaceMidStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_ColouredFaceMidStripe,   "gfx/Budd_RDC_ColouredFaceMidStripe.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_ColouredFaceMidStripe, 458) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_ColouredFaceMidStripe;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_ColouredFaceMidStripe_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_ColouredFaceHighStripe_Purchase,   "gfx/Budd_RDC_ColouredFaceHighStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_ColouredFaceHighStripe,   "gfx/Budd_RDC_ColouredFaceHighStripe.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_ColouredFaceHighStripe, 459) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_ColouredFaceHighStripe;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_ColouredFaceHighStripe_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_HalfFace_Purchase,   "gfx/Budd_RDC_HalfFace.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_HalfFace,   "gfx/Budd_RDC_HalfFace.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_HalfFace, 460) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_HalfFace;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_HalfFace_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_HalfFaceMidStripe_Purchase,   "gfx/Budd_RDC_HalfFaceMidStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_HalfFaceMidStripe,   "gfx/Budd_RDC_HalfFaceMidStripe.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_HalfFaceMidStripe, 461) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_HalfFaceMidStripe;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_HalfFaceMidStripe_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}

//Budd _RDC
spriteset(spriteset_Budd_RDC_HalfFaceHighStripe_Purchase,   "gfx/Budd_RDC_HalfFaceHighStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_RDC_HalfFaceHighStripe,   "gfx/Budd_RDC_HalfFaceHighStripe.png") {template_Old_7(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_RDC_HalfFaceHighStripe, 462) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_RDC);
        introduction_date:                date(1949,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        52 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     5;
        running_cost_factor:             64;
        cargo_capacity:                  93/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_RDC_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_RDC_HalfFaceHighStripe;
        can_attach_wagon: sw_Budd_RDC_attach;
        purchase: spriteset_Budd_RDC_HalfFaceHighStripe_Purchase;
        additional_text: string(STR_INFO_RDC);
}
}



switch(FEAT_TRAINS, SELF, sw_Budd_Sprinter_attach, vehicle_type_id){
	Item_Budd_Sprinter_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Sprinter_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Sprinter_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Sprinter_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_Sprinter_Silver
spriteset(spriteset_Budd_Sprinter_Silver_Purchase,   "gfx/Budd_Sprinter_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Sprinter_Silver,   "gfx/Budd_Sprinter_Silver.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_Sprinter_Silver, 801) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDD_SPRINTER);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             86;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Budd_Sprinter_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_Sprinter_Silver;
        can_attach_wagon: sw_Budd_Sprinter_attach;
        purchase: spriteset_Budd_Sprinter_Silver_Purchase;
        additional_text: string(STR_INFO_BUDD_SPRINTER);
}
}

//Budd_Sprinter_Liv1
spriteset(spriteset_Budd_Sprinter_Liv1_Purchase,   "gfx/Budd_Sprinter_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Sprinter_Liv1,   "gfx/Budd_Sprinter_Liv1.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_Sprinter_Liv1, 802) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDD_SPRINTER);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             86;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Budd_Sprinter_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_Sprinter_Liv1;
        can_attach_wagon: sw_Budd_Sprinter_attach;
        purchase: spriteset_Budd_Sprinter_Liv1_Purchase;
        additional_text: string(STR_INFO_BUDD_SPRINTER);
}
}

//Budd_Sprinter_Liv2
spriteset(spriteset_Budd_Sprinter_Liv2_Purchase,   "gfx/Budd_Sprinter_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Sprinter_Liv2,   "gfx/Budd_Sprinter_Liv2.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_Sprinter_Liv2, 803) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDD_SPRINTER);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             86;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Budd_Sprinter_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_Sprinter_Liv2;
        can_attach_wagon: sw_Budd_Sprinter_attach;
        purchase: spriteset_Budd_Sprinter_Liv2_Purchase;
        additional_text: string(STR_INFO_BUDD_SPRINTER);
}
}

//Budd_Sprinter_Liv3
spriteset(spriteset_Budd_Sprinter_Liv3_Purchase,   "gfx/Budd_Sprinter_Liv3.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Sprinter_Liv3,   "gfx/Budd_Sprinter_Liv3.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab

item(FEAT_TRAINS, Item_Budd_Sprinter_Liv3, 804) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    0; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDD_SPRINTER);
        introduction_date:                date(1982,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            900 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             86;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 40;

        variant_group: Item_Budd_Sprinter_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: spriteset_Budd_Sprinter_Liv3;
        can_attach_wagon: sw_Budd_Sprinter_attach;
        purchase: spriteset_Budd_Sprinter_Liv3_Purchase;
        additional_text: string(STR_INFO_BUDD_SPRINTER);
}
}

switch(FEAT_TRAINS, SELF, sw_EMDFlyLiner_attach, vehicle_type_id){
    Item_EMDFlyLiner_ATSF     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//EMDFlyLiner_ATSF
spriteset(spriteset_EMDFlyLiner_ATSF_Purchase,   "gfx/EMDFlyLiner_ATSF.png") {template_purchase(7, 21)}
spriteset(spriteset_EMDFlyLiner_ATSF_Lead,   "gfx/EMDFlyLiner_ATSF.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_EMDFlyLiner_ATSF_Rear,   "gfx/EMDFlyLiner_ATSF.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_EMDFlyLiner_ATSF_Trailer,   "gfx/EMDFlyLiner_ATSF.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_EMDFlyLiner_ATSF_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_EMDFlyLiner_ATSF_Rear;
    spriteset_EMDFlyLiner_ATSF_Lead;
}

item(FEAT_TRAINS, Item_EMDFlyLiner_ATSF, 6401) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_EMDFLYLINER);
        introduction_date:                date(1947,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        62 ton;
        speed:                            100 mph;
        power:                            3000 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     18;
        running_cost_factor:             110;
        cargo_capacity:                  0;
        loading_speed: 10;

        variant_group: Item_EMDFlyLiner_ATSF;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_EMDFlyLiner_ATSF_last;
        can_attach_wagon: sw_EMDFlyLiner_attach;
        purchase: spriteset_EMDFlyLiner_ATSF_Purchase;
        additional_text: string(STR_INFO_EMDFLYLINER);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_EMDFlyLiner_ATSF_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (65/param_capacity_mod);
		power:                            0;
		running_cost_factor: 11;
    }
}

switch(FEAT_TRAINS, SELF, sw_BuddElSargento_attach, vehicle_type_id){
    Item_BuddElSargento_ATSF     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//BuddElSargento_ATSF
spriteset(spriteset_BuddElSargento_ATSF_Purchase,   "gfx/BuddElSargento_ATSF.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddElSargento_ATSF_Lead,   "gfx/BuddElSargento_ATSF.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BuddElSargento_ATSF_Rear,   "gfx/BuddElSargento_ATSF.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BuddElSargento_ATSF_Trailer,   "gfx/BuddElSargento_ATSF.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_BuddElSargento_ATSF_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_BuddElSargento_ATSF_Rear;
    spriteset_BuddElSargento_ATSF_Lead;
}

item(FEAT_TRAINS, Item_BuddElSargento_ATSF, 6576) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDDELSARGENTO);
        introduction_date:                date(1960,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        45 ton;
        speed:                            110 mph;
        power:                            1000 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             125;
        cargo_capacity:                  70;
        loading_speed: 10;

        variant_group: Item_BuddElSargento_ATSF;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BuddElSargento_ATSF_last;
        can_attach_wagon: sw_BuddElSargento_attach;
        purchase: spriteset_BuddElSargento_ATSF_Purchase;
        additional_text: string(STR_INFO_BUDDELSARGENTO);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_BuddElSargento_ATSF_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (70/param_capacity_mod);
		power:                            500;
		running_cost_factor: 62;
    }
}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_XPT_attach, vehicle_type_id){
    Item_BuddComeng_XPT_AmtrakPHIII     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_BuddComeng_XPT_AmtrakPHIV     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_BuddComeng_XPT_AmtrakPHV     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_BuddComeng_XPT_AmtrakCalifornia     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//BuddComeng XPT
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIII_Purchase,   "gfx/BuddComeng_XPT_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIII_Lead,   "gfx/BuddComeng_XPT_AmtrakPHIII.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIII_Rear,   "gfx/BuddComeng_XPT_AmtrakPHIII.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIII_Mid,   "gfx/BuddComeng_XPT_AmtrakPHIII.png") {template_Old_8(7, 89)}
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIII_Trailer,   "gfx/BuddComeng_XPT_AmtrakPHIII.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_XPT_AmtrakPHIII_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_BuddComeng_XPT_AmtrakPHIII_Rear;
    spriteset_BuddComeng_XPT_AmtrakPHIII_Lead;
}

item(FEAT_TRAINS, Item_BuddComeng_XPT_AmtrakPHIII, 6901) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDDCOMENG_XPT);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        53 ton;
        speed:                            150 mph;
        power:                            4500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     26;
        running_cost_factor:             150;
        cargo_capacity:                  0;
        loading_speed: 10;

        variant_group: Item_BuddComeng_XPT_AmtrakPHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BuddComeng_XPT_AmtrakPHIII_last;
        can_attach_wagon: sw_BuddComeng_XPT_attach;
        purchase: spriteset_BuddComeng_XPT_AmtrakPHIII_Purchase;
        additional_text: string(STR_NAME_BUDDCOMENG_XPT);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_BuddComeng_XPT_AmtrakPHIII_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
		running_cost_factor: 15;
    }
}

//BuddComeng XPT
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIV_Purchase,   "gfx/BuddComeng_XPT_AmtrakPHIV.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIV_Lead,   "gfx/BuddComeng_XPT_AmtrakPHIV.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIV_Rear,   "gfx/BuddComeng_XPT_AmtrakPHIV.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIV_Mid,   "gfx/BuddComeng_XPT_AmtrakPHIV.png") {template_Old_8(7, 89)}
spriteset(spriteset_BuddComeng_XPT_AmtrakPHIV_Trailer,   "gfx/BuddComeng_XPT_AmtrakPHIV.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_XPT_AmtrakPHIV_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_BuddComeng_XPT_AmtrakPHIV_Rear;
    spriteset_BuddComeng_XPT_AmtrakPHIV_Lead;
}

item(FEAT_TRAINS, Item_BuddComeng_XPT_AmtrakPHIV, 6902) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDDCOMENG_XPT);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        53 ton;
        speed:                            150 mph;
        power:                            4500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     26;
        running_cost_factor:             150;
        cargo_capacity:                  0;
        loading_speed: 10;

        variant_group: Item_BuddComeng_XPT_AmtrakPHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BuddComeng_XPT_AmtrakPHIV_last;
        can_attach_wagon: sw_BuddComeng_XPT_attach;
        purchase: spriteset_BuddComeng_XPT_AmtrakPHIV_Purchase;
        additional_text: string(STR_NAME_BUDDCOMENG_XPT);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_BuddComeng_XPT_AmtrakPHIV_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
		running_cost_factor: 15;
    }
}

//BuddComeng XPT
spriteset(spriteset_BuddComeng_XPT_AmtrakPHV_Purchase,   "gfx/BuddComeng_XPT_AmtrakPHV.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_XPT_AmtrakPHV_Lead,   "gfx/BuddComeng_XPT_AmtrakPHV.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BuddComeng_XPT_AmtrakPHV_Rear,   "gfx/BuddComeng_XPT_AmtrakPHV.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BuddComeng_XPT_AmtrakPHV_Mid,   "gfx/BuddComeng_XPT_AmtrakPHV.png") {template_Old_8(7, 89)}
spriteset(spriteset_BuddComeng_XPT_AmtrakPHV_Trailer,   "gfx/BuddComeng_XPT_AmtrakPHV.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_XPT_AmtrakPHV_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_BuddComeng_XPT_AmtrakPHV_Rear;
    spriteset_BuddComeng_XPT_AmtrakPHV_Lead;
}

item(FEAT_TRAINS, Item_BuddComeng_XPT_AmtrakPHV, 6903) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDDCOMENG_XPT);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        53 ton;
        speed:                            150 mph;
        power:                            4500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     26;
        running_cost_factor:             150;
        cargo_capacity:                  0;
        loading_speed: 10;

        variant_group: Item_BuddComeng_XPT_AmtrakPHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BuddComeng_XPT_AmtrakPHV_last;
        can_attach_wagon: sw_BuddComeng_XPT_attach;
        purchase: spriteset_BuddComeng_XPT_AmtrakPHV_Purchase;
        additional_text: string(STR_NAME_BUDDCOMENG_XPT);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_BuddComeng_XPT_AmtrakPHV_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
		running_cost_factor: 15;
    }
}

//BuddComeng XPT
spriteset(spriteset_BuddComeng_XPT_AmtrakCalifornia_Purchase,   "gfx/BuddComeng_XPT_AmtrakCalifornia.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_XPT_AmtrakCalifornia_Lead,   "gfx/BuddComeng_XPT_AmtrakCalifornia.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BuddComeng_XPT_AmtrakCalifornia_Rear,   "gfx/BuddComeng_XPT_AmtrakCalifornia.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BuddComeng_XPT_AmtrakCalifornia_Mid,   "gfx/BuddComeng_XPT_AmtrakCalifornia.png") {template_Old_8(7, 89)}
spriteset(spriteset_BuddComeng_XPT_AmtrakCalifornia_Trailer,   "gfx/BuddComeng_XPT_AmtrakCalifornia.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_XPT_AmtrakCalifornia_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_BuddComeng_XPT_AmtrakCalifornia_Rear;
    spriteset_BuddComeng_XPT_AmtrakCalifornia_Lead;
}

item(FEAT_TRAINS, Item_BuddComeng_XPT_AmtrakCalifornia, 6904) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        RAIL;
        running_cost_base:                RUNNING_COST_DIESEL;
        engine_class:                     ENGINE_CLASS_DIESEL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_DIESEL;

        name:                            string(STR_NAME_BUDDCOMENG_XPT);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        53 ton;
        speed:                            150 mph;
        power:                            4500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     26;
        running_cost_factor:             150;
        cargo_capacity:                  0;
        loading_speed: 10;

        variant_group: Item_BuddComeng_XPT_AmtrakPHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BuddComeng_XPT_AmtrakCalifornia_last;
        can_attach_wagon: sw_BuddComeng_XPT_attach;
        purchase: spriteset_BuddComeng_XPT_AmtrakCalifornia_Purchase;
        additional_text: string(STR_NAME_BUDDCOMENG_XPT);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_BuddComeng_XPT_AmtrakCalifornia_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
		running_cost_factor: 15;
    }
}

//MP54 Lights
spriteset(spriteset_PRR_MP54_Headlights,   "gfx/PRR_MP54_Headlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_PRR_MP54_Headlights_r,   "gfx/PRR_MP54_Headlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)
spriteset(spriteset_PRR_MP54_Markerlights,   "gfx/PRR_MP54_Markerlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_PRR_MP54_Markerlights_r,   "gfx/PRR_MP54_Markerlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)

//OH MP54
spriteset(spriteset_PRR_MP54_OH_Purchase,   "gfx/PRR_MP54_OH.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_OH,   "gfx/PRR_MP54_OH.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_OH_r,   "gfx/PRR_MP54_OH.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)


switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_attach, vehicle_type_id){
    Item_PRR_MP54_OH_PRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_OH_PRR_LIRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_OH_PRR_LIRRMTA     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_OH_PRR_PennCentral     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_OH_PRR_WTC     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_OH_PRR_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_PRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_LIRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_LIRRMTA     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_PennCentral     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_WTC     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//OH MP54
spriteset(spriteset_PRR_MP54_OH_PRR_Purchase,   "gfx/PRR_MP54_OH_PRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_OH_PRR,   "gfx/PRR_MP54_OH_PRR.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_OH_PRR_r,   "gfx/PRR_MP54_OH_PRR.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_PRR_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_PRR_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_PRR_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_OH_PRR_r;
    spriteset_PRR_MP54_OH_PRR ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PRR_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_PRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_PRR_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PRR_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_PRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_PRR_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PRR_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_PRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_PRR_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_OH_PRR_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PRR_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_OH_PRR_markerlight_stack;
    return sw_PRR_MP54_OH_PRR_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PRR_lead, position_in_consist) {
    0: sw_PRR_MP54_OH_PRR_headlight_stack;
    return sw_PRR_MP54_OH_PRR_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PRR_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_OH_PRR_headlight_and_marker_stack;
return sw_PRR_MP54_OH_PRR_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_OH_PRR, 10101) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_OH);
        introduction_date:                date(1915,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_OH_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_OH_PRR_solo;
        can_attach_wagon: sw_PRR_MP54_OH_attach;
        purchase: spriteset_PRR_MP54_OH_PRR_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_OH);
}
}

//OH MP54
spriteset(spriteset_PRR_MP54_OH_LIRR_Purchase,   "gfx/PRR_MP54_OH_LIRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_OH_LIRR,   "gfx/PRR_MP54_OH_LIRR.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_OH_LIRR_r,   "gfx/PRR_MP54_OH_LIRR.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_LIRR_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_LIRR_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_LIRR_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_OH_LIRR_r;
    spriteset_PRR_MP54_OH_LIRR ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRR_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_LIRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_LIRR_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRR_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_LIRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_LIRR_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRR_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_LIRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_LIRR_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_OH_LIRR_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRR_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_OH_LIRR_markerlight_stack;
    return sw_PRR_MP54_OH_LIRR_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRR_lead, position_in_consist) {
    0: sw_PRR_MP54_OH_LIRR_headlight_stack;
    return sw_PRR_MP54_OH_LIRR_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRR_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_OH_LIRR_headlight_and_marker_stack;
return sw_PRR_MP54_OH_LIRR_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_OH_PRR_LIRR, 10102) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_OH);
        introduction_date:                date(1915,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_OH_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_OH_LIRR_solo;
        can_attach_wagon: sw_PRR_MP54_OH_attach;
        purchase: spriteset_PRR_MP54_OH_LIRR_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_OH);
}
}

//OH MP54
spriteset(spriteset_PRR_MP54_OH_LIRRMTA_Purchase,   "gfx/PRR_MP54_OH_LIRRMTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_OH_LIRRMTA,   "gfx/PRR_MP54_OH_LIRRMTA.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_OH_LIRRMTA_r,   "gfx/PRR_MP54_OH_LIRRMTA.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_LIRRMTA_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_LIRRMTA_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_LIRRMTA_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_OH_LIRRMTA_r;
    spriteset_PRR_MP54_OH_LIRRMTA ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRRMTA_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_LIRRMTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_LIRRMTA_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRRMTA_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_LIRRMTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_LIRRMTA_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRRMTA_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_LIRRMTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_LIRRMTA_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_OH_LIRRMTA_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRRMTA_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_OH_LIRRMTA_markerlight_stack;
    return sw_PRR_MP54_OH_LIRRMTA_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRRMTA_lead, position_in_consist) {
    0: sw_PRR_MP54_OH_LIRRMTA_headlight_stack;
    return sw_PRR_MP54_OH_LIRRMTA_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_LIRRMTA_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_OH_LIRRMTA_headlight_and_marker_stack;
return sw_PRR_MP54_OH_LIRRMTA_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_OH_PRR_LIRRMTA, 10103) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_OH);
        introduction_date:                date(1915,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_OH_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_OH_LIRRMTA_solo;
        can_attach_wagon: sw_PRR_MP54_OH_attach;
        purchase: spriteset_PRR_MP54_OH_LIRRMTA_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_OH);
}
}

//OH MP54
spriteset(spriteset_PRR_MP54_OH_PennCentral_Purchase,   "gfx/PRR_MP54_OH_PennCentral.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_OH_PennCentral,   "gfx/PRR_MP54_OH_PennCentral.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_OH_PennCentral_r,   "gfx/PRR_MP54_OH_PennCentral.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_PennCentral_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_PennCentral_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_PennCentral_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_OH_PennCentral_r;
    spriteset_PRR_MP54_OH_PennCentral ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PennCentral_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_PennCentral_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_PennCentral_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PennCentral_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_PennCentral_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_PennCentral_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PennCentral_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_PennCentral_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_PennCentral_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_OH_PennCentral_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PennCentral_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_OH_PennCentral_markerlight_stack;
    return sw_PRR_MP54_OH_PennCentral_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PennCentral_lead, position_in_consist) {
    0: sw_PRR_MP54_OH_PennCentral_headlight_stack;
    return sw_PRR_MP54_OH_PennCentral_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_PennCentral_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_OH_PennCentral_headlight_and_marker_stack;
return sw_PRR_MP54_OH_PennCentral_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_OH_PRR_PennCentral, 10104) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_OH);
        introduction_date:                date(1915,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_OH_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_OH_PennCentral_solo;
        can_attach_wagon: sw_PRR_MP54_OH_attach;
        purchase: spriteset_PRR_MP54_OH_PennCentral_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_OH);
}
}

//OH MP54
spriteset(spriteset_PRR_MP54_OH_WTC_Purchase,   "gfx/PRR_MP54_OH_WTC.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_OH_WTC,   "gfx/PRR_MP54_OH_WTC.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_OH_WTC_r,   "gfx/PRR_MP54_OH_WTC.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_WTC_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_WTC_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_WTC_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_OH_WTC_r;
    spriteset_PRR_MP54_OH_WTC ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_WTC_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_WTC_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_WTC_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_WTC_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_WTC_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_WTC_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_WTC_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_WTC_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_WTC_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_OH_WTC_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_WTC_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_OH_WTC_markerlight_stack;
    return sw_PRR_MP54_OH_WTC_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_WTC_lead, position_in_consist) {
    0: sw_PRR_MP54_OH_WTC_headlight_stack;
    return sw_PRR_MP54_OH_WTC_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_WTC_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_OH_WTC_headlight_and_marker_stack;
return sw_PRR_MP54_OH_WTC_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_OH_PRR_WTC, 10105) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_OH);
        introduction_date:                date(1915,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_OH_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_OH_WTC_solo;
        can_attach_wagon: sw_PRR_MP54_OH_attach;
        purchase: spriteset_PRR_MP54_OH_WTC_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_OH);
}
}

//OH MP54
spriteset(spriteset_PRR_MP54_OH_SEPTA_Purchase,   "gfx/PRR_MP54_OH_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_OH_SEPTA,   "gfx/PRR_MP54_OH_SEPTA.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_OH_SEPTA_r,   "gfx/PRR_MP54_OH_SEPTA.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_SEPTA_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_SEPTA_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_OH_SEPTA_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_OH_SEPTA_r;
    spriteset_PRR_MP54_OH_SEPTA ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_SEPTA_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_SEPTA_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_SEPTA_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_SEPTA_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_SEPTA_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_OH_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_OH_SEPTA_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_OH_SEPTA_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_SEPTA_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_OH_SEPTA_markerlight_stack;
    return sw_PRR_MP54_OH_SEPTA_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_OH_SEPTA_lead, position_in_consist) {
    0: sw_PRR_MP54_OH_SEPTA_headlight_stack;
    return sw_PRR_MP54_OH_SEPTA_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_OH_SEPTA_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_OH_SEPTA_headlight_and_marker_stack;
return sw_PRR_MP54_OH_SEPTA_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_OH_PRR_SEPTA, 10106) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_OH);
        introduction_date:                date(1915,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_OH_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_OH_SEPTA_solo;
        can_attach_wagon: sw_PRR_MP54_OH_attach;
        purchase: spriteset_PRR_MP54_OH_SEPTA_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_OH);
}
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_attach, vehicle_type_id){
	Item_LackawannaEMU_Twotone    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//LackawannaEMU_Twotone
spriteset(spriteset_LackawannaEMU_Twotone_purchase,   "gfx/LackawannaEMU_Twotone.png") {template_purchase(7, 21)}
spriteset(spriteset_LackawannaEMU_Twotone_Motor_lead,   "gfx/LackawannaEMU_Twotone.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_LackawannaEMU_Twotone_Motor_rear,   "gfx/LackawannaEMU_Twotone.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_LackawannaEMU_Twotone_DrivingTrailer_lead,   "gfx/LackawannaEMU_Twotone.png") {template_Old_8(187, 39)}
spriteset(spriteset_LackawannaEMU_Twotone_DrivingTrailer_rear,   "gfx/LackawannaEMU_Twotone.png") {template_Old_8(187, 64)}
spriteset(spriteset_LackawannaEMU_Twotone_Trailer,   "gfx/LackawannaEMU_Twotone.png") {template_Old_8(7, 89)}
spriteset(spriteset_LackawannaEMU_Twotone_NonControlMotor,   "gfx/LackawannaEMU_Twotone.png") {template_Old_8(187, 89)}
spriteset(spriteset_LackawannaEMU_Twotone_NonControlMotor_r,   "gfx/LackawannaEMU_Twotone.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_LackawannaEMU_Twotone_NonControlMotor_r;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_LackawannaEMU_Twotone_NonControlMotor;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_LackawannaEMU_Twotone_NonControlMotor_r;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_LackawannaEMU_Twotone_Trailer;
    return spriteset_LackawannaEMU_Twotone_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_LackawannaEMU_Twotone_NonControlMotor;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_LackawannaEMU_Twotone_pantocheck_at_1_r;
    return sw_LackawannaEMU_Twotone_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_LackawannaEMU_Twotone_Trailer;
    return sw_LackawannaEMU_Twotone_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_LackawannaEMU_Twotone_pantocheck_at_2_r;
    return sw_LackawannaEMU_Twotone_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_LackawannaEMU_Twotone_Trailer;
    3 : sw_LackawannaEMU_Twotone_pantocheck_at_1_r;
    4 : sw_LackawannaEMU_Twotone_sidecheck_4_r;
    5 : sw_LackawannaEMU_Twotone_pantocheck_at_2_r;
    6 .. 7 : sw_LackawannaEMU_Twotone_sidecheck_6_r;
    return sw_LackawannaEMU_Twotone_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_LackawannaEMU_Twotone_NonControlMotor_r;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_LackawannaEMU_Twotone_NonControlMotor;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_LackawannaEMU_Twotone_NonControlMotor_r;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_LackawannaEMU_Twotone_NonControlMotor;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_LackawannaEMU_Twotone_pantocheck_at_1;
    return sw_LackawannaEMU_Twotone_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_LackawannaEMU_Twotone_pantocheck_at_1;
    return spriteset_LackawannaEMU_Twotone_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_LackawannaEMU_Twotone_pantocheck_at_2;
    return sw_LackawannaEMU_Twotone_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_LackawannaEMU_Twotone_Trailer;
    3 : sw_LackawannaEMU_Twotone_pantocheck_at_1;
    4 : sw_LackawannaEMU_Twotone_sidecheck_4;
    5 : sw_LackawannaEMU_Twotone_pantocheck_at_2;
    6 .. 7 : sw_LackawannaEMU_Twotone_sidecheck_6;
    return sw_LackawannaEMU_Twotone_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_LackawannaEMU_Twotone_Motor_lead; //Panto
    return spriteset_LackawannaEMU_Twotone_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_panto_direction_r, vehicle_is_flipped){
    0 : sw_LackawannaEMU_Twotone_panto_direction_r_pos;        //Front panto
    return spriteset_LackawannaEMU_Twotone_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_LackawannaEMU_Twotone_panto_direction_r;        //Not flipped, give Panto
    return spriteset_LackawannaEMU_Twotone_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_frontcheck_r, position_in_vehid_chain){
    0: sw_LackawannaEMU_Twotone_panto_direction_r; //We need a pantograph, guaranteed
    return sw_LackawannaEMU_Twotone_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_panto_direction, vehicle_is_flipped){
    0 : spriteset_LackawannaEMU_Twotone_Motor_lead;        //Front panto
    return spriteset_LackawannaEMU_Twotone_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_panto_flipcheck, vehicle_is_flipped){
    0 : sw_LackawannaEMU_Twotone_panto_direction;        //Not flipped, give Panto
    return spriteset_LackawannaEMU_Twotone_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_LackawannaEMU_Twotone_frontcheck, position_in_vehid_chain){
    0: sw_LackawannaEMU_Twotone_panto_direction; //We need a pantograph, guaranteed
    return sw_LackawannaEMU_Twotone_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_LackawannaEMU_Twotone_directioncheck, vehicle_is_reversed){
    0: sw_LackawannaEMU_Twotone_frontcheck; //We are going forwards
    return sw_LackawannaEMU_Twotone_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_LackawannaEMU_Twotone_revcheck, vehicle_is_reversed){
    0 : sw_LackawannaEMU_Twotone_lencheck;
    return sw_LackawannaEMU_Twotone_lencheck_r;
}

item(FEAT_TRAINS, Item_LackawannaEMU_Twotone, 10301) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_LACKAWANNAEMU);
        introduction_date:                date(1930,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        55 ton;
        speed:                            65 mph;
        power:                            1000 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             206;
        cargo_capacity:                  95/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_LackawannaEMU_Twotone;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_LackawannaEMU_Twotone_directioncheck;
        can_attach_wagon: sw_LackawannaEMU_attach ;
        purchase: spriteset_LackawannaEMU_Twotone_purchase;
        additional_text: string(STR_INFO_LACKAWANNAEMU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_LackawannaEMU_Twotone_revcheck ;
        length                      : 8;
        cargo_capacity              : (95/param_capacity_mod) ;
        power                       : 500 ;
		running_cost_factor: 51;

    }
}

//Bluebird Lights
spriteset(spriteset_BluebirdEMU_Headlights,   "gfx/BluebirdEMU_Headlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_BluebirdEMU_Headlights_r,   "gfx/BluebirdEMU_Headlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)
spriteset(spriteset_BluebirdEMU_Markerlights,   "gfx/BluebirdEMU_Markerlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_BluebirdEMU_Markerlights_r,   "gfx/BluebirdEMU_Markerlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)


//BluebirdEMU
spriteset(spriteset_BluebirdEMU_Purchase,   "gfx/BluebirdEMU.png") {template_purchase(7, 21)}
spriteset(spriteset_BluebirdEMU,   "gfx/BluebirdEMU.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_BluebirdEMU_r,   "gfx/BluebirdEMU.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)


switch(FEAT_TRAINS, SELF, sw_BluebirdEMU_attach, vehicle_type_id){
    Item_BluebirdEMU_Reading     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_BluebirdEMU_Bluebird     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_BluebirdEMU_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//BluebirdEMU_Reading
spriteset(spriteset_BluebirdEMU_Reading_Purchase,   "gfx/BluebirdEMU_Reading.png") {template_purchase(7, 21)}
spriteset(spriteset_BluebirdEMU_Reading,   "gfx/BluebirdEMU_Reading.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_BluebirdEMU_Reading_r,   "gfx/BluebirdEMU_Reading.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_Reading_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_BluebirdEMU_Headlights_r;
    spriteset_BluebirdEMU_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_Reading_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_BluebirdEMU_Markerlights_r;
    spriteset_BluebirdEMU_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_Reading_flipcheck, vehicle_is_reversed){
    1: spriteset_BluebirdEMU_Reading_r;
    spriteset_BluebirdEMU_Reading ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Reading_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_Reading_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_Reading_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Reading_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_Reading_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_Reading_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Reading_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_Reading_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_Reading_headlight_flipcheck;    // Return the headlight overlay
    return sw_BluebirdEMU_Reading_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_BluebirdEMU_Reading_rear, position_in_consist_from_end){
    0 : return sw_BluebirdEMU_Reading_markerlight_stack;
    return sw_BluebirdEMU_Reading_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Reading_lead, position_in_consist) {
    0: sw_BluebirdEMU_Reading_headlight_stack;
    return sw_BluebirdEMU_Reading_rear;
}

switch(FEAT_TRAINS, SELF, sw_BluebirdEMU_Reading_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_BluebirdEMU_Reading_headlight_and_marker_stack;
return sw_BluebirdEMU_Reading_lead;
}

item(FEAT_TRAINS, Item_BluebirdEMU_Reading, 10351) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BLUEBIRDEMU);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            70 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BluebirdEMU_Reading;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BluebirdEMU_Reading_solo;
        can_attach_wagon: sw_BluebirdEMU_attach;
        purchase: spriteset_BluebirdEMU_Reading_Purchase;
        additional_text: string(STR_INFO_BLUEBIRDEMU);
}
}

//BluebirdEMU_Bluebird
spriteset(spriteset_BluebirdEMU_Bluebird_Purchase,   "gfx/BluebirdEMU_Bluebird.png") {template_purchase(7, 21)}
spriteset(spriteset_BluebirdEMU_Bluebird,   "gfx/BluebirdEMU_Bluebird.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_BluebirdEMU_Bluebird_r,   "gfx/BluebirdEMU_Bluebird.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_Bluebird_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_BluebirdEMU_Headlights_r;
    spriteset_BluebirdEMU_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_Bluebird_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_BluebirdEMU_Markerlights_r;
    spriteset_BluebirdEMU_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_Bluebird_flipcheck, vehicle_is_reversed){
    1: spriteset_BluebirdEMU_Bluebird_r;
    spriteset_BluebirdEMU_Bluebird ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Bluebird_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_Bluebird_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_Bluebird_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Bluebird_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_Bluebird_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_Bluebird_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Bluebird_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_Bluebird_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_Bluebird_headlight_flipcheck;    // Return the headlight overlay
    return sw_BluebirdEMU_Bluebird_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_BluebirdEMU_Bluebird_rear, position_in_consist_from_end){
    0 : return sw_BluebirdEMU_Bluebird_markerlight_stack;
    return sw_BluebirdEMU_Bluebird_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_Bluebird_lead, position_in_consist) {
    0: sw_BluebirdEMU_Bluebird_headlight_stack;
    return sw_BluebirdEMU_Bluebird_rear;
}

switch(FEAT_TRAINS, SELF, sw_BluebirdEMU_Bluebird_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_BluebirdEMU_Bluebird_headlight_and_marker_stack;
return sw_BluebirdEMU_Bluebird_lead;
}

item(FEAT_TRAINS, Item_BluebirdEMU_Bluebird, 10352) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BLUEBIRDEMU);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            70 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BluebirdEMU_Reading;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BluebirdEMU_Bluebird_solo;
        can_attach_wagon: sw_BluebirdEMU_attach;
        purchase: spriteset_BluebirdEMU_Bluebird_Purchase;
        additional_text: string(STR_INFO_BLUEBIRDEMU);
}
}

//BluebirdEMU_SEPTA
spriteset(spriteset_BluebirdEMU_SEPTA_Purchase,   "gfx/BluebirdEMU_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_BluebirdEMU_SEPTA,   "gfx/BluebirdEMU_SEPTA.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_BluebirdEMU_SEPTA_r,   "gfx/BluebirdEMU_SEPTA.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_SEPTA_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_BluebirdEMU_Headlights_r;
    spriteset_BluebirdEMU_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_SEPTA_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_BluebirdEMU_Markerlights_r;
    spriteset_BluebirdEMU_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_BluebirdEMU_SEPTA_flipcheck, vehicle_is_reversed){
    1: spriteset_BluebirdEMU_SEPTA_r;
    spriteset_BluebirdEMU_SEPTA ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_SEPTA_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_SEPTA_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_SEPTA_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_SEPTA_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_SEPTA_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_BluebirdEMU_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_BluebirdEMU_SEPTA_headlight_flipcheck;    // Return the headlight overlay
    return sw_BluebirdEMU_SEPTA_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_BluebirdEMU_SEPTA_rear, position_in_consist_from_end){
    0 : return sw_BluebirdEMU_SEPTA_markerlight_stack;
    return sw_BluebirdEMU_SEPTA_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_BluebirdEMU_SEPTA_lead, position_in_consist) {
    0: sw_BluebirdEMU_SEPTA_headlight_stack;
    return sw_BluebirdEMU_SEPTA_rear;
}

switch(FEAT_TRAINS, SELF, sw_BluebirdEMU_SEPTA_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_BluebirdEMU_SEPTA_headlight_and_marker_stack;
return sw_BluebirdEMU_SEPTA_lead;
}

item(FEAT_TRAINS, Item_BluebirdEMU_SEPTA, 10353) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BLUEBIRDEMU);
        introduction_date:                date(1931,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            70 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BluebirdEMU_Reading;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BluebirdEMU_SEPTA_solo;
        can_attach_wagon: sw_BluebirdEMU_attach;
        purchase: spriteset_BluebirdEMU_SEPTA_Purchase;
        additional_text: string(STR_INFO_BLUEBIRDEMU);
}
}


switch(FEAT_TRAINS, SELF, sw_CCandFEMU_attach, vehicle_type_id){
	Item_CCandFEMU_CN1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_CCandFEMU_CN2    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//CCandFEMU_CN1
spriteset(spriteset_CCandFEMU_CN1_purchase,   "gfx/CCandFEMU_CN1.png") {template_purchase(7, 21)}
spriteset(spriteset_CCandFEMU_CN1_Motor_lead,   "gfx/CCandFEMU_CN1.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CCandFEMU_CN1_Motor_rear,   "gfx/CCandFEMU_CN1.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CCandFEMU_CN1_DrivingTrailer_lead,   "gfx/CCandFEMU_CN1.png") {template_Old_8(187, 39)}
spriteset(spriteset_CCandFEMU_CN1_DrivingTrailer_rear,   "gfx/CCandFEMU_CN1.png") {template_Old_8(187, 64)}
spriteset(spriteset_CCandFEMU_CN1_Trailer,   "gfx/CCandFEMU_CN1.png") {template_Old_8(7, 89)}
spriteset(spriteset_CCandFEMU_CN1_NonControlMotor,   "gfx/CCandFEMU_CN1.png") {template_Old_8(187, 89)}
spriteset(spriteset_CCandFEMU_CN1_NonControlMotor_r,   "gfx/CCandFEMU_CN1.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_CCandFEMU_CN1_NonControlMotor_r;
    return spriteset_CCandFEMU_CN1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_CCandFEMU_CN1_NonControlMotor;
    return spriteset_CCandFEMU_CN1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_CCandFEMU_CN1_NonControlMotor_r;
    return spriteset_CCandFEMU_CN1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_CCandFEMU_CN1_Trailer;
    return spriteset_CCandFEMU_CN1_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_CCandFEMU_CN1_NonControlMotor;
    return spriteset_CCandFEMU_CN1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN1_pantocheck_at_1_r;
    return sw_CCandFEMU_CN1_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_CCandFEMU_CN1_Trailer;
    return sw_CCandFEMU_CN1_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN1_pantocheck_at_2_r;
    return sw_CCandFEMU_CN1_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_CCandFEMU_CN1_Trailer;
    3 : sw_CCandFEMU_CN1_pantocheck_at_1_r;
    4 : sw_CCandFEMU_CN1_sidecheck_4_r;
    5 : sw_CCandFEMU_CN1_pantocheck_at_2_r;
    6 .. 7 : sw_CCandFEMU_CN1_sidecheck_6_r;
    return sw_CCandFEMU_CN1_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_CCandFEMU_CN1_NonControlMotor_r;
    return spriteset_CCandFEMU_CN1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_CCandFEMU_CN1_NonControlMotor;
    return spriteset_CCandFEMU_CN1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_CCandFEMU_CN1_NonControlMotor_r;
    return spriteset_CCandFEMU_CN1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_CCandFEMU_CN1_NonControlMotor;
    return spriteset_CCandFEMU_CN1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN1_pantocheck_at_1;
    return sw_CCandFEMU_CN1_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN1_pantocheck_at_1;
    return spriteset_CCandFEMU_CN1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN1_pantocheck_at_2;
    return sw_CCandFEMU_CN1_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_CCandFEMU_CN1_Trailer;
    3 : sw_CCandFEMU_CN1_pantocheck_at_1;
    4 : sw_CCandFEMU_CN1_sidecheck_4;
    5 : sw_CCandFEMU_CN1_pantocheck_at_2;
    6 .. 7 : sw_CCandFEMU_CN1_sidecheck_6;
    return sw_CCandFEMU_CN1_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_CCandFEMU_CN1_Motor_lead; //Panto
    return spriteset_CCandFEMU_CN1_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_panto_direction_r, vehicle_is_flipped){
    0 : sw_CCandFEMU_CN1_panto_direction_r_pos;        //Front panto
    return spriteset_CCandFEMU_CN1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_CCandFEMU_CN1_panto_direction_r;        //Not flipped, give Panto
    return spriteset_CCandFEMU_CN1_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_frontcheck_r, position_in_vehid_chain){
    0: sw_CCandFEMU_CN1_panto_direction_r; //We need a pantograph, guaranteed
    return sw_CCandFEMU_CN1_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_panto_direction, vehicle_is_flipped){
    0 : spriteset_CCandFEMU_CN1_Motor_lead;        //Front panto
    return spriteset_CCandFEMU_CN1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_panto_flipcheck, vehicle_is_flipped){
    0 : sw_CCandFEMU_CN1_panto_direction;        //Not flipped, give Panto
    return spriteset_CCandFEMU_CN1_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN1_frontcheck, position_in_vehid_chain){
    0: sw_CCandFEMU_CN1_panto_direction; //We need a pantograph, guaranteed
    return sw_CCandFEMU_CN1_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_CCandFEMU_CN1_directioncheck, vehicle_is_reversed){
    0: sw_CCandFEMU_CN1_frontcheck; //We are going forwards
    return sw_CCandFEMU_CN1_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_CCandFEMU_CN1_revcheck, vehicle_is_reversed){
    0 : sw_CCandFEMU_CN1_lencheck;
    return sw_CCandFEMU_CN1_lencheck_r;
}

item(FEAT_TRAINS, Item_CCandFEMU_CN1, 10501) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CCANDFEMU);
        introduction_date:                date(1953,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        51 ton;
        speed:                            65 mph;
        power:                            700 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  101/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_CCandFEMU_CN1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CCandFEMU_CN1_directioncheck;
        can_attach_wagon: sw_CCandFEMU_attach ;
        purchase: spriteset_CCandFEMU_CN1_purchase;
        additional_text: string(STR_INFO_CCANDFEMU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_CCandFEMU_CN1_revcheck ;
        length                      : 8;
        cargo_capacity              : (101/param_capacity_mod) ;
        power                       : 350 ;
		running_cost_factor: 45;

    }
}

//CCandFEMU_CN2
spriteset(spriteset_CCandFEMU_CN2_purchase,   "gfx/CCandFEMU_CN2.png") {template_purchase(7, 21)}
spriteset(spriteset_CCandFEMU_CN2_Motor_lead,   "gfx/CCandFEMU_CN2.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_CCandFEMU_CN2_Motor_rear,   "gfx/CCandFEMU_CN2.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_CCandFEMU_CN2_DrivingTrailer_lead,   "gfx/CCandFEMU_CN2.png") {template_Old_8(187, 39)}
spriteset(spriteset_CCandFEMU_CN2_DrivingTrailer_rear,   "gfx/CCandFEMU_CN2.png") {template_Old_8(187, 64)}
spriteset(spriteset_CCandFEMU_CN2_Trailer,   "gfx/CCandFEMU_CN2.png") {template_Old_8(7, 89)}
spriteset(spriteset_CCandFEMU_CN2_NonControlMotor,   "gfx/CCandFEMU_CN2.png") {template_Old_8(187, 89)}
spriteset(spriteset_CCandFEMU_CN2_NonControlMotor_r,   "gfx/CCandFEMU_CN2.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_CCandFEMU_CN2_NonControlMotor_r;
    return spriteset_CCandFEMU_CN2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_CCandFEMU_CN2_NonControlMotor;
    return spriteset_CCandFEMU_CN2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_CCandFEMU_CN2_NonControlMotor_r;
    return spriteset_CCandFEMU_CN2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_CCandFEMU_CN2_Trailer;
    return spriteset_CCandFEMU_CN2_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_CCandFEMU_CN2_NonControlMotor;
    return spriteset_CCandFEMU_CN2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN2_pantocheck_at_1_r;
    return sw_CCandFEMU_CN2_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_CCandFEMU_CN2_Trailer;
    return sw_CCandFEMU_CN2_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN2_pantocheck_at_2_r;
    return sw_CCandFEMU_CN2_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_CCandFEMU_CN2_Trailer;
    3 : sw_CCandFEMU_CN2_pantocheck_at_1_r;
    4 : sw_CCandFEMU_CN2_sidecheck_4_r;
    5 : sw_CCandFEMU_CN2_pantocheck_at_2_r;
    6 .. 7 : sw_CCandFEMU_CN2_sidecheck_6_r;
    return sw_CCandFEMU_CN2_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_CCandFEMU_CN2_NonControlMotor_r;
    return spriteset_CCandFEMU_CN2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_CCandFEMU_CN2_NonControlMotor;
    return spriteset_CCandFEMU_CN2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_CCandFEMU_CN2_NonControlMotor_r;
    return spriteset_CCandFEMU_CN2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_CCandFEMU_CN2_NonControlMotor;
    return spriteset_CCandFEMU_CN2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN2_pantocheck_at_1;
    return sw_CCandFEMU_CN2_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN2_pantocheck_at_1;
    return spriteset_CCandFEMU_CN2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_CCandFEMU_CN2_pantocheck_at_2;
    return sw_CCandFEMU_CN2_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_CCandFEMU_CN2_Trailer;
    3 : sw_CCandFEMU_CN2_pantocheck_at_1;
    4 : sw_CCandFEMU_CN2_sidecheck_4;
    5 : sw_CCandFEMU_CN2_pantocheck_at_2;
    6 .. 7 : sw_CCandFEMU_CN2_sidecheck_6;
    return sw_CCandFEMU_CN2_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_CCandFEMU_CN2_Motor_lead; //Panto
    return spriteset_CCandFEMU_CN2_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_panto_direction_r, vehicle_is_flipped){
    0 : sw_CCandFEMU_CN2_panto_direction_r_pos;        //Front panto
    return spriteset_CCandFEMU_CN2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_CCandFEMU_CN2_panto_direction_r;        //Not flipped, give Panto
    return spriteset_CCandFEMU_CN2_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_frontcheck_r, position_in_vehid_chain){
    0: sw_CCandFEMU_CN2_panto_direction_r; //We need a pantograph, guaranteed
    return sw_CCandFEMU_CN2_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_panto_direction, vehicle_is_flipped){
    0 : spriteset_CCandFEMU_CN2_Motor_lead;        //Front panto
    return spriteset_CCandFEMU_CN2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_panto_flipcheck, vehicle_is_flipped){
    0 : sw_CCandFEMU_CN2_panto_direction;        //Not flipped, give Panto
    return spriteset_CCandFEMU_CN2_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_CCandFEMU_CN2_frontcheck, position_in_vehid_chain){
    0: sw_CCandFEMU_CN2_panto_direction; //We need a pantograph, guaranteed
    return sw_CCandFEMU_CN2_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_CCandFEMU_CN2_directioncheck, vehicle_is_reversed){
    0: sw_CCandFEMU_CN2_frontcheck; //We are going forwards
    return sw_CCandFEMU_CN2_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_CCandFEMU_CN2_revcheck, vehicle_is_reversed){
    0 : sw_CCandFEMU_CN2_lencheck;
    return sw_CCandFEMU_CN2_lencheck_r;
}

item(FEAT_TRAINS, Item_CCandFEMU_CN2, 10502) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_CCANDFEMU);
        introduction_date:                date(1953,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        51 ton;
        speed:                            65 mph;
        power:                            700 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             180;
        cargo_capacity:                  101/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_CCandFEMU_CN1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_CCandFEMU_CN2_directioncheck;
        can_attach_wagon: sw_CCandFEMU_attach ;
        purchase: spriteset_CCandFEMU_CN2_purchase;
        additional_text: string(STR_INFO_CCANDFEMU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_CCandFEMU_CN2_revcheck ;
        length                      : 8;
        cargo_capacity              : (101/param_capacity_mod) ;
        power                       : 350 ;
		running_cost_factor: 45;

    }
}

switch(FEAT_TRAINS, SELF, sw_WashboardEMU_attach, vehicle_type_id){
	Item_WashboardEMU_NewHaven1     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_WashboardEMU_NewHaven2     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_WashboardEMU_MBTA     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_WashboardEMU_Generic1     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//WashboardEMU_NewHaven1
spriteset(spriteset_WashboardEMU_NewHaven1_Purchase,   "gfx/WashboardEMU_NewHaven1.png") {template_purchase(7, 21)}
spriteset(spriteset_WashboardEMU_NewHaven1,   "gfx/WashboardEMU_NewHaven1.png") {template_Old_8(7, 39)} 
spriteset(spriteset_WashboardEMU_NewHaven1_r,   "gfx/WashboardEMU_NewHaven1.png") {template_Old_8_r(7, 39)} 

random_switch(FEAT_TRAINS, SELF, sw_WashboardEMU_NewHaven1_Random){
    1 : spriteset_WashboardEMU_NewHaven1;
    2 : spriteset_WashboardEMU_NewHaven1_r;
}

item(FEAT_TRAINS, Item_WashboardEMU_NewHaven1, 10551) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_WASHBOARDEMU);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        45 ton;
        speed:                            70 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             176;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_WashboardEMU_NewHaven1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_WashboardEMU_NewHaven1_Random;
        can_attach_wagon: sw_WashboardEMU_attach;
        purchase: spriteset_WashboardEMU_NewHaven1_Purchase;
        additional_text: string(STR_INFO_WASHBOARDEMU);
}
}

//WashboardEMU_NewHaven2
spriteset(spriteset_WashboardEMU_NewHaven2_Purchase,   "gfx/WashboardEMU_NewHaven2.png") {template_purchase(7, 21)}
spriteset(spriteset_WashboardEMU_NewHaven2,   "gfx/WashboardEMU_NewHaven2.png") {template_Old_8(7, 39)} 
spriteset(spriteset_WashboardEMU_NewHaven2_r,   "gfx/WashboardEMU_NewHaven2.png") {template_Old_8_r(7, 39)} 

random_switch(FEAT_TRAINS, SELF, sw_WashboardEMU_NewHaven2_Random){
    1 : spriteset_WashboardEMU_NewHaven2;
    2 : spriteset_WashboardEMU_NewHaven2_r;
}

item(FEAT_TRAINS, Item_WashboardEMU_NewHaven2, 10552) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_WASHBOARDEMU);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        45 ton;
        speed:                            70 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             176;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_WashboardEMU_NewHaven1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_WashboardEMU_NewHaven2_Random;
        can_attach_wagon: sw_WashboardEMU_attach;
        purchase: spriteset_WashboardEMU_NewHaven2_Purchase;
        additional_text: string(STR_INFO_WASHBOARDEMU);
}
}

//WashboardEMU_MBTA
spriteset(spriteset_WashboardEMU_MBTA_Purchase,   "gfx/WashboardEMU_MBTA.png") {template_purchase(7, 21)}
spriteset(spriteset_WashboardEMU_MBTA,   "gfx/WashboardEMU_MBTA.png") {template_Old_8(7, 39)} 
spriteset(spriteset_WashboardEMU_MBTA_r,   "gfx/WashboardEMU_MBTA.png") {template_Old_8_r(7, 39)} 

random_switch(FEAT_TRAINS, SELF, sw_WashboardEMU_MBTA_Random){
    1 : spriteset_WashboardEMU_MBTA;
    2 : spriteset_WashboardEMU_MBTA_r;
}

item(FEAT_TRAINS, Item_WashboardEMU_MBTA, 10553) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_WASHBOARDEMU);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        45 ton;
        speed:                            70 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             176;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_WashboardEMU_NewHaven1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_WashboardEMU_MBTA_Random;
        can_attach_wagon: sw_WashboardEMU_attach;
        purchase: spriteset_WashboardEMU_MBTA_Purchase;
        additional_text: string(STR_INFO_WASHBOARDEMU);
}
}

//WashboardEMU_Generic1
spriteset(spriteset_WashboardEMU_Generic1_Purchase,   "gfx/WashboardEMU_Generic1.png") {template_purchase(7, 21)}
spriteset(spriteset_WashboardEMU_Generic1,   "gfx/WashboardEMU_Generic1.png") {template_Old_8(7, 39)} 
spriteset(spriteset_WashboardEMU_Generic1_r,   "gfx/WashboardEMU_Generic1.png") {template_Old_8_r(7, 39)} 

random_switch(FEAT_TRAINS, SELF, sw_WashboardEMU_Generic1_Random){
    1 : spriteset_WashboardEMU_Generic1;
    2 : spriteset_WashboardEMU_Generic1_r;
}

item(FEAT_TRAINS, Item_WashboardEMU_Generic1, 10554) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_WASHBOARDEMU);
        introduction_date:                date(1954,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        45 ton;
        speed:                            70 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             176;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_WashboardEMU_NewHaven1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_WashboardEMU_Generic1_Random;
        can_attach_wagon: sw_WashboardEMU_attach;
        purchase: spriteset_WashboardEMU_Generic1_Purchase;
        additional_text: string(STR_INFO_WASHBOARDEMU);
}
}

//PioneerIII Lights
spriteset(spriteset_PioneerIII_Headlights,   "gfx/PioneerIII_Headlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_PioneerIII_Headlights_r,   "gfx/PioneerIII_Headlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)
spriteset(spriteset_PioneerIII_Markerlights,   "gfx/PioneerIII_Markerlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_PioneerIII_Markerlights_r,   "gfx/PioneerIII_Markerlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)


//PioneerIII
spriteset(spriteset_PioneerIII_Purchase,   "gfx/PioneerIII.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIII,   "gfx/PioneerIII.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PioneerIII_r,   "gfx/PioneerIII.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)


switch(FEAT_TRAINS, SELF, sw_PioneerIII_attach, vehicle_type_id){
    Item_PioneerIII_CompanyColour     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PioneerIII_Production     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PioneerIII_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PioneerIII_SEPTAAirport     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//PioneerIII_CompanyColour
spriteset(spriteset_PioneerIII_CompanyColour_Purchase,   "gfx/PioneerIII_CompanyColour.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIII_CompanyColour,   "gfx/PioneerIII_CompanyColour.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PioneerIII_CompanyColour_r,   "gfx/PioneerIII_CompanyColour.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_CompanyColour_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Headlights_r;
    spriteset_PioneerIII_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_CompanyColour_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Markerlights_r;
    spriteset_PioneerIII_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_CompanyColour_flipcheck, vehicle_is_reversed){
    1: spriteset_PioneerIII_CompanyColour_r;
    spriteset_PioneerIII_CompanyColour ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_CompanyColour_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_CompanyColour_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_CompanyColour_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_CompanyColour_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_CompanyColour_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_CompanyColour_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_CompanyColour_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_CompanyColour_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_CompanyColour_headlight_flipcheck;    // Return the headlight overlay
    return sw_PioneerIII_CompanyColour_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PioneerIII_CompanyColour_rear, position_in_consist_from_end){
    0 : return sw_PioneerIII_CompanyColour_markerlight_stack;
    return sw_PioneerIII_CompanyColour_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PioneerIII_CompanyColour_lead, position_in_consist) {
    0: sw_PioneerIII_CompanyColour_headlight_stack;
    return sw_PioneerIII_CompanyColour_rear;
}

switch(FEAT_TRAINS, SELF, sw_PioneerIII_CompanyColour_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PioneerIII_CompanyColour_headlight_and_marker_stack;
return sw_PioneerIII_CompanyColour_lead;
}

item(FEAT_TRAINS, Item_PioneerIII_CompanyColour, 10576) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PIONEERIII);
        introduction_date:                date(1958,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             128;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PioneerIII_CompanyColour;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PioneerIII_CompanyColour_solo;
        can_attach_wagon: sw_PioneerIII_attach;
        purchase: spriteset_PioneerIII_CompanyColour_Purchase;
        additional_text: string(STR_INFO_PIONEERIII);
}
}

//PioneerIII_Production
spriteset(spriteset_PioneerIII_Production_Purchase,   "gfx/PioneerIII_Production.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIII_Production,   "gfx/PioneerIII_Production.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PioneerIII_Production_r,   "gfx/PioneerIII_Production.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_Production_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Headlights_r;
    spriteset_PioneerIII_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_Production_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Markerlights_r;
    spriteset_PioneerIII_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_Production_flipcheck, vehicle_is_reversed){
    1: spriteset_PioneerIII_Production_r;
    spriteset_PioneerIII_Production ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_Production_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_Production_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_Production_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_Production_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_Production_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_Production_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_Production_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_Production_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_Production_headlight_flipcheck;    // Return the headlight overlay
    return sw_PioneerIII_Production_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PioneerIII_Production_rear, position_in_consist_from_end){
    0 : return sw_PioneerIII_Production_markerlight_stack;
    return sw_PioneerIII_Production_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PioneerIII_Production_lead, position_in_consist) {
    0: sw_PioneerIII_Production_headlight_stack;
    return sw_PioneerIII_Production_rear;
}

switch(FEAT_TRAINS, SELF, sw_PioneerIII_Production_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PioneerIII_Production_headlight_and_marker_stack;
return sw_PioneerIII_Production_lead;
}

item(FEAT_TRAINS, Item_PioneerIII_Production, 10577) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PIONEERIII);
        introduction_date:                date(1958,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             128;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PioneerIII_CompanyColour;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PioneerIII_Production_solo;
        can_attach_wagon: sw_PioneerIII_attach;
        purchase: spriteset_PioneerIII_Production_Purchase;
        additional_text: string(STR_INFO_PIONEERIII);
}
}

//PioneerIII_SEPTA
spriteset(spriteset_PioneerIII_SEPTA_Purchase,   "gfx/PioneerIII_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIII_SEPTA,   "gfx/PioneerIII_SEPTA.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PioneerIII_SEPTA_r,   "gfx/PioneerIII_SEPTA.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_SEPTA_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Headlights_r;
    spriteset_PioneerIII_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_SEPTA_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Markerlights_r;
    spriteset_PioneerIII_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_SEPTA_flipcheck, vehicle_is_reversed){
    1: spriteset_PioneerIII_SEPTA_r;
    spriteset_PioneerIII_SEPTA ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTA_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_SEPTA_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTA_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_SEPTA_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTA_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_SEPTA_headlight_flipcheck;    // Return the headlight overlay
    return sw_PioneerIII_SEPTA_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PioneerIII_SEPTA_rear, position_in_consist_from_end){
    0 : return sw_PioneerIII_SEPTA_markerlight_stack;
    return sw_PioneerIII_SEPTA_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTA_lead, position_in_consist) {
    0: sw_PioneerIII_SEPTA_headlight_stack;
    return sw_PioneerIII_SEPTA_rear;
}

switch(FEAT_TRAINS, SELF, sw_PioneerIII_SEPTA_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PioneerIII_SEPTA_headlight_and_marker_stack;
return sw_PioneerIII_SEPTA_lead;
}

item(FEAT_TRAINS, Item_PioneerIII_SEPTA, 10578) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PIONEERIII);
        introduction_date:                date(1958,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             128;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PioneerIII_CompanyColour;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PioneerIII_SEPTA_solo;
        can_attach_wagon: sw_PioneerIII_attach;
        purchase: spriteset_PioneerIII_SEPTA_Purchase;
        additional_text: string(STR_INFO_PIONEERIII);
}
}

//PioneerIII_SEPTAAirport
spriteset(spriteset_PioneerIII_SEPTAAirport_Purchase,   "gfx/PioneerIII_SEPTAAirport.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIII_SEPTAAirport,   "gfx/PioneerIII_SEPTAAirport.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PioneerIII_SEPTAAirport_r,   "gfx/PioneerIII_SEPTAAirport.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_SEPTAAirport_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Headlights_r;
    spriteset_PioneerIII_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_SEPTAAirport_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PioneerIII_Markerlights_r;
    spriteset_PioneerIII_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PioneerIII_SEPTAAirport_flipcheck, vehicle_is_reversed){
    1: spriteset_PioneerIII_SEPTAAirport_r;
    spriteset_PioneerIII_SEPTAAirport ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTAAirport_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_SEPTAAirport_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_SEPTAAirport_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTAAirport_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_SEPTAAirport_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_SEPTAAirport_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTAAirport_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PioneerIII_SEPTAAirport_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PioneerIII_SEPTAAirport_headlight_flipcheck;    // Return the headlight overlay
    return sw_PioneerIII_SEPTAAirport_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PioneerIII_SEPTAAirport_rear, position_in_consist_from_end){
    0 : return sw_PioneerIII_SEPTAAirport_markerlight_stack;
    return sw_PioneerIII_SEPTAAirport_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PioneerIII_SEPTAAirport_lead, position_in_consist) {
    0: sw_PioneerIII_SEPTAAirport_headlight_stack;
    return sw_PioneerIII_SEPTAAirport_rear;
}

switch(FEAT_TRAINS, SELF, sw_PioneerIII_SEPTAAirport_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PioneerIII_SEPTAAirport_headlight_and_marker_stack;
return sw_PioneerIII_SEPTAAirport_lead;
}

item(FEAT_TRAINS, Item_PioneerIII_SEPTAAirport, 10579) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PIONEERIII);
        introduction_date:                date(1958,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            85 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     7;
        running_cost_factor:             128;
        cargo_capacity:                  105/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PioneerIII_CompanyColour;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PioneerIII_SEPTAAirport_solo;
        can_attach_wagon: sw_PioneerIII_attach;
        purchase: spriteset_PioneerIII_SEPTAAirport_Purchase;
        additional_text: string(STR_INFO_PIONEERIII);
}
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_attach, vehicle_type_id){
    Item_Budd_Panamaliner_Silver    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Budd_Panamaliner_IllinoisCentral    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Budd_Panamaliner_RTA    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Budd_Panamaliner_Metra    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Budd_Panamaliner_SSL    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_Budd_Panamaliner_SSL2    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd Panamaliner_Silver
//CC1
spriteset(spriteset_Budd_Panamaliner_Silver_purchase,   "gfx/Panamaliner_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Panamaliner_Silver_Motor_lead,   "gfx/Panamaliner_Silver.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Panamaliner_Silver_Motor_rear,   "gfx/Panamaliner_Silver.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Panamaliner_Silver_DrivingTrailer_lead,   "gfx/Panamaliner_Silver.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_Panamaliner_Silver_DrivingTrailer_rear,   "gfx/Panamaliner_Silver.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_Panamaliner_Silver_Trailer,   "gfx/Panamaliner_Silver.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_Panamaliner_Silver_NonControlMotor,   "gfx/Panamaliner_Silver.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_Panamaliner_Silver_NonControlMotor_r,   "gfx/Panamaliner_Silver.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_Silver_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_Silver_NonControlMotor;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_Silver_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_Silver_Trailer;
    return spriteset_Budd_Panamaliner_Silver_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_Silver_NonControlMotor;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Silver_pantocheck_at_1_r;
    return sw_Budd_Panamaliner_Silver_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Panamaliner_Silver_Trailer;
    return sw_Budd_Panamaliner_Silver_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Silver_pantocheck_at_2_r;
    return sw_Budd_Panamaliner_Silver_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_Silver_Trailer;
    3 : sw_Budd_Panamaliner_Silver_pantocheck_at_1_r;
    4 : sw_Budd_Panamaliner_Silver_sidecheck_4_r;
    5 : sw_Budd_Panamaliner_Silver_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Panamaliner_Silver_sidecheck_6_r;
    return sw_Budd_Panamaliner_Silver_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_Silver_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_Silver_NonControlMotor;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_Silver_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_Silver_NonControlMotor;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Silver_pantocheck_at_1;
    return sw_Budd_Panamaliner_Silver_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Silver_pantocheck_at_1;
    return spriteset_Budd_Panamaliner_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Silver_pantocheck_at_2;
    return sw_Budd_Panamaliner_Silver_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_Silver_Trailer;
    3 : sw_Budd_Panamaliner_Silver_pantocheck_at_1;
    4 : sw_Budd_Panamaliner_Silver_sidecheck_4;
    5 : sw_Budd_Panamaliner_Silver_pantocheck_at_2;
    6 .. 7 : sw_Budd_Panamaliner_Silver_sidecheck_6;
    return sw_Budd_Panamaliner_Silver_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Panamaliner_Silver_Motor_lead; //Panto
    return spriteset_Budd_Panamaliner_Silver_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_Silver_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Panamaliner_Silver_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_Silver_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_Silver_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_Silver_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_Silver_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Panamaliner_Silver_Motor_lead;        //Front panto
    return spriteset_Budd_Panamaliner_Silver_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_Silver_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_Silver_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Silver_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_Silver_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_Silver_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_Silver_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Panamaliner_Silver_frontcheck; //We are going forwards
    return sw_Budd_Panamaliner_Silver_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_Silver_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Panamaliner_Silver_lencheck;
    return sw_Budd_Panamaliner_Silver_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Panamaliner_Silver, 10651) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PANAMALINER);
        introduction_date:                date(1967,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             160;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_Panamaliner_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Panamaliner_Silver_directioncheck;
        can_attach_wagon: sw_Budd_Panamaliner_attach ;
        purchase: spriteset_Budd_Panamaliner_Silver_purchase;
        additional_text: string(STR_INFO_PANAMALINER);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Panamaliner_Silver_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 40;

    }
}

//Budd Panamaliner_IllinoisCentral
//CC1
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_purchase,   "gfx/Panamaliner_IllinoisCentral.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_Motor_lead,   "gfx/Panamaliner_IllinoisCentral.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_Motor_rear,   "gfx/Panamaliner_IllinoisCentral.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_DrivingTrailer_lead,   "gfx/Panamaliner_IllinoisCentral.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_DrivingTrailer_rear,   "gfx/Panamaliner_IllinoisCentral.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_Trailer,   "gfx/Panamaliner_IllinoisCentral.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor,   "gfx/Panamaliner_IllinoisCentral.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor_r,   "gfx/Panamaliner_IllinoisCentral.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
    return spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1_r;
    return sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
    return sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2_r;
    return sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
    3 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1_r;
    4 : sw_Budd_Panamaliner_IllinoisCentral_sidecheck_4_r;
    5 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Panamaliner_IllinoisCentral_sidecheck_6_r;
    return sw_Budd_Panamaliner_IllinoisCentral_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_IllinoisCentral_NonControlMotor;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1;
    return sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1;
    return spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2;
    return sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_IllinoisCentral_Trailer;
    3 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_1;
    4 : sw_Budd_Panamaliner_IllinoisCentral_sidecheck_4;
    5 : sw_Budd_Panamaliner_IllinoisCentral_pantocheck_at_2;
    6 .. 7 : sw_Budd_Panamaliner_IllinoisCentral_sidecheck_6;
    return sw_Budd_Panamaliner_IllinoisCentral_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Panamaliner_IllinoisCentral_Motor_lead; //Panto
    return spriteset_Budd_Panamaliner_IllinoisCentral_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_IllinoisCentral_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Panamaliner_IllinoisCentral_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_IllinoisCentral_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_IllinoisCentral_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_IllinoisCentral_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_IllinoisCentral_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Panamaliner_IllinoisCentral_Motor_lead;        //Front panto
    return spriteset_Budd_Panamaliner_IllinoisCentral_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_IllinoisCentral_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_IllinoisCentral_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_IllinoisCentral_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_IllinoisCentral_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_IllinoisCentral_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_IllinoisCentral_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Panamaliner_IllinoisCentral_frontcheck; //We are going forwards
    return sw_Budd_Panamaliner_IllinoisCentral_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_IllinoisCentral_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Panamaliner_IllinoisCentral_lencheck;
    return sw_Budd_Panamaliner_IllinoisCentral_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Panamaliner_IllinoisCentral, 10652) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PANAMALINER);
        introduction_date:                date(1967,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             160;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_Panamaliner_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Panamaliner_IllinoisCentral_directioncheck;
        can_attach_wagon: sw_Budd_Panamaliner_attach ;
        purchase: spriteset_Budd_Panamaliner_IllinoisCentral_purchase;
        additional_text: string(STR_INFO_PANAMALINER);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Panamaliner_IllinoisCentral_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 40;

    }
}

//Budd Panamaliner_RTA
//CC1
spriteset(spriteset_Budd_Panamaliner_RTA_purchase,   "gfx/Panamaliner_RTA.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Panamaliner_RTA_Motor_lead,   "gfx/Panamaliner_RTA.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Panamaliner_RTA_Motor_rear,   "gfx/Panamaliner_RTA.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Panamaliner_RTA_DrivingTrailer_lead,   "gfx/Panamaliner_RTA.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_Panamaliner_RTA_DrivingTrailer_rear,   "gfx/Panamaliner_RTA.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_Panamaliner_RTA_Trailer,   "gfx/Panamaliner_RTA.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_Panamaliner_RTA_NonControlMotor,   "gfx/Panamaliner_RTA.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_Panamaliner_RTA_NonControlMotor_r,   "gfx/Panamaliner_RTA.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_RTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_RTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_RTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_RTA_Trailer;
    return spriteset_Budd_Panamaliner_RTA_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_RTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_RTA_pantocheck_at_1_r;
    return sw_Budd_Panamaliner_RTA_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Panamaliner_RTA_Trailer;
    return sw_Budd_Panamaliner_RTA_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_RTA_pantocheck_at_2_r;
    return sw_Budd_Panamaliner_RTA_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_RTA_Trailer;
    3 : sw_Budd_Panamaliner_RTA_pantocheck_at_1_r;
    4 : sw_Budd_Panamaliner_RTA_sidecheck_4_r;
    5 : sw_Budd_Panamaliner_RTA_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Panamaliner_RTA_sidecheck_6_r;
    return sw_Budd_Panamaliner_RTA_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_RTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_RTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_RTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_RTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_RTA_pantocheck_at_1;
    return sw_Budd_Panamaliner_RTA_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_RTA_pantocheck_at_1;
    return spriteset_Budd_Panamaliner_RTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_RTA_pantocheck_at_2;
    return sw_Budd_Panamaliner_RTA_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_RTA_Trailer;
    3 : sw_Budd_Panamaliner_RTA_pantocheck_at_1;
    4 : sw_Budd_Panamaliner_RTA_sidecheck_4;
    5 : sw_Budd_Panamaliner_RTA_pantocheck_at_2;
    6 .. 7 : sw_Budd_Panamaliner_RTA_sidecheck_6;
    return sw_Budd_Panamaliner_RTA_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Panamaliner_RTA_Motor_lead; //Panto
    return spriteset_Budd_Panamaliner_RTA_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_RTA_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Panamaliner_RTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_RTA_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_RTA_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_RTA_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_RTA_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Panamaliner_RTA_Motor_lead;        //Front panto
    return spriteset_Budd_Panamaliner_RTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_RTA_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_RTA_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_RTA_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_RTA_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_RTA_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_RTA_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Panamaliner_RTA_frontcheck; //We are going forwards
    return sw_Budd_Panamaliner_RTA_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_RTA_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Panamaliner_RTA_lencheck;
    return sw_Budd_Panamaliner_RTA_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Panamaliner_RTA, 10653) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PANAMALINER);
        introduction_date:                date(1967,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             160;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_Panamaliner_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Panamaliner_RTA_directioncheck;
        can_attach_wagon: sw_Budd_Panamaliner_attach ;
        purchase: spriteset_Budd_Panamaliner_RTA_purchase;
        additional_text: string(STR_INFO_PANAMALINER);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Panamaliner_RTA_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 40;

    }
}

//Budd Panamaliner_Metra
//CC1
spriteset(spriteset_Budd_Panamaliner_Metra_purchase,   "gfx/Panamaliner_Metra.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Panamaliner_Metra_Motor_lead,   "gfx/Panamaliner_Metra.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Panamaliner_Metra_Motor_rear,   "gfx/Panamaliner_Metra.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Panamaliner_Metra_DrivingTrailer_lead,   "gfx/Panamaliner_Metra.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_Panamaliner_Metra_DrivingTrailer_rear,   "gfx/Panamaliner_Metra.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_Panamaliner_Metra_Trailer,   "gfx/Panamaliner_Metra.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_Panamaliner_Metra_NonControlMotor,   "gfx/Panamaliner_Metra.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_Panamaliner_Metra_NonControlMotor_r,   "gfx/Panamaliner_Metra.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_Metra_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_Metra_NonControlMotor;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_Metra_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_Metra_Trailer;
    return spriteset_Budd_Panamaliner_Metra_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_Metra_NonControlMotor;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Metra_pantocheck_at_1_r;
    return sw_Budd_Panamaliner_Metra_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Panamaliner_Metra_Trailer;
    return sw_Budd_Panamaliner_Metra_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Metra_pantocheck_at_2_r;
    return sw_Budd_Panamaliner_Metra_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_Metra_Trailer;
    3 : sw_Budd_Panamaliner_Metra_pantocheck_at_1_r;
    4 : sw_Budd_Panamaliner_Metra_sidecheck_4_r;
    5 : sw_Budd_Panamaliner_Metra_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Panamaliner_Metra_sidecheck_6_r;
    return sw_Budd_Panamaliner_Metra_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_Metra_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_Metra_NonControlMotor;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_Metra_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_Metra_NonControlMotor;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Metra_pantocheck_at_1;
    return sw_Budd_Panamaliner_Metra_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Metra_pantocheck_at_1;
    return spriteset_Budd_Panamaliner_Metra_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_Metra_pantocheck_at_2;
    return sw_Budd_Panamaliner_Metra_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_Metra_Trailer;
    3 : sw_Budd_Panamaliner_Metra_pantocheck_at_1;
    4 : sw_Budd_Panamaliner_Metra_sidecheck_4;
    5 : sw_Budd_Panamaliner_Metra_pantocheck_at_2;
    6 .. 7 : sw_Budd_Panamaliner_Metra_sidecheck_6;
    return sw_Budd_Panamaliner_Metra_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Panamaliner_Metra_Motor_lead; //Panto
    return spriteset_Budd_Panamaliner_Metra_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_Metra_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Panamaliner_Metra_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_Metra_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_Metra_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_Metra_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_Metra_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Panamaliner_Metra_Motor_lead;        //Front panto
    return spriteset_Budd_Panamaliner_Metra_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_Metra_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_Metra_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_Metra_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_Metra_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_Metra_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_Metra_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Panamaliner_Metra_frontcheck; //We are going forwards
    return sw_Budd_Panamaliner_Metra_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_Metra_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Panamaliner_Metra_lencheck;
    return sw_Budd_Panamaliner_Metra_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Panamaliner_Metra, 10654) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PANAMALINER);
        introduction_date:                date(1967,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             160;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_Panamaliner_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Panamaliner_Metra_directioncheck;
        can_attach_wagon: sw_Budd_Panamaliner_attach ;
        purchase: spriteset_Budd_Panamaliner_Metra_purchase;
        additional_text: string(STR_INFO_PANAMALINER);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Panamaliner_Metra_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 40;

    }
}

//Budd Panamaliner_SSL
//CC1
spriteset(spriteset_Budd_Panamaliner_SSL_purchase,   "gfx/Panamaliner_SSL.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Panamaliner_SSL_Motor_lead,   "gfx/Panamaliner_SSL.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Panamaliner_SSL_Motor_rear,   "gfx/Panamaliner_SSL.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Panamaliner_SSL_DrivingTrailer_lead,   "gfx/Panamaliner_SSL.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_Panamaliner_SSL_DrivingTrailer_rear,   "gfx/Panamaliner_SSL.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_Panamaliner_SSL_Trailer,   "gfx/Panamaliner_SSL.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_Panamaliner_SSL_NonControlMotor,   "gfx/Panamaliner_SSL.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_Panamaliner_SSL_NonControlMotor_r,   "gfx/Panamaliner_SSL.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_SSL_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_SSL_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_SSL_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_SSL_Trailer;
    return spriteset_Budd_Panamaliner_SSL_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_SSL_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL_pantocheck_at_1_r;
    return sw_Budd_Panamaliner_SSL_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Panamaliner_SSL_Trailer;
    return sw_Budd_Panamaliner_SSL_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL_pantocheck_at_2_r;
    return sw_Budd_Panamaliner_SSL_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_SSL_Trailer;
    3 : sw_Budd_Panamaliner_SSL_pantocheck_at_1_r;
    4 : sw_Budd_Panamaliner_SSL_sidecheck_4_r;
    5 : sw_Budd_Panamaliner_SSL_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Panamaliner_SSL_sidecheck_6_r;
    return sw_Budd_Panamaliner_SSL_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_SSL_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_SSL_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_SSL_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_SSL_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL_pantocheck_at_1;
    return sw_Budd_Panamaliner_SSL_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL_pantocheck_at_1;
    return spriteset_Budd_Panamaliner_SSL_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL_pantocheck_at_2;
    return sw_Budd_Panamaliner_SSL_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_SSL_Trailer;
    3 : sw_Budd_Panamaliner_SSL_pantocheck_at_1;
    4 : sw_Budd_Panamaliner_SSL_sidecheck_4;
    5 : sw_Budd_Panamaliner_SSL_pantocheck_at_2;
    6 .. 7 : sw_Budd_Panamaliner_SSL_sidecheck_6;
    return sw_Budd_Panamaliner_SSL_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Panamaliner_SSL_Motor_lead; //Panto
    return spriteset_Budd_Panamaliner_SSL_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_SSL_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Panamaliner_SSL_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_SSL_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_SSL_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_SSL_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_SSL_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Panamaliner_SSL_Motor_lead;        //Front panto
    return spriteset_Budd_Panamaliner_SSL_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_SSL_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_SSL_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_SSL_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_SSL_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_SSL_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Panamaliner_SSL_frontcheck; //We are going forwards
    return sw_Budd_Panamaliner_SSL_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_SSL_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Panamaliner_SSL_lencheck;
    return sw_Budd_Panamaliner_SSL_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Panamaliner_SSL, 10656) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PANAMALINER);
        introduction_date:                date(1967,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             160;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_Panamaliner_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Panamaliner_SSL_directioncheck;
        can_attach_wagon: sw_Budd_Panamaliner_attach ;
        purchase: spriteset_Budd_Panamaliner_SSL_purchase;
        additional_text: string(STR_INFO_PANAMALINER);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Panamaliner_SSL_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 40;

    }
}

//Budd Panamaliner_SSL2
//CC1
spriteset(spriteset_Budd_Panamaliner_SSL2_purchase,   "gfx/Panamaliner_SSL2.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Panamaliner_SSL2_Motor_lead,   "gfx/Panamaliner_SSL2.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Panamaliner_SSL2_Motor_rear,   "gfx/Panamaliner_SSL2.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Panamaliner_SSL2_DrivingTrailer_lead,   "gfx/Panamaliner_SSL2.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_Panamaliner_SSL2_DrivingTrailer_rear,   "gfx/Panamaliner_SSL2.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_Panamaliner_SSL2_Trailer,   "gfx/Panamaliner_SSL2.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_Panamaliner_SSL2_NonControlMotor,   "gfx/Panamaliner_SSL2.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_Panamaliner_SSL2_NonControlMotor_r,   "gfx/Panamaliner_SSL2.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_SSL2_Trailer;
    return spriteset_Budd_Panamaliner_SSL2_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL2_pantocheck_at_1_r;
    return sw_Budd_Panamaliner_SSL2_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Panamaliner_SSL2_Trailer;
    return sw_Budd_Panamaliner_SSL2_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL2_pantocheck_at_2_r;
    return sw_Budd_Panamaliner_SSL2_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_SSL2_Trailer;
    3 : sw_Budd_Panamaliner_SSL2_pantocheck_at_1_r;
    4 : sw_Budd_Panamaliner_SSL2_sidecheck_4_r;
    5 : sw_Budd_Panamaliner_SSL2_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Panamaliner_SSL2_sidecheck_6_r;
    return sw_Budd_Panamaliner_SSL2_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_SSL2_NonControlMotor;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL2_pantocheck_at_1;
    return sw_Budd_Panamaliner_SSL2_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL2_pantocheck_at_1;
    return spriteset_Budd_Panamaliner_SSL2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_SSL2_pantocheck_at_2;
    return sw_Budd_Panamaliner_SSL2_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_SSL2_Trailer;
    3 : sw_Budd_Panamaliner_SSL2_pantocheck_at_1;
    4 : sw_Budd_Panamaliner_SSL2_sidecheck_4;
    5 : sw_Budd_Panamaliner_SSL2_pantocheck_at_2;
    6 .. 7 : sw_Budd_Panamaliner_SSL2_sidecheck_6;
    return sw_Budd_Panamaliner_SSL2_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Panamaliner_SSL2_Motor_lead; //Panto
    return spriteset_Budd_Panamaliner_SSL2_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_SSL2_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Panamaliner_SSL2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_SSL2_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_SSL2_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_SSL2_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_SSL2_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Panamaliner_SSL2_Motor_lead;        //Front panto
    return spriteset_Budd_Panamaliner_SSL2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_SSL2_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_SSL2_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_SSL2_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_SSL2_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_SSL2_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_SSL2_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Panamaliner_SSL2_frontcheck; //We are going forwards
    return sw_Budd_Panamaliner_SSL2_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_SSL2_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Panamaliner_SSL2_lencheck;
    return sw_Budd_Panamaliner_SSL2_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Panamaliner_SSL2, 10657) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PANAMALINER);
        introduction_date:                date(1967,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             160;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_Panamaliner_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Panamaliner_SSL2_directioncheck;
        can_attach_wagon: sw_Budd_Panamaliner_attach ;
        purchase: spriteset_Budd_Panamaliner_SSL2_purchase;
        additional_text: string(STR_INFO_PANAMALINER);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Panamaliner_SSL2_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 40;

    }
}

//Budd Panamaliner_MTA
//CC1
spriteset(spriteset_Budd_Panamaliner_MTA_purchase,   "gfx/Panamaliner_MTA.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Panamaliner_MTA_Motor_lead,   "gfx/Panamaliner_MTA.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Panamaliner_MTA_Motor_rear,   "gfx/Panamaliner_MTA.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Panamaliner_MTA_DrivingTrailer_lead,   "gfx/Panamaliner_MTA.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_Panamaliner_MTA_DrivingTrailer_rear,   "gfx/Panamaliner_MTA.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_Panamaliner_MTA_Trailer,   "gfx/Panamaliner_MTA.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_Panamaliner_MTA_NonControlMotor,   "gfx/Panamaliner_MTA.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_Panamaliner_MTA_NonControlMotor_r,   "gfx/Panamaliner_MTA.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_MTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_MTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_MTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_MTA_Trailer;
    return spriteset_Budd_Panamaliner_MTA_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_MTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_MTA_pantocheck_at_1_r;
    return sw_Budd_Panamaliner_MTA_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Panamaliner_MTA_Trailer;
    return sw_Budd_Panamaliner_MTA_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_MTA_pantocheck_at_2_r;
    return sw_Budd_Panamaliner_MTA_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_MTA_Trailer;
    3 : sw_Budd_Panamaliner_MTA_pantocheck_at_1_r;
    4 : sw_Budd_Panamaliner_MTA_sidecheck_4_r;
    5 : sw_Budd_Panamaliner_MTA_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Panamaliner_MTA_sidecheck_6_r;
    return sw_Budd_Panamaliner_MTA_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Panamaliner_MTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Panamaliner_MTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Panamaliner_MTA_NonControlMotor_r;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Panamaliner_MTA_NonControlMotor;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_MTA_pantocheck_at_1;
    return sw_Budd_Panamaliner_MTA_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_MTA_pantocheck_at_1;
    return spriteset_Budd_Panamaliner_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Panamaliner_MTA_pantocheck_at_2;
    return sw_Budd_Panamaliner_MTA_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Panamaliner_MTA_Trailer;
    3 : sw_Budd_Panamaliner_MTA_pantocheck_at_1;
    4 : sw_Budd_Panamaliner_MTA_sidecheck_4;
    5 : sw_Budd_Panamaliner_MTA_pantocheck_at_2;
    6 .. 7 : sw_Budd_Panamaliner_MTA_sidecheck_6;
    return sw_Budd_Panamaliner_MTA_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Panamaliner_MTA_Motor_lead; //Panto
    return spriteset_Budd_Panamaliner_MTA_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_MTA_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Panamaliner_MTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_MTA_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_MTA_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_MTA_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_MTA_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Panamaliner_MTA_Motor_lead;        //Front panto
    return spriteset_Budd_Panamaliner_MTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Panamaliner_MTA_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Panamaliner_MTA_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Panamaliner_MTA_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Panamaliner_MTA_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Panamaliner_MTA_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_MTA_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Panamaliner_MTA_frontcheck; //We are going forwards
    return sw_Budd_Panamaliner_MTA_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Panamaliner_MTA_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Panamaliner_MTA_lencheck;
    return sw_Budd_Panamaliner_MTA_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Panamaliner_MTA, 10658) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PANAMALINER);
        introduction_date:                date(1967,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        46 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     15;
        running_cost_factor:             160;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 45;

        variant_group: Item_Budd_Panamaliner_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Panamaliner_MTA_directioncheck;
        can_attach_wagon: sw_Budd_Panamaliner_attach ;
        purchase: spriteset_Budd_Panamaliner_MTA_purchase;
        additional_text: string(STR_INFO_PANAMALINER);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Panamaliner_MTA_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 40;

    }
}

//JerseyArrow Lights
spriteset(spriteset_JerseyArrow_Headlights,   "gfx/JerseyArrow_Headlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_JerseyArrow_Headlights_r,   "gfx/JerseyArrow_Headlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)
spriteset(spriteset_JerseyArrow_Markerlights,   "gfx/JerseyArrow_Markerlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_JerseyArrow_Markerlights_r,   "gfx/JerseyArrow_Markerlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)

switch(FEAT_TRAINS, SELF, sw_JerseyArrow_attach, vehicle_type_id){
    Item_JerseyArrow_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_JerseyArrow_NJT     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//JerseyArrow_Silver
spriteset(spriteset_JerseyArrow_Silver_Purchase,   "gfx/JerseyArrow_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_JerseyArrow_Silver,   "gfx/JerseyArrow_Silver.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_JerseyArrow_Silver_r,   "gfx/JerseyArrow_Silver.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrow_Silver_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrow_Headlights_r;
    spriteset_JerseyArrow_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrow_Silver_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrow_Markerlights_r;
    spriteset_JerseyArrow_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrow_Silver_flipcheck, vehicle_is_reversed){
    1: spriteset_JerseyArrow_Silver_r;
    spriteset_JerseyArrow_Silver ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrow_Silver_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrow_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrow_Silver_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrow_Silver_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrow_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrow_Silver_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrow_Silver_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrow_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrow_Silver_headlight_flipcheck;    // Return the headlight overlay
    return sw_JerseyArrow_Silver_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_JerseyArrow_Silver_rear, position_in_consist_from_end){
    0 : return sw_JerseyArrow_Silver_markerlight_stack;
    return sw_JerseyArrow_Silver_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_JerseyArrow_Silver_lead, position_in_consist) {
    0: sw_JerseyArrow_Silver_headlight_stack;
    return sw_JerseyArrow_Silver_rear;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrow_Silver_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_JerseyArrow_Silver_headlight_and_marker_stack;
return sw_JerseyArrow_Silver_lead;
}

item(FEAT_TRAINS, Item_JerseyArrow_Silver, 10676) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_JERSEYARROW);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            85 mph;
        power:                            650 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             13;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_JerseyArrow_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_JerseyArrow_Silver_solo;
        can_attach_wagon: sw_JerseyArrow_attach;
        purchase: spriteset_JerseyArrow_Silver_Purchase;
        additional_text: string(STR_INFO_JERSEYARROW);
}
}

//JerseyArrow_NJT
spriteset(spriteset_JerseyArrow_NJT_Purchase,   "gfx/JerseyArrow_NJT.png") {template_purchase(7, 21)}
spriteset(spriteset_JerseyArrow_NJT,   "gfx/JerseyArrow_NJT.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_JerseyArrow_NJT_r,   "gfx/JerseyArrow_NJT.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrow_NJT_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrow_Headlights_r;
    spriteset_JerseyArrow_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrow_NJT_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrow_Markerlights_r;
    spriteset_JerseyArrow_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrow_NJT_flipcheck, vehicle_is_reversed){
    1: spriteset_JerseyArrow_NJT_r;
    spriteset_JerseyArrow_NJT ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrow_NJT_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrow_NJT_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrow_NJT_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrow_NJT_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrow_NJT_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrow_NJT_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrow_NJT_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrow_NJT_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrow_NJT_headlight_flipcheck;    // Return the headlight overlay
    return sw_JerseyArrow_NJT_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_JerseyArrow_NJT_rear, position_in_consist_from_end){
    0 : return sw_JerseyArrow_NJT_markerlight_stack;
    return sw_JerseyArrow_NJT_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_JerseyArrow_NJT_lead, position_in_consist) {
    0: sw_JerseyArrow_NJT_headlight_stack;
    return sw_JerseyArrow_NJT_rear;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrow_NJT_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_JerseyArrow_NJT_headlight_and_marker_stack;
return sw_JerseyArrow_NJT_lead;
}

item(FEAT_TRAINS, Item_JerseyArrow_NJT, 10677) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_JERSEYARROW);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        41 ton;
        speed:                            85 mph;
        power:                            650 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     8;
        running_cost_factor:             13;
        cargo_capacity:                  115/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_JerseyArrow_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_JerseyArrow_NJT_solo;
        can_attach_wagon: sw_JerseyArrow_attach;
        purchase: spriteset_JerseyArrow_NJT_Purchase;
        additional_text: string(STR_INFO_JERSEYARROW);
}
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_attach, vehicle_type_id){
    Item_Budd_Cosmopolitan_Liv0    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Cosmopolitan_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Cosmopolitan_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Cosmopolitan_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Cosmopolitan_Liv4    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_Cosmopolitan_Liv0
spriteset(spriteset_Budd_Cosmopolitan_Liv0_purchase,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Cosmopolitan_Liv0_Motor_lead,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Cosmopolitan_Liv0_Motor_rear,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Cosmopolitan_Liv0_DrivingTrailer_lead,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_8(187, 39)}
spriteset(spriteset_Budd_Cosmopolitan_Liv0_DrivingTrailer_rear,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_8(187, 69)}
spriteset(spriteset_Budd_Cosmopolitan_Liv0_Trailer,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_8(7, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_8(187, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor_r,   "gfx/Budd_Cosmopolitan_Liv0.png") {template_8_r(187, 99)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv0_Trailer;
    return spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1_r;
    return sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Cosmopolitan_Liv0_Trailer;
    return sw_Budd_Cosmopolitan_Liv0_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2_r;
    return sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv0_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1_r;
    4 : sw_Budd_Cosmopolitan_Liv0_sidecheck_4_r;
    5 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv0_sidecheck_6_r;
    return sw_Budd_Cosmopolitan_Liv0_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv0_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1;
    return sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1;
    return spriteset_Budd_Cosmopolitan_Liv0_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2;
    return sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv0_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_1;
    4 : sw_Budd_Cosmopolitan_Liv0_sidecheck_4;
    5 : sw_Budd_Cosmopolitan_Liv0_pantocheck_at_2;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv0_sidecheck_6;
    return sw_Budd_Cosmopolitan_Liv0_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Cosmopolitan_Liv0_Motor_lead; //Panto
    return spriteset_Budd_Cosmopolitan_Liv0_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv0_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv0_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv0_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv0_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv0_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv0_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Cosmopolitan_Liv0_Motor_lead;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv0_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv0_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv0_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv0_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv0_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv0_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv0_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Cosmopolitan_Liv0_frontcheck; //We are going forwards
    return sw_Budd_Cosmopolitan_Liv0_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv0_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Cosmopolitan_Liv0_lencheck;
    return sw_Budd_Cosmopolitan_Liv0_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Cosmopolitan_Liv0, 10700) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_COSMOPOLITAN);
        introduction_date:                date(1973,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        50 ton;
        speed:                            100 mph;
        power:                            1280 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 30;

//        variant_group: Item_Budd_Cosmopolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Cosmopolitan_Liv0_directioncheck;
        can_attach_wagon: sw_Budd_Cosmopolitan_attach ;
        purchase: spriteset_Budd_Cosmopolitan_Liv0_purchase;
        additional_text: string(STR_INFO_BUDD_COSMOPOLITAN);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Cosmopolitan_Liv0_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 640 ;
		running_cost_factor: 43;

    }
}

//Budd_Cosmopolitan_Liv1
spriteset(spriteset_Budd_Cosmopolitan_Liv1_purchase,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Cosmopolitan_Liv1_Motor_lead,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Cosmopolitan_Liv1_Motor_rear,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Cosmopolitan_Liv1_DrivingTrailer_lead,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_8(187, 39)}
spriteset(spriteset_Budd_Cosmopolitan_Liv1_DrivingTrailer_rear,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_8(187, 69)}
spriteset(spriteset_Budd_Cosmopolitan_Liv1_Trailer,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_8(7, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_8(187, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor_r,   "gfx/Budd_Cosmopolitan_Liv1.png") {template_8_r(187, 99)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv1_Trailer;
    return spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1_r;
    return sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Cosmopolitan_Liv1_Trailer;
    return sw_Budd_Cosmopolitan_Liv1_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2_r;
    return sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv1_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1_r;
    4 : sw_Budd_Cosmopolitan_Liv1_sidecheck_4_r;
    5 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv1_sidecheck_6_r;
    return sw_Budd_Cosmopolitan_Liv1_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv1_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1;
    return sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1;
    return spriteset_Budd_Cosmopolitan_Liv1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2;
    return sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv1_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_1;
    4 : sw_Budd_Cosmopolitan_Liv1_sidecheck_4;
    5 : sw_Budd_Cosmopolitan_Liv1_pantocheck_at_2;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv1_sidecheck_6;
    return sw_Budd_Cosmopolitan_Liv1_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Cosmopolitan_Liv1_Motor_lead; //Panto
    return spriteset_Budd_Cosmopolitan_Liv1_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv1_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv1_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv1_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv1_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv1_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Cosmopolitan_Liv1_Motor_lead;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv1_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv1_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv1_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv1_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv1_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv1_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Cosmopolitan_Liv1_frontcheck; //We are going forwards
    return sw_Budd_Cosmopolitan_Liv1_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv1_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Cosmopolitan_Liv1_lencheck;
    return sw_Budd_Cosmopolitan_Liv1_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Cosmopolitan_Liv1, 10701) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_COSMOPOLITAN);
        introduction_date:                date(1973,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        50 ton;
        speed:                            100 mph;
        power:                            1280 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Cosmopolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Cosmopolitan_Liv1_directioncheck;
        can_attach_wagon: sw_Budd_Cosmopolitan_attach ;
        purchase: spriteset_Budd_Cosmopolitan_Liv1_purchase;
        additional_text: string(STR_INFO_BUDD_COSMOPOLITAN);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Cosmopolitan_Liv1_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 640 ;
		running_cost_factor: 43;

    }
}

//Budd_Cosmopolitan_Liv2
spriteset(spriteset_Budd_Cosmopolitan_Liv2_purchase,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Cosmopolitan_Liv2_Motor_lead,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Cosmopolitan_Liv2_Motor_rear,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Cosmopolitan_Liv2_DrivingTrailer_lead,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_8(187, 39)}
spriteset(spriteset_Budd_Cosmopolitan_Liv2_DrivingTrailer_rear,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_8(187, 69)}
spriteset(spriteset_Budd_Cosmopolitan_Liv2_Trailer,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_8(7, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_8(187, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor_r,   "gfx/Budd_Cosmopolitan_Liv2.png") {template_8_r(187, 99)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv2_Trailer;
    return spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1_r;
    return sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Cosmopolitan_Liv2_Trailer;
    return sw_Budd_Cosmopolitan_Liv2_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2_r;
    return sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv2_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1_r;
    4 : sw_Budd_Cosmopolitan_Liv2_sidecheck_4_r;
    5 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv2_sidecheck_6_r;
    return sw_Budd_Cosmopolitan_Liv2_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv2_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1;
    return sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1;
    return spriteset_Budd_Cosmopolitan_Liv2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2;
    return sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv2_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_1;
    4 : sw_Budd_Cosmopolitan_Liv2_sidecheck_4;
    5 : sw_Budd_Cosmopolitan_Liv2_pantocheck_at_2;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv2_sidecheck_6;
    return sw_Budd_Cosmopolitan_Liv2_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Cosmopolitan_Liv2_Motor_lead; //Panto
    return spriteset_Budd_Cosmopolitan_Liv2_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv2_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv2_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv2_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv2_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv2_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Cosmopolitan_Liv2_Motor_lead;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv2_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv2_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv2_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv2_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv2_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv2_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Cosmopolitan_Liv2_frontcheck; //We are going forwards
    return sw_Budd_Cosmopolitan_Liv2_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv2_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Cosmopolitan_Liv2_lencheck;
    return sw_Budd_Cosmopolitan_Liv2_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Cosmopolitan_Liv2, 10702) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_COSMOPOLITAN);
        introduction_date:                date(1973,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        50 ton;
        speed:                            100 mph;
        power:                            1280 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Cosmopolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Cosmopolitan_Liv2_directioncheck;
        can_attach_wagon: sw_Budd_Cosmopolitan_attach ;
        purchase: spriteset_Budd_Cosmopolitan_Liv2_purchase;
        additional_text: string(STR_INFO_BUDD_COSMOPOLITAN);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Cosmopolitan_Liv2_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 640 ;
		running_cost_factor: 43;

    }
}

//Budd_Cosmopolitan_Liv3
spriteset(spriteset_Budd_Cosmopolitan_Liv3_purchase,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Cosmopolitan_Liv3_Motor_lead,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Cosmopolitan_Liv3_Motor_rear,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Cosmopolitan_Liv3_DrivingTrailer_lead,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_8(187, 39)}
spriteset(spriteset_Budd_Cosmopolitan_Liv3_DrivingTrailer_rear,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_8(187, 69)}
spriteset(spriteset_Budd_Cosmopolitan_Liv3_Trailer,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_8(7, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_8(187, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor_r,   "gfx/Budd_Cosmopolitan_Liv3.png") {template_8_r(187, 99)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv3_Trailer;
    return spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1_r;
    return sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Cosmopolitan_Liv3_Trailer;
    return sw_Budd_Cosmopolitan_Liv3_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2_r;
    return sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv3_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1_r;
    4 : sw_Budd_Cosmopolitan_Liv3_sidecheck_4_r;
    5 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv3_sidecheck_6_r;
    return sw_Budd_Cosmopolitan_Liv3_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv3_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1;
    return sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1;
    return spriteset_Budd_Cosmopolitan_Liv3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2;
    return sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv3_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_1;
    4 : sw_Budd_Cosmopolitan_Liv3_sidecheck_4;
    5 : sw_Budd_Cosmopolitan_Liv3_pantocheck_at_2;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv3_sidecheck_6;
    return sw_Budd_Cosmopolitan_Liv3_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Cosmopolitan_Liv3_Motor_lead; //Panto
    return spriteset_Budd_Cosmopolitan_Liv3_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv3_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv3_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv3_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv3_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv3_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv3_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Cosmopolitan_Liv3_Motor_lead;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv3_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv3_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv3_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv3_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv3_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv3_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv3_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Cosmopolitan_Liv3_frontcheck; //We are going forwards
    return sw_Budd_Cosmopolitan_Liv3_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv3_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Cosmopolitan_Liv3_lencheck;
    return sw_Budd_Cosmopolitan_Liv3_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Cosmopolitan_Liv3, 10703) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_COSMOPOLITAN);
        introduction_date:                date(1973,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        50 ton;
        speed:                            100 mph;
        power:                            1280 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Cosmopolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Cosmopolitan_Liv3_directioncheck;
        can_attach_wagon: sw_Budd_Cosmopolitan_attach ;
        purchase: spriteset_Budd_Cosmopolitan_Liv3_purchase;
        additional_text: string(STR_INFO_BUDD_COSMOPOLITAN);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Cosmopolitan_Liv3_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 640 ;
		running_cost_factor: 43;

    }
}

//Budd_Cosmopolitan_Liv4
spriteset(spriteset_Budd_Cosmopolitan_Liv4_purchase,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Cosmopolitan_Liv4_Motor_lead,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Cosmopolitan_Liv4_Motor_rear,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Cosmopolitan_Liv4_DrivingTrailer_lead,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_8(187, 39)}
spriteset(spriteset_Budd_Cosmopolitan_Liv4_DrivingTrailer_rear,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_8(187, 69)}
spriteset(spriteset_Budd_Cosmopolitan_Liv4_Trailer,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_8(7, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_8(187, 99)}
spriteset(spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor_r,   "gfx/Budd_Cosmopolitan_Liv4.png") {template_8_r(187, 99)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv4_Trailer;
    return spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1_r;
    return sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_Cosmopolitan_Liv4_Trailer;
    return sw_Budd_Cosmopolitan_Liv4_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2_r;
    return sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv4_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1_r;
    4 : sw_Budd_Cosmopolitan_Liv4_sidecheck_4_r;
    5 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv4_sidecheck_6_r;
    return sw_Budd_Cosmopolitan_Liv4_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor_r;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_Cosmopolitan_Liv4_NonControlMotor;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1;
    return sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1;
    return spriteset_Budd_Cosmopolitan_Liv4_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2;
    return sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_Cosmopolitan_Liv4_Trailer;
    3 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_1;
    4 : sw_Budd_Cosmopolitan_Liv4_sidecheck_4;
    5 : sw_Budd_Cosmopolitan_Liv4_pantocheck_at_2;
    6 .. 7 : sw_Budd_Cosmopolitan_Liv4_sidecheck_6;
    return sw_Budd_Cosmopolitan_Liv4_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_Cosmopolitan_Liv4_Motor_lead; //Panto
    return spriteset_Budd_Cosmopolitan_Liv4_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv4_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv4_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv4_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv4_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv4_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv4_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_Cosmopolitan_Liv4_Motor_lead;        //Front panto
    return spriteset_Budd_Cosmopolitan_Liv4_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_Cosmopolitan_Liv4_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_Cosmopolitan_Liv4_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_Cosmopolitan_Liv4_frontcheck, position_in_vehid_chain){
    0: sw_Budd_Cosmopolitan_Liv4_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_Cosmopolitan_Liv4_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv4_directioncheck, vehicle_is_reversed){
    0: sw_Budd_Cosmopolitan_Liv4_frontcheck; //We are going forwards
    return sw_Budd_Cosmopolitan_Liv4_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_Cosmopolitan_Liv4_revcheck, vehicle_is_reversed){
    0 : sw_Budd_Cosmopolitan_Liv4_lencheck;
    return sw_Budd_Cosmopolitan_Liv4_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_Cosmopolitan_Liv4, 10704) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_COSMOPOLITAN);
        introduction_date:                date(1973,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        50 ton;
        speed:                            100 mph;
        power:                            1280 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Cosmopolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Cosmopolitan_Liv4_directioncheck;
        can_attach_wagon: sw_Budd_Cosmopolitan_attach ;
        purchase: spriteset_Budd_Cosmopolitan_Liv4_purchase;
        additional_text: string(STR_INFO_BUDD_COSMOPOLITAN);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_Cosmopolitan_Liv4_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 640 ;
		running_cost_factor: 43;

    }
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_attach, vehicle_type_id){
	Item_SilverlinerIV_RM_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SilverlinerIV_RM_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SilverlinerIV_RM_Blueliner     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SilverlinerIV_MU_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SilverlinerIV_MU_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_SilverlinerIV_MU_Blueliner     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer	: return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}


//SilverlinerIV_RM Lights
spriteset(spriteset_SilverlinerIV_RM_Headlights,   "gfx/SilverlinerIV_RM_Headlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_SilverlinerIV_RM_Headlights_r,   "gfx/SilverlinerIV_RM_Headlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)
spriteset(spriteset_SilverlinerIV_RM_Markerlights,   "gfx/SilverlinerIV_RM_Markerlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_SilverlinerIV_RM_Markerlights_r,   "gfx/SilverlinerIV_RM_Markerlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)

//SilverlinerIV_RM_Silver
spriteset(spriteset_SilverlinerIV_RM_Silver_Purchase,   "gfx/SilverlinerIV_RM_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_SilverlinerIV_RM_Silver,   "gfx/SilverlinerIV_RM_Silver.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_SilverlinerIV_RM_Silver_r,   "gfx/SilverlinerIV_RM_Silver.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_Silver_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_SilverlinerIV_RM_Headlights_r;
    spriteset_SilverlinerIV_RM_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_Silver_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_SilverlinerIV_RM_Markerlights_r;
    spriteset_SilverlinerIV_RM_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_Silver_flipcheck, vehicle_is_reversed){
    1: spriteset_SilverlinerIV_RM_Silver_r;
    spriteset_SilverlinerIV_RM_Silver ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Silver_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_Silver_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Silver_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_Silver_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Silver_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_Silver_headlight_flipcheck;    // Return the headlight overlay
    return sw_SilverlinerIV_RM_Silver_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Silver_rear, position_in_consist_from_end){
    0 : return sw_SilverlinerIV_RM_Silver_markerlight_stack;
    return sw_SilverlinerIV_RM_Silver_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Silver_lead, position_in_consist) {
    0: sw_SilverlinerIV_RM_Silver_headlight_stack;
    return sw_SilverlinerIV_RM_Silver_rear;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Silver_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_SilverlinerIV_RM_Silver_headlight_and_marker_stack;
return sw_SilverlinerIV_RM_Silver_lead;
}

item(FEAT_TRAINS, Item_SilverlinerIV_RM_Silver, 10751) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SILVERLINERIV_RM);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            100 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             90;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SilverlinerIV_RM_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SilverlinerIV_RM_Silver_solo;
        can_attach_wagon: sw_SilverlinerIV_attach;
        purchase: spriteset_SilverlinerIV_RM_Silver_Purchase;
        additional_text: string(STR_INFO_SILVERLINERIV_RM);
}
}

//SilverlinerIV_RM_SEPTA
spriteset(spriteset_SilverlinerIV_RM_SEPTA_Purchase,   "gfx/SilverlinerIV_RM_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_SilverlinerIV_RM_SEPTA,   "gfx/SilverlinerIV_RM_SEPTA.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_SilverlinerIV_RM_SEPTA_r,   "gfx/SilverlinerIV_RM_SEPTA.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_SEPTA_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_SilverlinerIV_RM_Headlights_r;
    spriteset_SilverlinerIV_RM_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_SEPTA_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_SilverlinerIV_RM_Markerlights_r;
    spriteset_SilverlinerIV_RM_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_SEPTA_flipcheck, vehicle_is_reversed){
    1: spriteset_SilverlinerIV_RM_SEPTA_r;
    spriteset_SilverlinerIV_RM_SEPTA ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_SEPTA_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_SEPTA_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_SEPTA_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_SEPTA_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_SEPTA_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_SEPTA_headlight_flipcheck;    // Return the headlight overlay
    return sw_SilverlinerIV_RM_SEPTA_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_SEPTA_rear, position_in_consist_from_end){
    0 : return sw_SilverlinerIV_RM_SEPTA_markerlight_stack;
    return sw_SilverlinerIV_RM_SEPTA_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_SEPTA_lead, position_in_consist) {
    0: sw_SilverlinerIV_RM_SEPTA_headlight_stack;
    return sw_SilverlinerIV_RM_SEPTA_rear;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_SEPTA_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_SilverlinerIV_RM_SEPTA_headlight_and_marker_stack;
return sw_SilverlinerIV_RM_SEPTA_lead;
}

item(FEAT_TRAINS, Item_SilverlinerIV_RM_SEPTA, 10752) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SILVERLINERIV_RM);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            100 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             90;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SilverlinerIV_RM_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SilverlinerIV_RM_SEPTA_solo;
        can_attach_wagon: sw_SilverlinerIV_attach;
        purchase: spriteset_SilverlinerIV_RM_SEPTA_Purchase;
        additional_text: string(STR_INFO_SILVERLINERIV_RM);
}
}

//SilverlinerIV_RM_Blueliner
spriteset(spriteset_SilverlinerIV_RM_Blueliner_Purchase,   "gfx/SilverlinerIV_RM_Blueliner.png") {template_purchase(7, 21)}
spriteset(spriteset_SilverlinerIV_RM_Blueliner,   "gfx/SilverlinerIV_RM_Blueliner.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_SilverlinerIV_RM_Blueliner_r,   "gfx/SilverlinerIV_RM_Blueliner.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_Blueliner_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_SilverlinerIV_RM_Headlights_r;
    spriteset_SilverlinerIV_RM_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_Blueliner_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_SilverlinerIV_RM_Markerlights_r;
    spriteset_SilverlinerIV_RM_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_RM_Blueliner_flipcheck, vehicle_is_reversed){
    1: spriteset_SilverlinerIV_RM_Blueliner_r;
    spriteset_SilverlinerIV_RM_Blueliner ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Blueliner_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_Blueliner_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_Blueliner_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Blueliner_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_Blueliner_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_Blueliner_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Blueliner_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_SilverlinerIV_RM_Blueliner_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_SilverlinerIV_RM_Blueliner_headlight_flipcheck;    // Return the headlight overlay
    return sw_SilverlinerIV_RM_Blueliner_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Blueliner_rear, position_in_consist_from_end){
    0 : return sw_SilverlinerIV_RM_Blueliner_markerlight_stack;
    return sw_SilverlinerIV_RM_Blueliner_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Blueliner_lead, position_in_consist) {
    0: sw_SilverlinerIV_RM_Blueliner_headlight_stack;
    return sw_SilverlinerIV_RM_Blueliner_rear;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_RM_Blueliner_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_SilverlinerIV_RM_Blueliner_headlight_and_marker_stack;
return sw_SilverlinerIV_RM_Blueliner_lead;
}

item(FEAT_TRAINS, Item_SilverlinerIV_RM_Blueliner, 10753) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SILVERLINERIV_RM);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            100 mph;
        power:                            550 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             90;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SilverlinerIV_RM_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SilverlinerIV_RM_Blueliner_solo;
        can_attach_wagon: sw_SilverlinerIV_attach;
        purchase: spriteset_SilverlinerIV_RM_Blueliner_Purchase;
        additional_text: string(STR_INFO_SILVERLINERIV_RM);
}
}

//SilverlinerIV_MU_Silver
spriteset(spriteset_SilverlinerIV_MU_Silver_purchase,   "gfx/SilverlinerIV_MU_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_SilverlinerIV_MU_Silver_Motor_lead,   "gfx/SilverlinerIV_MU_Silver.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SilverlinerIV_MU_Silver_Motor_rear,   "gfx/SilverlinerIV_MU_Silver.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SilverlinerIV_MU_Silver_DrivingTrailer_lead,   "gfx/SilverlinerIV_MU_Silver.png") {template_Old_8(187, 39)}
spriteset(spriteset_SilverlinerIV_MU_Silver_DrivingTrailer_rear,   "gfx/SilverlinerIV_MU_Silver.png") {template_Old_8(187, 64)}
spriteset(spriteset_SilverlinerIV_MU_Silver_Trailer,   "gfx/SilverlinerIV_MU_Silver.png") {template_Old_8(7, 89)}
spriteset(spriteset_SilverlinerIV_MU_Silver_NonControlMotor,   "gfx/SilverlinerIV_MU_Silver.png") {template_Old_8(187, 89)}
spriteset(spriteset_SilverlinerIV_MU_Silver_NonControlMotor_r,   "gfx/SilverlinerIV_MU_Silver.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_Silver_Trailer;
    return spriteset_SilverlinerIV_MU_Silver_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Silver_pantocheck_at_1_r;
    return sw_SilverlinerIV_MU_Silver_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_SilverlinerIV_MU_Silver_Trailer;
    return sw_SilverlinerIV_MU_Silver_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Silver_pantocheck_at_2_r;
    return sw_SilverlinerIV_MU_Silver_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SilverlinerIV_MU_Silver_Trailer;
    3 : sw_SilverlinerIV_MU_Silver_pantocheck_at_1_r;
    4 : sw_SilverlinerIV_MU_Silver_sidecheck_4_r;
    5 : sw_SilverlinerIV_MU_Silver_pantocheck_at_2_r;
    6 .. 7 : sw_SilverlinerIV_MU_Silver_sidecheck_6_r;
    return sw_SilverlinerIV_MU_Silver_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SilverlinerIV_MU_Silver_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Silver_pantocheck_at_1;
    return sw_SilverlinerIV_MU_Silver_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Silver_pantocheck_at_1;
    return spriteset_SilverlinerIV_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Silver_pantocheck_at_2;
    return sw_SilverlinerIV_MU_Silver_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SilverlinerIV_MU_Silver_Trailer;
    3 : sw_SilverlinerIV_MU_Silver_pantocheck_at_1;
    4 : sw_SilverlinerIV_MU_Silver_sidecheck_4;
    5 : sw_SilverlinerIV_MU_Silver_pantocheck_at_2;
    6 .. 7 : sw_SilverlinerIV_MU_Silver_sidecheck_6;
    return sw_SilverlinerIV_MU_Silver_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_SilverlinerIV_MU_Silver_Motor_lead; //Panto
    return spriteset_SilverlinerIV_MU_Silver_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_panto_direction_r, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_Silver_panto_direction_r_pos;        //Front panto
    return spriteset_SilverlinerIV_MU_Silver_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_Silver_panto_direction_r;        //Not flipped, give Panto
    return spriteset_SilverlinerIV_MU_Silver_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_frontcheck_r, position_in_vehid_chain){
    0: sw_SilverlinerIV_MU_Silver_panto_direction_r; //We need a pantograph, guaranteed
    return sw_SilverlinerIV_MU_Silver_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_panto_direction, vehicle_is_flipped){
    0 : spriteset_SilverlinerIV_MU_Silver_Motor_lead;        //Front panto
    return spriteset_SilverlinerIV_MU_Silver_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_panto_flipcheck, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_Silver_panto_direction;        //Not flipped, give Panto
    return spriteset_SilverlinerIV_MU_Silver_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Silver_frontcheck, position_in_vehid_chain){
    0: sw_SilverlinerIV_MU_Silver_panto_direction; //We need a pantograph, guaranteed
    return sw_SilverlinerIV_MU_Silver_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_MU_Silver_directioncheck, vehicle_is_reversed){
    0: sw_SilverlinerIV_MU_Silver_frontcheck; //We are going forwards
    return sw_SilverlinerIV_MU_Silver_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_MU_Silver_revcheck, vehicle_is_reversed){
    0 : sw_SilverlinerIV_MU_Silver_lencheck;
    return sw_SilverlinerIV_MU_Silver_lencheck_r;
}

item(FEAT_TRAINS, Item_SilverlinerIV_MU_Silver, 10761) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SILVERLINERIV_MU);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     18;
        running_cost_factor:             180;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SilverlinerIV_MU_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SilverlinerIV_MU_Silver_directioncheck;
        can_attach_wagon: sw_SilverlinerIV_attach ;
        purchase: spriteset_SilverlinerIV_MU_Silver_purchase;
        additional_text: string(STR_INFO_SILVERLINERIV_MU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_SilverlinerIV_MU_Silver_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 45;

    }
}

//SilverlinerIV_MU_SEPTA
spriteset(spriteset_SilverlinerIV_MU_SEPTA_purchase,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_SilverlinerIV_MU_SEPTA_Motor_lead,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SilverlinerIV_MU_SEPTA_Motor_rear,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SilverlinerIV_MU_SEPTA_DrivingTrailer_lead,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_Old_8(187, 39)}
spriteset(spriteset_SilverlinerIV_MU_SEPTA_DrivingTrailer_rear,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_Old_8(187, 64)}
spriteset(spriteset_SilverlinerIV_MU_SEPTA_Trailer,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_Old_8(7, 89)}
spriteset(spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_Old_8(187, 89)}
spriteset(spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor_r,   "gfx/SilverlinerIV_MU_SEPTA.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_SEPTA_Trailer;
    return spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1_r;
    return sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_SilverlinerIV_MU_SEPTA_Trailer;
    return sw_SilverlinerIV_MU_SEPTA_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2_r;
    return sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SilverlinerIV_MU_SEPTA_Trailer;
    3 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1_r;
    4 : sw_SilverlinerIV_MU_SEPTA_sidecheck_4_r;
    5 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2_r;
    6 .. 7 : sw_SilverlinerIV_MU_SEPTA_sidecheck_6_r;
    return sw_SilverlinerIV_MU_SEPTA_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SilverlinerIV_MU_SEPTA_NonControlMotor;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1;
    return sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1;
    return spriteset_SilverlinerIV_MU_SEPTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2;
    return sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SilverlinerIV_MU_SEPTA_Trailer;
    3 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_1;
    4 : sw_SilverlinerIV_MU_SEPTA_sidecheck_4;
    5 : sw_SilverlinerIV_MU_SEPTA_pantocheck_at_2;
    6 .. 7 : sw_SilverlinerIV_MU_SEPTA_sidecheck_6;
    return sw_SilverlinerIV_MU_SEPTA_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_SilverlinerIV_MU_SEPTA_Motor_lead; //Panto
    return spriteset_SilverlinerIV_MU_SEPTA_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_panto_direction_r, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_SEPTA_panto_direction_r_pos;        //Front panto
    return spriteset_SilverlinerIV_MU_SEPTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_SEPTA_panto_direction_r;        //Not flipped, give Panto
    return spriteset_SilverlinerIV_MU_SEPTA_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_frontcheck_r, position_in_vehid_chain){
    0: sw_SilverlinerIV_MU_SEPTA_panto_direction_r; //We need a pantograph, guaranteed
    return sw_SilverlinerIV_MU_SEPTA_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_panto_direction, vehicle_is_flipped){
    0 : spriteset_SilverlinerIV_MU_SEPTA_Motor_lead;        //Front panto
    return spriteset_SilverlinerIV_MU_SEPTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_panto_flipcheck, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_SEPTA_panto_direction;        //Not flipped, give Panto
    return spriteset_SilverlinerIV_MU_SEPTA_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_SEPTA_frontcheck, position_in_vehid_chain){
    0: sw_SilverlinerIV_MU_SEPTA_panto_direction; //We need a pantograph, guaranteed
    return sw_SilverlinerIV_MU_SEPTA_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_MU_SEPTA_directioncheck, vehicle_is_reversed){
    0: sw_SilverlinerIV_MU_SEPTA_frontcheck; //We are going forwards
    return sw_SilverlinerIV_MU_SEPTA_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_MU_SEPTA_revcheck, vehicle_is_reversed){
    0 : sw_SilverlinerIV_MU_SEPTA_lencheck;
    return sw_SilverlinerIV_MU_SEPTA_lencheck_r;
}

item(FEAT_TRAINS, Item_SilverlinerIV_MU_SEPTA, 10762) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SILVERLINERIV_MU);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     18;
        running_cost_factor:             180;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SilverlinerIV_MU_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SilverlinerIV_MU_SEPTA_directioncheck;
        can_attach_wagon: sw_SilverlinerIV_attach ;
        purchase: spriteset_SilverlinerIV_MU_SEPTA_purchase;
        additional_text: string(STR_INFO_SILVERLINERIV_MU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_SilverlinerIV_MU_SEPTA_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 45;

    }
}

//SilverlinerIV_MU_Blueliner
spriteset(spriteset_SilverlinerIV_MU_Blueliner_purchase,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_purchase(7, 21)}
spriteset(spriteset_SilverlinerIV_MU_Blueliner_Motor_lead,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SilverlinerIV_MU_Blueliner_Motor_rear,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SilverlinerIV_MU_Blueliner_DrivingTrailer_lead,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_Old_8(187, 39)}
spriteset(spriteset_SilverlinerIV_MU_Blueliner_DrivingTrailer_rear,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_Old_8(187, 64)}
spriteset(spriteset_SilverlinerIV_MU_Blueliner_Trailer,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_Old_8(7, 89)}
spriteset(spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_Old_8(187, 89)}
spriteset(spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor_r,   "gfx/SilverlinerIV_MU_Blueliner.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_Blueliner_Trailer;
    return spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1_r;
    return sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_SilverlinerIV_MU_Blueliner_Trailer;
    return sw_SilverlinerIV_MU_Blueliner_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2_r;
    return sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SilverlinerIV_MU_Blueliner_Trailer;
    3 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1_r;
    4 : sw_SilverlinerIV_MU_Blueliner_sidecheck_4_r;
    5 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2_r;
    6 .. 7 : sw_SilverlinerIV_MU_Blueliner_sidecheck_6_r;
    return sw_SilverlinerIV_MU_Blueliner_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor_r;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SilverlinerIV_MU_Blueliner_NonControlMotor;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1;
    return sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1;
    return spriteset_SilverlinerIV_MU_Blueliner_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2;
    return sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SilverlinerIV_MU_Blueliner_Trailer;
    3 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_1;
    4 : sw_SilverlinerIV_MU_Blueliner_sidecheck_4;
    5 : sw_SilverlinerIV_MU_Blueliner_pantocheck_at_2;
    6 .. 7 : sw_SilverlinerIV_MU_Blueliner_sidecheck_6;
    return sw_SilverlinerIV_MU_Blueliner_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_SilverlinerIV_MU_Blueliner_Motor_lead; //Panto
    return spriteset_SilverlinerIV_MU_Blueliner_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_panto_direction_r, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_Blueliner_panto_direction_r_pos;        //Front panto
    return spriteset_SilverlinerIV_MU_Blueliner_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_Blueliner_panto_direction_r;        //Not flipped, give Panto
    return spriteset_SilverlinerIV_MU_Blueliner_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_frontcheck_r, position_in_vehid_chain){
    0: sw_SilverlinerIV_MU_Blueliner_panto_direction_r; //We need a pantograph, guaranteed
    return sw_SilverlinerIV_MU_Blueliner_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_panto_direction, vehicle_is_flipped){
    0 : spriteset_SilverlinerIV_MU_Blueliner_Motor_lead;        //Front panto
    return spriteset_SilverlinerIV_MU_Blueliner_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_panto_flipcheck, vehicle_is_flipped){
    0 : sw_SilverlinerIV_MU_Blueliner_panto_direction;        //Not flipped, give Panto
    return spriteset_SilverlinerIV_MU_Blueliner_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SilverlinerIV_MU_Blueliner_frontcheck, position_in_vehid_chain){
    0: sw_SilverlinerIV_MU_Blueliner_panto_direction; //We need a pantograph, guaranteed
    return sw_SilverlinerIV_MU_Blueliner_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_MU_Blueliner_directioncheck, vehicle_is_reversed){
    0: sw_SilverlinerIV_MU_Blueliner_frontcheck; //We are going forwards
    return sw_SilverlinerIV_MU_Blueliner_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_SilverlinerIV_MU_Blueliner_revcheck, vehicle_is_reversed){
    0 : sw_SilverlinerIV_MU_Blueliner_lencheck;
    return sw_SilverlinerIV_MU_Blueliner_lencheck_r;
}

item(FEAT_TRAINS, Item_SilverlinerIV_MU_Blueliner, 10763) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SILVERLINERIV_MU);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            100 mph;
        power:                            1100 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     18;
        running_cost_factor:             180;
        cargo_capacity:                  120/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_SilverlinerIV_MU_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SilverlinerIV_MU_Blueliner_directioncheck;
        can_attach_wagon: sw_SilverlinerIV_attach ;
        purchase: spriteset_SilverlinerIV_MU_Blueliner_purchase;
        additional_text: string(STR_INFO_SILVERLINERIV_MU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_SilverlinerIV_MU_Blueliner_revcheck ;
        length                      : 8;
        cargo_capacity              : (120/param_capacity_mod) ;
        power                       : 550 ;
		running_cost_factor: 45;

    }
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_attach, vehicle_type_id){
	Item_JerseyArrowII_RM_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_JerseyArrowII_RM_NJT     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_JerseyArrowII_MU_Silver     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_JerseyArrowII_MU_NJT     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_MU_Trailer	: return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}


//JerseyArrowII_RM Lights
spriteset(spriteset_JerseyArrowII_RM_Headlights,   "gfx/JerseyArrowII_RM_Headlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_JerseyArrowII_RM_Headlights_r,   "gfx/JerseyArrowII_RM_Headlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)
spriteset(spriteset_JerseyArrowII_RM_Markerlights,   "gfx/JerseyArrowII_RM_Markerlights.png") {template_Old_8(7, 39)} // <- Define headlights
spriteset(spriteset_JerseyArrowII_RM_Markerlights_r,   "gfx/JerseyArrowII_RM_Markerlights.png") {template_Old_8(7, 64)} // <- Define headlights (flipped)


//JerseyArrowII_RM_Silver
spriteset(spriteset_JerseyArrowII_RM_Silver_Purchase,   "gfx/JerseyArrowII_RM_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_JerseyArrowII_RM_Silver,   "gfx/JerseyArrowII_RM_Silver.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_JerseyArrowII_RM_Silver_r,   "gfx/JerseyArrowII_RM_Silver.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_RM_Silver_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrowII_RM_Headlights_r;
    spriteset_JerseyArrowII_RM_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_RM_Silver_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrowII_RM_Markerlights_r;
    spriteset_JerseyArrowII_RM_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_RM_Silver_flipcheck, vehicle_is_reversed){
    1: spriteset_JerseyArrowII_RM_Silver_r;
    spriteset_JerseyArrowII_RM_Silver ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_Silver_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrowII_RM_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrowII_RM_Silver_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_Silver_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrowII_RM_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrowII_RM_Silver_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_Silver_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrowII_RM_Silver_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrowII_RM_Silver_headlight_flipcheck;    // Return the headlight overlay
    return sw_JerseyArrowII_RM_Silver_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_Silver_rear, position_in_consist_from_end){
    0 : return sw_JerseyArrowII_RM_Silver_markerlight_stack;
    return sw_JerseyArrowII_RM_Silver_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_Silver_lead, position_in_consist) {
    0: sw_JerseyArrowII_RM_Silver_headlight_stack;
    return sw_JerseyArrowII_RM_Silver_rear;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_Silver_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_JerseyArrowII_RM_Silver_headlight_and_marker_stack;
return sw_JerseyArrowII_RM_Silver_lead;
}

item(FEAT_TRAINS, Item_JerseyArrowII_RM_Silver, 10771) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_JERSEYARROWII_RM);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            80 mph;
        power:                            750 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             90;
        cargo_capacity:                  130/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_JerseyArrowII_RM_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_JerseyArrowII_RM_Silver_solo;
        can_attach_wagon: sw_JerseyArrowII_attach;
        purchase: spriteset_JerseyArrowII_RM_Silver_Purchase;
        additional_text: string(STR_INFO_JERSEYARROWII_RM);
}
}

//JerseyArrowII_RM_NJT
spriteset(spriteset_JerseyArrowII_RM_NJT_Purchase,   "gfx/JerseyArrowII_RM_NJT.png") {template_purchase(7, 21)}
spriteset(spriteset_JerseyArrowII_RM_NJT,   "gfx/JerseyArrowII_RM_NJT.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_JerseyArrowII_RM_NJT_r,   "gfx/JerseyArrowII_RM_NJT.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_RM_NJT_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrowII_RM_Headlights_r;
    spriteset_JerseyArrowII_RM_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_RM_NJT_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_JerseyArrowII_RM_Markerlights_r;
    spriteset_JerseyArrowII_RM_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_RM_NJT_flipcheck, vehicle_is_reversed){
    1: spriteset_JerseyArrowII_RM_NJT_r;
    spriteset_JerseyArrowII_RM_NJT ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_NJT_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrowII_RM_NJT_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrowII_RM_NJT_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_NJT_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrowII_RM_NJT_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrowII_RM_NJT_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_NJT_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_JerseyArrowII_RM_NJT_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_JerseyArrowII_RM_NJT_headlight_flipcheck;    // Return the headlight overlay
    return sw_JerseyArrowII_RM_NJT_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_NJT_rear, position_in_consist_from_end){
    0 : return sw_JerseyArrowII_RM_NJT_markerlight_stack;
    return sw_JerseyArrowII_RM_NJT_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_NJT_lead, position_in_consist) {
    0: sw_JerseyArrowII_RM_NJT_headlight_stack;
    return sw_JerseyArrowII_RM_NJT_rear;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_RM_NJT_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_JerseyArrowII_RM_NJT_headlight_and_marker_stack;
return sw_JerseyArrowII_RM_NJT_lead;
}

item(FEAT_TRAINS, Item_JerseyArrowII_RM_NJT, 10772) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_JERSEYARROWII_RM);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            80 mph;
        power:                            750 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     10;
        running_cost_factor:             90;
        cargo_capacity:                  130/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_JerseyArrowII_RM_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_JerseyArrowII_RM_NJT_solo;
        can_attach_wagon: sw_JerseyArrowII_attach;
        purchase: spriteset_JerseyArrowII_RM_NJT_Purchase;
        additional_text: string(STR_INFO_JERSEYARROWII_RM);
}
}

//JerseyArrowII_MU_Silver
spriteset(spriteset_JerseyArrowII_MU_Silver_purchase,   "gfx/JerseyArrowII_MU_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_JerseyArrowII_MU_Silver_Motor_lead,   "gfx/JerseyArrowII_MU_Silver.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_JerseyArrowII_MU_Silver_Motor_rear,   "gfx/JerseyArrowII_MU_Silver.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_JerseyArrowII_MU_Silver_DrivingTrailer_lead,   "gfx/JerseyArrowII_MU_Silver.png") {template_Old_8(187, 39)}
spriteset(spriteset_JerseyArrowII_MU_Silver_DrivingTrailer_rear,   "gfx/JerseyArrowII_MU_Silver.png") {template_Old_8(187, 64)}
spriteset(spriteset_JerseyArrowII_MU_Silver_Trailer,   "gfx/JerseyArrowII_MU_Silver.png") {template_Old_8(7, 89)}
spriteset(spriteset_JerseyArrowII_MU_Silver_NonControlMotor,   "gfx/JerseyArrowII_MU_Silver.png") {template_Old_8(187, 89)}
spriteset(spriteset_JerseyArrowII_MU_Silver_NonControlMotor_r,   "gfx/JerseyArrowII_MU_Silver.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_JerseyArrowII_MU_Silver_Trailer;
    return spriteset_JerseyArrowII_MU_Silver_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_Silver_pantocheck_at_1_r;
    return sw_JerseyArrowII_MU_Silver_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_JerseyArrowII_MU_Silver_Trailer;
    return sw_JerseyArrowII_MU_Silver_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_Silver_pantocheck_at_2_r;
    return sw_JerseyArrowII_MU_Silver_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_JerseyArrowII_MU_Silver_Trailer;
    3 : sw_JerseyArrowII_MU_Silver_pantocheck_at_1_r;
    4 : sw_JerseyArrowII_MU_Silver_sidecheck_4_r;
    5 : sw_JerseyArrowII_MU_Silver_pantocheck_at_2_r;
    6 .. 7 : sw_JerseyArrowII_MU_Silver_sidecheck_6_r;
    return sw_JerseyArrowII_MU_Silver_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_JerseyArrowII_MU_Silver_NonControlMotor;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_Silver_pantocheck_at_1;
    return sw_JerseyArrowII_MU_Silver_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_Silver_pantocheck_at_1;
    return spriteset_JerseyArrowII_MU_Silver_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_Silver_pantocheck_at_2;
    return sw_JerseyArrowII_MU_Silver_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_JerseyArrowII_MU_Silver_Trailer;
    3 : sw_JerseyArrowII_MU_Silver_pantocheck_at_1;
    4 : sw_JerseyArrowII_MU_Silver_sidecheck_4;
    5 : sw_JerseyArrowII_MU_Silver_pantocheck_at_2;
    6 .. 7 : sw_JerseyArrowII_MU_Silver_sidecheck_6;
    return sw_JerseyArrowII_MU_Silver_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_JerseyArrowII_MU_Silver_Motor_lead; //Panto
    return spriteset_JerseyArrowII_MU_Silver_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_panto_direction_r, vehicle_is_flipped){
    0 : sw_JerseyArrowII_MU_Silver_panto_direction_r_pos;        //Front panto
    return spriteset_JerseyArrowII_MU_Silver_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_JerseyArrowII_MU_Silver_panto_direction_r;        //Not flipped, give Panto
    return spriteset_JerseyArrowII_MU_Silver_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_frontcheck_r, position_in_vehid_chain){
    0: sw_JerseyArrowII_MU_Silver_panto_direction_r; //We need a pantograph, guaranteed
    return sw_JerseyArrowII_MU_Silver_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_panto_direction, vehicle_is_flipped){
    0 : spriteset_JerseyArrowII_MU_Silver_Motor_lead;        //Front panto
    return spriteset_JerseyArrowII_MU_Silver_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_panto_flipcheck, vehicle_is_flipped){
    0 : sw_JerseyArrowII_MU_Silver_panto_direction;        //Not flipped, give Panto
    return spriteset_JerseyArrowII_MU_Silver_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_Silver_frontcheck, position_in_vehid_chain){
    0: sw_JerseyArrowII_MU_Silver_panto_direction; //We need a pantograph, guaranteed
    return sw_JerseyArrowII_MU_Silver_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_MU_Silver_directioncheck, vehicle_is_reversed){
    0: sw_JerseyArrowII_MU_Silver_frontcheck; //We are going forwards
    return sw_JerseyArrowII_MU_Silver_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_MU_Silver_revcheck, vehicle_is_reversed){
    0 : sw_JerseyArrowII_MU_Silver_lencheck;
    return sw_JerseyArrowII_MU_Silver_lencheck_r;
}

item(FEAT_TRAINS, Item_JerseyArrowII_MU_Silver, 10781) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_JERSEYARROWII_MU);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            80 mph;
        power:                            1500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     18;
        running_cost_factor:             180;
        cargo_capacity:                  130/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_JerseyArrowII_MU_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_JerseyArrowII_MU_Silver_directioncheck;
        can_attach_wagon: sw_JerseyArrowII_attach ;
        purchase: spriteset_JerseyArrowII_MU_Silver_purchase;
        additional_text: string(STR_INFO_JERSEYARROWII_MU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_JerseyArrowII_MU_Silver_revcheck ;
        length                      : 8;
        cargo_capacity              : (130/param_capacity_mod) ;
        power                       : 750 ;
		running_cost_factor: 45;

    }
}

//JerseyArrowII_MU_NJT
spriteset(spriteset_JerseyArrowII_MU_NJT_purchase,   "gfx/JerseyArrowII_MU_NJT.png") {template_purchase(7, 21)}
spriteset(spriteset_JerseyArrowII_MU_NJT_Motor_lead,   "gfx/JerseyArrowII_MU_NJT.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_JerseyArrowII_MU_NJT_Motor_rear,   "gfx/JerseyArrowII_MU_NJT.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_JerseyArrowII_MU_NJT_DrivingTrailer_lead,   "gfx/JerseyArrowII_MU_NJT.png") {template_Old_8(187, 39)}
spriteset(spriteset_JerseyArrowII_MU_NJT_DrivingTrailer_rear,   "gfx/JerseyArrowII_MU_NJT.png") {template_Old_8(187, 64)}
spriteset(spriteset_JerseyArrowII_MU_NJT_Trailer,   "gfx/JerseyArrowII_MU_NJT.png") {template_Old_8(7, 89)}
spriteset(spriteset_JerseyArrowII_MU_NJT_NonControlMotor,   "gfx/JerseyArrowII_MU_NJT.png") {template_Old_8(187, 89)}
spriteset(spriteset_JerseyArrowII_MU_NJT_NonControlMotor_r,   "gfx/JerseyArrowII_MU_NJT.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_JerseyArrowII_MU_NJT_Trailer;
    return spriteset_JerseyArrowII_MU_NJT_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_NJT_pantocheck_at_1_r;
    return sw_JerseyArrowII_MU_NJT_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_JerseyArrowII_MU_NJT_Trailer;
    return sw_JerseyArrowII_MU_NJT_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_NJT_pantocheck_at_2_r;
    return sw_JerseyArrowII_MU_NJT_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_JerseyArrowII_MU_NJT_Trailer;
    3 : sw_JerseyArrowII_MU_NJT_pantocheck_at_1_r;
    4 : sw_JerseyArrowII_MU_NJT_sidecheck_4_r;
    5 : sw_JerseyArrowII_MU_NJT_pantocheck_at_2_r;
    6 .. 7 : sw_JerseyArrowII_MU_NJT_sidecheck_6_r;
    return sw_JerseyArrowII_MU_NJT_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor_r;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_JerseyArrowII_MU_NJT_NonControlMotor;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_NJT_pantocheck_at_1;
    return sw_JerseyArrowII_MU_NJT_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_NJT_pantocheck_at_1;
    return spriteset_JerseyArrowII_MU_NJT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_JerseyArrowII_MU_NJT_pantocheck_at_2;
    return sw_JerseyArrowII_MU_NJT_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_JerseyArrowII_MU_NJT_Trailer;
    3 : sw_JerseyArrowII_MU_NJT_pantocheck_at_1;
    4 : sw_JerseyArrowII_MU_NJT_sidecheck_4;
    5 : sw_JerseyArrowII_MU_NJT_pantocheck_at_2;
    6 .. 7 : sw_JerseyArrowII_MU_NJT_sidecheck_6;
    return sw_JerseyArrowII_MU_NJT_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_JerseyArrowII_MU_NJT_Motor_lead; //Panto
    return spriteset_JerseyArrowII_MU_NJT_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_panto_direction_r, vehicle_is_flipped){
    0 : sw_JerseyArrowII_MU_NJT_panto_direction_r_pos;        //Front panto
    return spriteset_JerseyArrowII_MU_NJT_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_JerseyArrowII_MU_NJT_panto_direction_r;        //Not flipped, give Panto
    return spriteset_JerseyArrowII_MU_NJT_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_frontcheck_r, position_in_vehid_chain){
    0: sw_JerseyArrowII_MU_NJT_panto_direction_r; //We need a pantograph, guaranteed
    return sw_JerseyArrowII_MU_NJT_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_panto_direction, vehicle_is_flipped){
    0 : spriteset_JerseyArrowII_MU_NJT_Motor_lead;        //Front panto
    return spriteset_JerseyArrowII_MU_NJT_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_panto_flipcheck, vehicle_is_flipped){
    0 : sw_JerseyArrowII_MU_NJT_panto_direction;        //Not flipped, give Panto
    return spriteset_JerseyArrowII_MU_NJT_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_JerseyArrowII_MU_NJT_frontcheck, position_in_vehid_chain){
    0: sw_JerseyArrowII_MU_NJT_panto_direction; //We need a pantograph, guaranteed
    return sw_JerseyArrowII_MU_NJT_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_MU_NJT_directioncheck, vehicle_is_reversed){
    0: sw_JerseyArrowII_MU_NJT_frontcheck; //We are going forwards
    return sw_JerseyArrowII_MU_NJT_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_JerseyArrowII_MU_NJT_revcheck, vehicle_is_reversed){
    0 : sw_JerseyArrowII_MU_NJT_lencheck;
    return sw_JerseyArrowII_MU_NJT_lencheck_r;
}

item(FEAT_TRAINS, Item_JerseyArrowII_MU_NJT, 10782) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_JERSEYARROWII_MU);
        introduction_date:                date(1974,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        54 ton;
        speed:                            80 mph;
        power:                            1500 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     18;
        running_cost_factor:             180;
        cargo_capacity:                  130/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_JerseyArrowII_MU_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_JerseyArrowII_MU_NJT_directioncheck;
        can_attach_wagon: sw_JerseyArrowII_attach ;
        purchase: spriteset_JerseyArrowII_MU_NJT_purchase;
        additional_text: string(STR_INFO_JERSEYARROWII_MU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_JerseyArrowII_MU_NJT_revcheck ;
        length                      : 8;
        cargo_capacity              : (130/param_capacity_mod) ;
        power                       : 750 ;
		running_cost_factor: 45;

    }
}

switch(FEAT_TRAINS, SELF, sw_MR90_attach, vehicle_type_id){
    Item_MR90_AMT    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//MR90_AMT
spriteset(spriteset_MR90_AMT_purchase,   "gfx/MR90_AMT.png") {template_purchase(7, 21)}
spriteset(spriteset_MR90_AMT_Motor_lead,   "gfx/MR90_AMT.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_MR90_AMT_Motor_rear,   "gfx/MR90_AMT.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_MR90_AMT_DrivingTrailer_lead,   "gfx/MR90_AMT.png") {template_Old_8(187, 39)}
spriteset(spriteset_MR90_AMT_DrivingTrailer_rear,   "gfx/MR90_AMT.png") {template_Old_8(187, 64)}
spriteset(spriteset_MR90_AMT_Trailer,   "gfx/MR90_AMT.png") {template_Old_8(7, 89)}
spriteset(spriteset_MR90_AMT_NonControlMotor,   "gfx/MR90_AMT.png") {template_Old_8(187, 89)}
spriteset(spriteset_MR90_AMT_NonControlMotor_r,   "gfx/MR90_AMT.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_MR90_AMT_NonControlMotor_r;
    return spriteset_MR90_AMT_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_MR90_AMT_NonControlMotor;
    return spriteset_MR90_AMT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_MR90_AMT_NonControlMotor_r;
    return spriteset_MR90_AMT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_MR90_AMT_Trailer;
    return spriteset_MR90_AMT_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_MR90_AMT_NonControlMotor;
    return spriteset_MR90_AMT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_MR90_AMT_pantocheck_at_1_r;
    return sw_MR90_AMT_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_MR90_AMT_Trailer;
    return sw_MR90_AMT_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_MR90_AMT_pantocheck_at_2_r;
    return sw_MR90_AMT_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_MR90_AMT_Trailer;
    3 : sw_MR90_AMT_pantocheck_at_1_r;
    4 : sw_MR90_AMT_sidecheck_4_r;
    5 : sw_MR90_AMT_pantocheck_at_2_r;
    6 .. 7 : sw_MR90_AMT_sidecheck_6_r;
    return sw_MR90_AMT_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_MR90_AMT_NonControlMotor_r;
    return spriteset_MR90_AMT_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_MR90_AMT_NonControlMotor;
    return spriteset_MR90_AMT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_MR90_AMT_NonControlMotor_r;
    return spriteset_MR90_AMT_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_MR90_AMT_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_MR90_AMT_NonControlMotor;
    return spriteset_MR90_AMT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_MR90_AMT_pantocheck_at_1;
    return sw_MR90_AMT_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_MR90_AMT_pantocheck_at_1;
    return spriteset_MR90_AMT_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_MR90_AMT_pantocheck_at_2;
    return sw_MR90_AMT_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_MR90_AMT_Trailer;
    3 : sw_MR90_AMT_pantocheck_at_1;
    4 : sw_MR90_AMT_sidecheck_4;
    5 : sw_MR90_AMT_pantocheck_at_2;
    6 .. 7 : sw_MR90_AMT_sidecheck_6;
    return sw_MR90_AMT_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_MR90_AMT_Motor_lead; //Panto
    return spriteset_MR90_AMT_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_panto_direction_r, vehicle_is_flipped){
    0 : sw_MR90_AMT_panto_direction_r_pos;        //Front panto
    return spriteset_MR90_AMT_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_MR90_AMT_panto_direction_r;        //Not flipped, give Panto
    return spriteset_MR90_AMT_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_frontcheck_r, position_in_vehid_chain){
    0: sw_MR90_AMT_panto_direction_r; //We need a pantograph, guaranteed
    return sw_MR90_AMT_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_panto_direction, vehicle_is_flipped){
    0 : spriteset_MR90_AMT_Motor_lead;        //Front panto
    return spriteset_MR90_AMT_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_panto_flipcheck, vehicle_is_flipped){
    0 : sw_MR90_AMT_panto_direction;        //Not flipped, give Panto
    return spriteset_MR90_AMT_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_MR90_AMT_frontcheck, position_in_vehid_chain){
    0: sw_MR90_AMT_panto_direction; //We need a pantograph, guaranteed
    return sw_MR90_AMT_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_MR90_AMT_directioncheck, vehicle_is_reversed){
    0: sw_MR90_AMT_frontcheck; //We are going forwards
    return sw_MR90_AMT_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_MR90_AMT_revcheck, vehicle_is_reversed){
    0 : sw_MR90_AMT_lencheck;
    return sw_MR90_AMT_lencheck_r;
}

item(FEAT_TRAINS, Item_MR90_AMT, 10901) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_MR90);
        introduction_date:                date(1995,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        50 ton;
        speed:                            75 mph;
        power:                            1524 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             200;
        cargo_capacity:                  20/param_capacity_mod;
        loading_speed: 35;

        variant_group: Item_MR90_AMT;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_MR90_AMT_directioncheck;
        can_attach_wagon: sw_MR90_attach ;
        purchase: spriteset_MR90_AMT_purchase;
        additional_text: string(STR_INFO_MR90);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_MR90_AMT_revcheck ;
        length                      : 8;
        cargo_capacity              : (136/param_capacity_mod) ;
        power                       : 762 ;
		running_cost_factor: 50;

    }
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_attach, vehicle_type_id){
	Item_Gallery2000_Metra1    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Gallery2000_Metra1
spriteset(spriteset_Gallery2000_Metra1_purchase,   "gfx/Gallery2000_Metra1.png") {template_purchase(7, 21)}
spriteset(spriteset_Gallery2000_Metra1_Motor_lead,   "gfx/Gallery2000_Metra1.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Gallery2000_Metra1_Motor_rear,   "gfx/Gallery2000_Metra1.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Gallery2000_Metra1_DrivingTrailer_lead,   "gfx/Gallery2000_Metra1.png") {template_Old_8(187, 39)}
spriteset(spriteset_Gallery2000_Metra1_DrivingTrailer_rear,   "gfx/Gallery2000_Metra1.png") {template_Old_8(187, 64)}
spriteset(spriteset_Gallery2000_Metra1_Trailer,   "gfx/Gallery2000_Metra1.png") {template_Old_8(7, 89)}
spriteset(spriteset_Gallery2000_Metra1_NonControlMotor,   "gfx/Gallery2000_Metra1.png") {template_Old_8(187, 89)}
spriteset(spriteset_Gallery2000_Metra1_NonControlMotor_r,   "gfx/Gallery2000_Metra1.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Gallery2000_Metra1_NonControlMotor_r;
    return spriteset_Gallery2000_Metra1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Gallery2000_Metra1_NonControlMotor;
    return spriteset_Gallery2000_Metra1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Gallery2000_Metra1_NonControlMotor_r;
    return spriteset_Gallery2000_Metra1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Gallery2000_Metra1_Trailer;
    return spriteset_Gallery2000_Metra1_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Gallery2000_Metra1_NonControlMotor;
    return spriteset_Gallery2000_Metra1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Gallery2000_Metra1_pantocheck_at_1_r;
    return sw_Gallery2000_Metra1_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Gallery2000_Metra1_Trailer;
    return sw_Gallery2000_Metra1_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Gallery2000_Metra1_pantocheck_at_2_r;
    return sw_Gallery2000_Metra1_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Gallery2000_Metra1_Trailer;
    3 : sw_Gallery2000_Metra1_pantocheck_at_1_r;
    4 : sw_Gallery2000_Metra1_sidecheck_4_r;
    5 : sw_Gallery2000_Metra1_pantocheck_at_2_r;
    6 .. 7 : sw_Gallery2000_Metra1_sidecheck_6_r;
    return sw_Gallery2000_Metra1_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Gallery2000_Metra1_NonControlMotor_r;
    return spriteset_Gallery2000_Metra1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Gallery2000_Metra1_NonControlMotor;
    return spriteset_Gallery2000_Metra1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Gallery2000_Metra1_NonControlMotor_r;
    return spriteset_Gallery2000_Metra1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Gallery2000_Metra1_NonControlMotor;
    return spriteset_Gallery2000_Metra1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Gallery2000_Metra1_pantocheck_at_1;
    return sw_Gallery2000_Metra1_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Gallery2000_Metra1_pantocheck_at_1;
    return spriteset_Gallery2000_Metra1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Gallery2000_Metra1_pantocheck_at_2;
    return sw_Gallery2000_Metra1_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Gallery2000_Metra1_Trailer;
    3 : sw_Gallery2000_Metra1_pantocheck_at_1;
    4 : sw_Gallery2000_Metra1_sidecheck_4;
    5 : sw_Gallery2000_Metra1_pantocheck_at_2;
    6 .. 7 : sw_Gallery2000_Metra1_sidecheck_6;
    return sw_Gallery2000_Metra1_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Gallery2000_Metra1_Motor_lead; //Panto
    return spriteset_Gallery2000_Metra1_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_panto_direction_r, vehicle_is_flipped){
    0 : sw_Gallery2000_Metra1_panto_direction_r_pos;        //Front panto
    return spriteset_Gallery2000_Metra1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Gallery2000_Metra1_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Gallery2000_Metra1_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_frontcheck_r, position_in_vehid_chain){
    0: sw_Gallery2000_Metra1_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Gallery2000_Metra1_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_panto_direction, vehicle_is_flipped){
    0 : spriteset_Gallery2000_Metra1_Motor_lead;        //Front panto
    return spriteset_Gallery2000_Metra1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Gallery2000_Metra1_panto_direction;        //Not flipped, give Panto
    return spriteset_Gallery2000_Metra1_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Gallery2000_Metra1_frontcheck, position_in_vehid_chain){
    0: sw_Gallery2000_Metra1_panto_direction; //We need a pantograph, guaranteed
    return sw_Gallery2000_Metra1_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Gallery2000_Metra1_directioncheck, vehicle_is_reversed){
    0: sw_Gallery2000_Metra1_frontcheck; //We are going forwards
    return sw_Gallery2000_Metra1_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Gallery2000_Metra1_revcheck, vehicle_is_reversed){
    0 : sw_Gallery2000_Metra1_lencheck;
    return sw_Gallery2000_Metra1_lencheck_r;
}

item(FEAT_TRAINS, Item_Gallery2000_Metra1, 12821) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_GALLERY2000);
        introduction_date:                date(1985,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        60 ton;
        speed:                            90 mph;
        power:                            1600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             192;
        cargo_capacity:                  180/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Gallery2000_Metra1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Gallery2000_Metra1_directioncheck;
        can_attach_wagon: sw_Gallery2000_attach ;
        purchase: spriteset_Gallery2000_Metra1_purchase;
        additional_text: string(STR_INFO_GALLERY2000);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Gallery2000_Metra1_revcheck ;
        length                      : 8;
        cargo_capacity              : (180/param_capacity_mod) ;
        power                       : 800 ;
		running_cost_factor: 48;

    }
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_attach, vehicle_type_id){
	Item_PortLinerI_MTA    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PortLinerI_LIRR    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_PortLinerI_MBTA    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//PortLinerI_MTA
spriteset(spriteset_PortLinerI_MTA_purchase,   "gfx/PortLinerI_MTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PortLinerI_MTA_Motor_lead,   "gfx/PortLinerI_MTA.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_PortLinerI_MTA_Motor_rear,   "gfx/PortLinerI_MTA.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_PortLinerI_MTA_DrivingTrailer_lead,   "gfx/PortLinerI_MTA.png") {template_Old_8(187, 39)}
spriteset(spriteset_PortLinerI_MTA_DrivingTrailer_rear,   "gfx/PortLinerI_MTA.png") {template_Old_8(187, 64)}
spriteset(spriteset_PortLinerI_MTA_Trailer,   "gfx/PortLinerI_MTA.png") {template_Old_8(7, 89)}
spriteset(spriteset_PortLinerI_MTA_NonControlMotor,   "gfx/PortLinerI_MTA.png") {template_Old_8(187, 89)}
spriteset(spriteset_PortLinerI_MTA_NonControlMotor_r,   "gfx/PortLinerI_MTA.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_PortLinerI_MTA_NonControlMotor_r;
    return spriteset_PortLinerI_MTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_PortLinerI_MTA_NonControlMotor;
    return spriteset_PortLinerI_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_MTA_NonControlMotor_r;
    return spriteset_PortLinerI_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_MTA_Trailer;
    return spriteset_PortLinerI_MTA_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_PortLinerI_MTA_NonControlMotor;
    return spriteset_PortLinerI_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MTA_pantocheck_at_1_r;
    return sw_PortLinerI_MTA_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_PortLinerI_MTA_Trailer;
    return sw_PortLinerI_MTA_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MTA_pantocheck_at_2_r;
    return sw_PortLinerI_MTA_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_PortLinerI_MTA_Trailer;
    3 : sw_PortLinerI_MTA_pantocheck_at_1_r;
    4 : sw_PortLinerI_MTA_sidecheck_4_r;
    5 : sw_PortLinerI_MTA_pantocheck_at_2_r;
    6 .. 7 : sw_PortLinerI_MTA_sidecheck_6_r;
    return sw_PortLinerI_MTA_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_PortLinerI_MTA_NonControlMotor_r;
    return spriteset_PortLinerI_MTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_PortLinerI_MTA_NonControlMotor;
    return spriteset_PortLinerI_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_MTA_NonControlMotor_r;
    return spriteset_PortLinerI_MTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_PortLinerI_MTA_NonControlMotor;
    return spriteset_PortLinerI_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MTA_pantocheck_at_1;
    return sw_PortLinerI_MTA_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MTA_pantocheck_at_1;
    return spriteset_PortLinerI_MTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MTA_pantocheck_at_2;
    return sw_PortLinerI_MTA_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_PortLinerI_MTA_Trailer;
    3 : sw_PortLinerI_MTA_pantocheck_at_1;
    4 : sw_PortLinerI_MTA_sidecheck_4;
    5 : sw_PortLinerI_MTA_pantocheck_at_2;
    6 .. 7 : sw_PortLinerI_MTA_sidecheck_6;
    return sw_PortLinerI_MTA_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_PortLinerI_MTA_Motor_lead; //Panto
    return spriteset_PortLinerI_MTA_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_panto_direction_r, vehicle_is_flipped){
    0 : sw_PortLinerI_MTA_panto_direction_r_pos;        //Front panto
    return spriteset_PortLinerI_MTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_PortLinerI_MTA_panto_direction_r;        //Not flipped, give Panto
    return spriteset_PortLinerI_MTA_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_frontcheck_r, position_in_vehid_chain){
    0: sw_PortLinerI_MTA_panto_direction_r; //We need a pantograph, guaranteed
    return sw_PortLinerI_MTA_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_panto_direction, vehicle_is_flipped){
    0 : spriteset_PortLinerI_MTA_Motor_lead;        //Front panto
    return spriteset_PortLinerI_MTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_panto_flipcheck, vehicle_is_flipped){
    0 : sw_PortLinerI_MTA_panto_direction;        //Not flipped, give Panto
    return spriteset_PortLinerI_MTA_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MTA_frontcheck, position_in_vehid_chain){
    0: sw_PortLinerI_MTA_panto_direction; //We need a pantograph, guaranteed
    return sw_PortLinerI_MTA_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_PortLinerI_MTA_directioncheck, vehicle_is_reversed){
    0: sw_PortLinerI_MTA_frontcheck; //We are going forwards
    return sw_PortLinerI_MTA_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_PortLinerI_MTA_revcheck, vehicle_is_reversed){
    0 : sw_PortLinerI_MTA_lencheck;
    return sw_PortLinerI_MTA_lencheck_r;
}

item(FEAT_TRAINS, Item_PortLinerI_MTA, 12901) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PORTLINERI);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            100 mph;
        power:                            1824 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     21;
        running_cost_factor:             194;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_PortLinerI_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PortLinerI_MTA_directioncheck;
        can_attach_wagon: sw_PortLinerI_attach ;
        purchase: spriteset_PortLinerI_MTA_purchase;
        additional_text: string(STR_INFO_PORTLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_PortLinerI_MTA_revcheck ;
        length                      : 8;
        cargo_capacity              : (195/param_capacity_mod) ;
        power                       : 912 ;
		running_cost_factor: 48;

    }
}

//PortLinerI_LIRR
spriteset(spriteset_PortLinerI_LIRR_purchase,   "gfx/PortLinerI_LIRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PortLinerI_LIRR_Motor_lead,   "gfx/PortLinerI_LIRR.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_PortLinerI_LIRR_Motor_rear,   "gfx/PortLinerI_LIRR.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_PortLinerI_LIRR_DrivingTrailer_lead,   "gfx/PortLinerI_LIRR.png") {template_Old_8(187, 39)}
spriteset(spriteset_PortLinerI_LIRR_DrivingTrailer_rear,   "gfx/PortLinerI_LIRR.png") {template_Old_8(187, 64)}
spriteset(spriteset_PortLinerI_LIRR_Trailer,   "gfx/PortLinerI_LIRR.png") {template_Old_8(7, 89)}
spriteset(spriteset_PortLinerI_LIRR_NonControlMotor,   "gfx/PortLinerI_LIRR.png") {template_Old_8(187, 89)}
spriteset(spriteset_PortLinerI_LIRR_NonControlMotor_r,   "gfx/PortLinerI_LIRR.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_PortLinerI_LIRR_NonControlMotor_r;
    return spriteset_PortLinerI_LIRR_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_PortLinerI_LIRR_NonControlMotor;
    return spriteset_PortLinerI_LIRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_LIRR_NonControlMotor_r;
    return spriteset_PortLinerI_LIRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_LIRR_Trailer;
    return spriteset_PortLinerI_LIRR_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_PortLinerI_LIRR_NonControlMotor;
    return spriteset_PortLinerI_LIRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_LIRR_pantocheck_at_1_r;
    return sw_PortLinerI_LIRR_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_PortLinerI_LIRR_Trailer;
    return sw_PortLinerI_LIRR_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_LIRR_pantocheck_at_2_r;
    return sw_PortLinerI_LIRR_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_PortLinerI_LIRR_Trailer;
    3 : sw_PortLinerI_LIRR_pantocheck_at_1_r;
    4 : sw_PortLinerI_LIRR_sidecheck_4_r;
    5 : sw_PortLinerI_LIRR_pantocheck_at_2_r;
    6 .. 7 : sw_PortLinerI_LIRR_sidecheck_6_r;
    return sw_PortLinerI_LIRR_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_PortLinerI_LIRR_NonControlMotor_r;
    return spriteset_PortLinerI_LIRR_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_PortLinerI_LIRR_NonControlMotor;
    return spriteset_PortLinerI_LIRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_LIRR_NonControlMotor_r;
    return spriteset_PortLinerI_LIRR_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_PortLinerI_LIRR_NonControlMotor;
    return spriteset_PortLinerI_LIRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_LIRR_pantocheck_at_1;
    return sw_PortLinerI_LIRR_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_LIRR_pantocheck_at_1;
    return spriteset_PortLinerI_LIRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_LIRR_pantocheck_at_2;
    return sw_PortLinerI_LIRR_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_PortLinerI_LIRR_Trailer;
    3 : sw_PortLinerI_LIRR_pantocheck_at_1;
    4 : sw_PortLinerI_LIRR_sidecheck_4;
    5 : sw_PortLinerI_LIRR_pantocheck_at_2;
    6 .. 7 : sw_PortLinerI_LIRR_sidecheck_6;
    return sw_PortLinerI_LIRR_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_PortLinerI_LIRR_Motor_lead; //Panto
    return spriteset_PortLinerI_LIRR_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_panto_direction_r, vehicle_is_flipped){
    0 : sw_PortLinerI_LIRR_panto_direction_r_pos;        //Front panto
    return spriteset_PortLinerI_LIRR_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_PortLinerI_LIRR_panto_direction_r;        //Not flipped, give Panto
    return spriteset_PortLinerI_LIRR_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_frontcheck_r, position_in_vehid_chain){
    0: sw_PortLinerI_LIRR_panto_direction_r; //We need a pantograph, guaranteed
    return sw_PortLinerI_LIRR_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_panto_direction, vehicle_is_flipped){
    0 : spriteset_PortLinerI_LIRR_Motor_lead;        //Front panto
    return spriteset_PortLinerI_LIRR_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_panto_flipcheck, vehicle_is_flipped){
    0 : sw_PortLinerI_LIRR_panto_direction;        //Not flipped, give Panto
    return spriteset_PortLinerI_LIRR_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_LIRR_frontcheck, position_in_vehid_chain){
    0: sw_PortLinerI_LIRR_panto_direction; //We need a pantograph, guaranteed
    return sw_PortLinerI_LIRR_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_PortLinerI_LIRR_directioncheck, vehicle_is_reversed){
    0: sw_PortLinerI_LIRR_frontcheck; //We are going forwards
    return sw_PortLinerI_LIRR_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_PortLinerI_LIRR_revcheck, vehicle_is_reversed){
    0 : sw_PortLinerI_LIRR_lencheck;
    return sw_PortLinerI_LIRR_lencheck_r;
}

item(FEAT_TRAINS, Item_PortLinerI_LIRR, 12902) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PORTLINERI);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            100 mph;
        power:                            1824 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     22;
        running_cost_factor:             194;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_PortLinerI_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PortLinerI_LIRR_directioncheck;
        can_attach_wagon: sw_PortLinerI_attach ;
        purchase: spriteset_PortLinerI_LIRR_purchase;
        additional_text: string(STR_INFO_PORTLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_PortLinerI_LIRR_revcheck ;
        length                      : 8;
        cargo_capacity              : (195/param_capacity_mod) ;
        power                       : 912 ;
		running_cost_factor: 48;

    }
}

//PortLinerI_MBTA
spriteset(spriteset_PortLinerI_MBTA_purchase,   "gfx/PortLinerI_MBTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PortLinerI_MBTA_Motor_lead,   "gfx/PortLinerI_MBTA.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_PortLinerI_MBTA_Motor_rear,   "gfx/PortLinerI_MBTA.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_PortLinerI_MBTA_DrivingTrailer_lead,   "gfx/PortLinerI_MBTA.png") {template_Old_8(187, 39)}
spriteset(spriteset_PortLinerI_MBTA_DrivingTrailer_rear,   "gfx/PortLinerI_MBTA.png") {template_Old_8(187, 64)}
spriteset(spriteset_PortLinerI_MBTA_Trailer,   "gfx/PortLinerI_MBTA.png") {template_Old_8(7, 89)}
spriteset(spriteset_PortLinerI_MBTA_NonControlMotor,   "gfx/PortLinerI_MBTA.png") {template_Old_8(187, 89)}
spriteset(spriteset_PortLinerI_MBTA_NonControlMotor_r,   "gfx/PortLinerI_MBTA.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_PortLinerI_MBTA_NonControlMotor_r;
    return spriteset_PortLinerI_MBTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_PortLinerI_MBTA_NonControlMotor;
    return spriteset_PortLinerI_MBTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_MBTA_NonControlMotor_r;
    return spriteset_PortLinerI_MBTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_MBTA_Trailer;
    return spriteset_PortLinerI_MBTA_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_PortLinerI_MBTA_NonControlMotor;
    return spriteset_PortLinerI_MBTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MBTA_pantocheck_at_1_r;
    return sw_PortLinerI_MBTA_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_PortLinerI_MBTA_Trailer;
    return sw_PortLinerI_MBTA_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MBTA_pantocheck_at_2_r;
    return sw_PortLinerI_MBTA_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_PortLinerI_MBTA_Trailer;
    3 : sw_PortLinerI_MBTA_pantocheck_at_1_r;
    4 : sw_PortLinerI_MBTA_sidecheck_4_r;
    5 : sw_PortLinerI_MBTA_pantocheck_at_2_r;
    6 .. 7 : sw_PortLinerI_MBTA_sidecheck_6_r;
    return sw_PortLinerI_MBTA_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_PortLinerI_MBTA_NonControlMotor_r;
    return spriteset_PortLinerI_MBTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_PortLinerI_MBTA_NonControlMotor;
    return spriteset_PortLinerI_MBTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_PortLinerI_MBTA_NonControlMotor_r;
    return spriteset_PortLinerI_MBTA_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_PortLinerI_MBTA_NonControlMotor;
    return spriteset_PortLinerI_MBTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MBTA_pantocheck_at_1;
    return sw_PortLinerI_MBTA_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MBTA_pantocheck_at_1;
    return spriteset_PortLinerI_MBTA_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_PortLinerI_MBTA_pantocheck_at_2;
    return sw_PortLinerI_MBTA_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_PortLinerI_MBTA_Trailer;
    3 : sw_PortLinerI_MBTA_pantocheck_at_1;
    4 : sw_PortLinerI_MBTA_sidecheck_4;
    5 : sw_PortLinerI_MBTA_pantocheck_at_2;
    6 .. 7 : sw_PortLinerI_MBTA_sidecheck_6;
    return sw_PortLinerI_MBTA_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_PortLinerI_MBTA_Motor_lead; //Panto
    return spriteset_PortLinerI_MBTA_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_panto_direction_r, vehicle_is_flipped){
    0 : sw_PortLinerI_MBTA_panto_direction_r_pos;        //Front panto
    return spriteset_PortLinerI_MBTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_PortLinerI_MBTA_panto_direction_r;        //Not flipped, give Panto
    return spriteset_PortLinerI_MBTA_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_frontcheck_r, position_in_vehid_chain){
    0: sw_PortLinerI_MBTA_panto_direction_r; //We need a pantograph, guaranteed
    return sw_PortLinerI_MBTA_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_panto_direction, vehicle_is_flipped){
    0 : spriteset_PortLinerI_MBTA_Motor_lead;        //Front panto
    return spriteset_PortLinerI_MBTA_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_panto_flipcheck, vehicle_is_flipped){
    0 : sw_PortLinerI_MBTA_panto_direction;        //Not flipped, give Panto
    return spriteset_PortLinerI_MBTA_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_PortLinerI_MBTA_frontcheck, position_in_vehid_chain){
    0: sw_PortLinerI_MBTA_panto_direction; //We need a pantograph, guaranteed
    return sw_PortLinerI_MBTA_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_PortLinerI_MBTA_directioncheck, vehicle_is_reversed){
    0: sw_PortLinerI_MBTA_frontcheck; //We are going forwards
    return sw_PortLinerI_MBTA_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_PortLinerI_MBTA_revcheck, vehicle_is_reversed){
    0 : sw_PortLinerI_MBTA_lencheck;
    return sw_PortLinerI_MBTA_lencheck_r;
}

item(FEAT_TRAINS, Item_PortLinerI_MBTA, 12903) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PORTLINERI);
        introduction_date:                date(1992,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            100 mph;
        power:                            1824 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     21;
        running_cost_factor:             194;
        cargo_capacity:                  195/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_PortLinerI_MTA;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PortLinerI_MBTA_directioncheck;
        can_attach_wagon: sw_PortLinerI_attach ;
        purchase: spriteset_PortLinerI_MBTA_purchase;
        additional_text: string(STR_INFO_PORTLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_PortLinerI_MBTA_revcheck ;
        length                      : 8;
        cargo_capacity              : (195/param_capacity_mod) ;
        power                       : 912 ;
		running_cost_factor: 48;

    }
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_attach, vehicle_type_id){
	Item_BombardierRailStar_PHIII    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BombardierRailStar_PHIV    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BombardierRailStar_AmtrakCalifornia    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BombardierRailStar_Cascades    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BombardierRailStar_Midwest    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BombardierRailStar_Via1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BombardierRailStar_Via2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_BombardierRailStar_Via3    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//BombardierRailStar_PHIII
spriteset(spriteset_BombardierRailStar_PHIII_purchase,   "gfx/BombardierRailStar_PHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_PHIII_Motor_lead,   "gfx/BombardierRailStar_PHIII.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_PHIII_Motor_rear,   "gfx/BombardierRailStar_PHIII.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_PHIII_DrivingTrailer_lead,   "gfx/BombardierRailStar_PHIII.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_PHIII_DrivingTrailer_rear,   "gfx/BombardierRailStar_PHIII.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_PHIII_Trailer,   "gfx/BombardierRailStar_PHIII.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_PHIII_NonControlMotor,   "gfx/BombardierRailStar_PHIII.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_PHIII_NonControlMotor_r,   "gfx/BombardierRailStar_PHIII.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_PHIII_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_PHIII_NonControlMotor;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_PHIII_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_PHIII_Trailer;
    return spriteset_BombardierRailStar_PHIII_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_PHIII_NonControlMotor;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIII_pantocheck_at_1_r;
    return sw_BombardierRailStar_PHIII_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_PHIII_Trailer;
    return sw_BombardierRailStar_PHIII_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIII_pantocheck_at_2_r;
    return sw_BombardierRailStar_PHIII_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_PHIII_Trailer;
    3 : sw_BombardierRailStar_PHIII_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_PHIII_sidecheck_4_r;
    5 : sw_BombardierRailStar_PHIII_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_PHIII_sidecheck_6_r;
    return sw_BombardierRailStar_PHIII_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_PHIII_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_PHIII_NonControlMotor;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_PHIII_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_PHIII_NonControlMotor;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIII_pantocheck_at_1;
    return sw_BombardierRailStar_PHIII_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIII_pantocheck_at_1;
    return spriteset_BombardierRailStar_PHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIII_pantocheck_at_2;
    return sw_BombardierRailStar_PHIII_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_PHIII_Trailer;
    3 : sw_BombardierRailStar_PHIII_pantocheck_at_1;
    4 : sw_BombardierRailStar_PHIII_sidecheck_4;
    5 : sw_BombardierRailStar_PHIII_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_PHIII_sidecheck_6;
    return sw_BombardierRailStar_PHIII_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_PHIII_Motor_lead; //Panto
    return spriteset_BombardierRailStar_PHIII_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_PHIII_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_PHIII_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_PHIII_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_PHIII_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_PHIII_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_PHIII_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_PHIII_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_PHIII_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_PHIII_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_PHIII_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIII_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_PHIII_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_PHIII_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_PHIII_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_PHIII_frontcheck; //We are going forwards
    return sw_BombardierRailStar_PHIII_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_PHIII_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_PHIII_lencheck;
    return sw_BombardierRailStar_PHIII_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_PHIII, 14801) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             200;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_PHIII_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_PHIII_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_PHIII_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

//BombardierRailStar_PHIV
spriteset(spriteset_BombardierRailStar_PHIV_purchase,   "gfx/BombardierRailStar_PHIV.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_PHIV_Motor_lead,   "gfx/BombardierRailStar_PHIV.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_PHIV_Motor_rear,   "gfx/BombardierRailStar_PHIV.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_PHIV_DrivingTrailer_lead,   "gfx/BombardierRailStar_PHIV.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_PHIV_DrivingTrailer_rear,   "gfx/BombardierRailStar_PHIV.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_PHIV_Trailer,   "gfx/BombardierRailStar_PHIV.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_PHIV_NonControlMotor,   "gfx/BombardierRailStar_PHIV.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_PHIV_NonControlMotor_r,   "gfx/BombardierRailStar_PHIV.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_PHIV_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_PHIV_NonControlMotor;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_PHIV_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_PHIV_Trailer;
    return spriteset_BombardierRailStar_PHIV_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_PHIV_NonControlMotor;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIV_pantocheck_at_1_r;
    return sw_BombardierRailStar_PHIV_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_PHIV_Trailer;
    return sw_BombardierRailStar_PHIV_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIV_pantocheck_at_2_r;
    return sw_BombardierRailStar_PHIV_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_PHIV_Trailer;
    3 : sw_BombardierRailStar_PHIV_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_PHIV_sidecheck_4_r;
    5 : sw_BombardierRailStar_PHIV_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_PHIV_sidecheck_6_r;
    return sw_BombardierRailStar_PHIV_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_PHIV_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_PHIV_NonControlMotor;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_PHIV_NonControlMotor_r;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_PHIV_NonControlMotor;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIV_pantocheck_at_1;
    return sw_BombardierRailStar_PHIV_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIV_pantocheck_at_1;
    return spriteset_BombardierRailStar_PHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_PHIV_pantocheck_at_2;
    return sw_BombardierRailStar_PHIV_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_PHIV_Trailer;
    3 : sw_BombardierRailStar_PHIV_pantocheck_at_1;
    4 : sw_BombardierRailStar_PHIV_sidecheck_4;
    5 : sw_BombardierRailStar_PHIV_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_PHIV_sidecheck_6;
    return sw_BombardierRailStar_PHIV_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_PHIV_Motor_lead; //Panto
    return spriteset_BombardierRailStar_PHIV_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_PHIV_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_PHIV_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_PHIV_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_PHIV_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_PHIV_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_PHIV_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_PHIV_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_PHIV_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_PHIV_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_PHIV_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_PHIV_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_PHIV_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_PHIV_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_PHIV_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_PHIV_frontcheck; //We are going forwards
    return sw_BombardierRailStar_PHIV_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_PHIV_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_PHIV_lencheck;
    return sw_BombardierRailStar_PHIV_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_PHIV, 14802) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             200;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_PHIV_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_PHIV_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_PHIV_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

//BombardierRailStar_AmtrakCalifornia
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_purchase,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_Motor_lead,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_Motor_rear,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_DrivingTrailer_lead,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_DrivingTrailer_rear,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_Trailer,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor_r,   "gfx/BombardierRailStar_AmtrakCalifornia.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor_r;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor_r;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
    return spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1_r;
    return sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
    return sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2_r;
    return sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
    3 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_AmtrakCalifornia_sidecheck_4_r;
    5 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_AmtrakCalifornia_sidecheck_6_r;
    return sw_BombardierRailStar_AmtrakCalifornia_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor_r;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor_r;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_AmtrakCalifornia_NonControlMotor;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1;
    return sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1;
    return spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2;
    return sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_AmtrakCalifornia_Trailer;
    3 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_1;
    4 : sw_BombardierRailStar_AmtrakCalifornia_sidecheck_4;
    5 : sw_BombardierRailStar_AmtrakCalifornia_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_AmtrakCalifornia_sidecheck_6;
    return sw_BombardierRailStar_AmtrakCalifornia_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_AmtrakCalifornia_Motor_lead; //Panto
    return spriteset_BombardierRailStar_AmtrakCalifornia_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_AmtrakCalifornia_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_AmtrakCalifornia_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_AmtrakCalifornia_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_AmtrakCalifornia_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_AmtrakCalifornia_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_AmtrakCalifornia_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_AmtrakCalifornia_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_AmtrakCalifornia_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_AmtrakCalifornia_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_AmtrakCalifornia_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_AmtrakCalifornia_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_AmtrakCalifornia_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_AmtrakCalifornia_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_AmtrakCalifornia_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_AmtrakCalifornia_frontcheck; //We are going forwards
    return sw_BombardierRailStar_AmtrakCalifornia_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_AmtrakCalifornia_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_AmtrakCalifornia_lencheck;
    return sw_BombardierRailStar_AmtrakCalifornia_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_AmtrakCalifornia, 14803) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             200;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_AmtrakCalifornia_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_AmtrakCalifornia_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_AmtrakCalifornia_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

//BombardierRailStar_Cascades
spriteset(spriteset_BombardierRailStar_Cascades_purchase,   "gfx/BombardierRailStar_Cascades.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_Cascades_Motor_lead,   "gfx/BombardierRailStar_Cascades.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_Cascades_Motor_rear,   "gfx/BombardierRailStar_Cascades.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_Cascades_DrivingTrailer_lead,   "gfx/BombardierRailStar_Cascades.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_Cascades_DrivingTrailer_rear,   "gfx/BombardierRailStar_Cascades.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_Cascades_Trailer,   "gfx/BombardierRailStar_Cascades.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_Cascades_NonControlMotor,   "gfx/BombardierRailStar_Cascades.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_Cascades_NonControlMotor_r,   "gfx/BombardierRailStar_Cascades.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Cascades_NonControlMotor_r;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Cascades_NonControlMotor;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Cascades_NonControlMotor_r;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Cascades_Trailer;
    return spriteset_BombardierRailStar_Cascades_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Cascades_NonControlMotor;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Cascades_pantocheck_at_1_r;
    return sw_BombardierRailStar_Cascades_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_Cascades_Trailer;
    return sw_BombardierRailStar_Cascades_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Cascades_pantocheck_at_2_r;
    return sw_BombardierRailStar_Cascades_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Cascades_Trailer;
    3 : sw_BombardierRailStar_Cascades_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_Cascades_sidecheck_4_r;
    5 : sw_BombardierRailStar_Cascades_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_Cascades_sidecheck_6_r;
    return sw_BombardierRailStar_Cascades_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Cascades_NonControlMotor_r;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Cascades_NonControlMotor;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Cascades_NonControlMotor_r;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Cascades_NonControlMotor;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Cascades_pantocheck_at_1;
    return sw_BombardierRailStar_Cascades_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Cascades_pantocheck_at_1;
    return spriteset_BombardierRailStar_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Cascades_pantocheck_at_2;
    return sw_BombardierRailStar_Cascades_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Cascades_Trailer;
    3 : sw_BombardierRailStar_Cascades_pantocheck_at_1;
    4 : sw_BombardierRailStar_Cascades_sidecheck_4;
    5 : sw_BombardierRailStar_Cascades_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_Cascades_sidecheck_6;
    return sw_BombardierRailStar_Cascades_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_Cascades_Motor_lead; //Panto
    return spriteset_BombardierRailStar_Cascades_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Cascades_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_Cascades_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Cascades_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Cascades_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_Cascades_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Cascades_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_Cascades_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_Cascades_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Cascades_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Cascades_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Cascades_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_Cascades_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Cascades_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Cascades_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_Cascades_frontcheck; //We are going forwards
    return sw_BombardierRailStar_Cascades_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Cascades_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_Cascades_lencheck;
    return sw_BombardierRailStar_Cascades_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_Cascades, 14804) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             200;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_Cascades_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_Cascades_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_Cascades_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

//BombardierRailStar_Midwest
spriteset(spriteset_BombardierRailStar_Midwest_purchase,   "gfx/BombardierRailStar_Midwest.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_Midwest_Motor_lead,   "gfx/BombardierRailStar_Midwest.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_Midwest_Motor_rear,   "gfx/BombardierRailStar_Midwest.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_Midwest_DrivingTrailer_lead,   "gfx/BombardierRailStar_Midwest.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_Midwest_DrivingTrailer_rear,   "gfx/BombardierRailStar_Midwest.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_Midwest_Trailer,   "gfx/BombardierRailStar_Midwest.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_Midwest_NonControlMotor,   "gfx/BombardierRailStar_Midwest.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_Midwest_NonControlMotor_r,   "gfx/BombardierRailStar_Midwest.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Midwest_NonControlMotor_r;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Midwest_NonControlMotor;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Midwest_NonControlMotor_r;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Midwest_Trailer;
    return spriteset_BombardierRailStar_Midwest_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Midwest_NonControlMotor;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Midwest_pantocheck_at_1_r;
    return sw_BombardierRailStar_Midwest_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_Midwest_Trailer;
    return sw_BombardierRailStar_Midwest_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Midwest_pantocheck_at_2_r;
    return sw_BombardierRailStar_Midwest_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Midwest_Trailer;
    3 : sw_BombardierRailStar_Midwest_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_Midwest_sidecheck_4_r;
    5 : sw_BombardierRailStar_Midwest_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_Midwest_sidecheck_6_r;
    return sw_BombardierRailStar_Midwest_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Midwest_NonControlMotor_r;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Midwest_NonControlMotor;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Midwest_NonControlMotor_r;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Midwest_NonControlMotor;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Midwest_pantocheck_at_1;
    return sw_BombardierRailStar_Midwest_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Midwest_pantocheck_at_1;
    return spriteset_BombardierRailStar_Midwest_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Midwest_pantocheck_at_2;
    return sw_BombardierRailStar_Midwest_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Midwest_Trailer;
    3 : sw_BombardierRailStar_Midwest_pantocheck_at_1;
    4 : sw_BombardierRailStar_Midwest_sidecheck_4;
    5 : sw_BombardierRailStar_Midwest_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_Midwest_sidecheck_6;
    return sw_BombardierRailStar_Midwest_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_Midwest_Motor_lead; //Panto
    return spriteset_BombardierRailStar_Midwest_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Midwest_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_Midwest_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Midwest_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Midwest_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_Midwest_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Midwest_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_Midwest_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_Midwest_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Midwest_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Midwest_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Midwest_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_Midwest_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Midwest_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Midwest_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_Midwest_frontcheck; //We are going forwards
    return sw_BombardierRailStar_Midwest_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Midwest_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_Midwest_lencheck;
    return sw_BombardierRailStar_Midwest_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_Midwest, 14805) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             200;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_Midwest_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_Midwest_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_Midwest_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

//BombardierRailStar_Via1
spriteset(spriteset_BombardierRailStar_Via1_purchase,   "gfx/BombardierRailStar_Via1.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_Via1_Motor_lead,   "gfx/BombardierRailStar_Via1.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_Via1_Motor_rear,   "gfx/BombardierRailStar_Via1.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_Via1_DrivingTrailer_lead,   "gfx/BombardierRailStar_Via1.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_Via1_DrivingTrailer_rear,   "gfx/BombardierRailStar_Via1.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_Via1_Trailer,   "gfx/BombardierRailStar_Via1.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_Via1_NonControlMotor,   "gfx/BombardierRailStar_Via1.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_Via1_NonControlMotor_r,   "gfx/BombardierRailStar_Via1.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Via1_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Via1_NonControlMotor;
    return spriteset_BombardierRailStar_Via1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via1_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via1_Trailer;
    return spriteset_BombardierRailStar_Via1_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Via1_NonControlMotor;
    return spriteset_BombardierRailStar_Via1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via1_pantocheck_at_1_r;
    return sw_BombardierRailStar_Via1_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_Via1_Trailer;
    return sw_BombardierRailStar_Via1_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via1_pantocheck_at_2_r;
    return sw_BombardierRailStar_Via1_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Via1_Trailer;
    3 : sw_BombardierRailStar_Via1_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_Via1_sidecheck_4_r;
    5 : sw_BombardierRailStar_Via1_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_Via1_sidecheck_6_r;
    return sw_BombardierRailStar_Via1_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Via1_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Via1_NonControlMotor;
    return spriteset_BombardierRailStar_Via1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via1_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Via1_NonControlMotor;
    return spriteset_BombardierRailStar_Via1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via1_pantocheck_at_1;
    return sw_BombardierRailStar_Via1_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via1_pantocheck_at_1;
    return spriteset_BombardierRailStar_Via1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via1_pantocheck_at_2;
    return sw_BombardierRailStar_Via1_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Via1_Trailer;
    3 : sw_BombardierRailStar_Via1_pantocheck_at_1;
    4 : sw_BombardierRailStar_Via1_sidecheck_4;
    5 : sw_BombardierRailStar_Via1_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_Via1_sidecheck_6;
    return sw_BombardierRailStar_Via1_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_Via1_Motor_lead; //Panto
    return spriteset_BombardierRailStar_Via1_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via1_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_Via1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via1_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Via1_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_Via1_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Via1_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_Via1_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_Via1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via1_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Via1_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via1_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_Via1_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Via1_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Via1_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_Via1_frontcheck; //We are going forwards
    return sw_BombardierRailStar_Via1_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Via1_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_Via1_lencheck;
    return sw_BombardierRailStar_Via1_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_Via1, 14806) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             100;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_Via1_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_Via1_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_Via1_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

//BombardierRailStar_Via2
spriteset(spriteset_BombardierRailStar_Via2_purchase,   "gfx/BombardierRailStar_Via2.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_Via2_Motor_lead,   "gfx/BombardierRailStar_Via2.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_Via2_Motor_rear,   "gfx/BombardierRailStar_Via2.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_Via2_DrivingTrailer_lead,   "gfx/BombardierRailStar_Via2.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_Via2_DrivingTrailer_rear,   "gfx/BombardierRailStar_Via2.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_Via2_Trailer,   "gfx/BombardierRailStar_Via2.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_Via2_NonControlMotor,   "gfx/BombardierRailStar_Via2.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_Via2_NonControlMotor_r,   "gfx/BombardierRailStar_Via2.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Via2_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Via2_NonControlMotor;
    return spriteset_BombardierRailStar_Via2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via2_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via2_Trailer;
    return spriteset_BombardierRailStar_Via2_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Via2_NonControlMotor;
    return spriteset_BombardierRailStar_Via2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via2_pantocheck_at_1_r;
    return sw_BombardierRailStar_Via2_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_Via2_Trailer;
    return sw_BombardierRailStar_Via2_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via2_pantocheck_at_2_r;
    return sw_BombardierRailStar_Via2_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Via2_Trailer;
    3 : sw_BombardierRailStar_Via2_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_Via2_sidecheck_4_r;
    5 : sw_BombardierRailStar_Via2_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_Via2_sidecheck_6_r;
    return sw_BombardierRailStar_Via2_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Via2_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Via2_NonControlMotor;
    return spriteset_BombardierRailStar_Via2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via2_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via2_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Via2_NonControlMotor;
    return spriteset_BombardierRailStar_Via2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via2_pantocheck_at_1;
    return sw_BombardierRailStar_Via2_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via2_pantocheck_at_1;
    return spriteset_BombardierRailStar_Via2_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via2_pantocheck_at_2;
    return sw_BombardierRailStar_Via2_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Via2_Trailer;
    3 : sw_BombardierRailStar_Via2_pantocheck_at_1;
    4 : sw_BombardierRailStar_Via2_sidecheck_4;
    5 : sw_BombardierRailStar_Via2_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_Via2_sidecheck_6;
    return sw_BombardierRailStar_Via2_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_Via2_Motor_lead; //Panto
    return spriteset_BombardierRailStar_Via2_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via2_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_Via2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via2_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Via2_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_Via2_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Via2_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_Via2_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_Via2_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via2_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Via2_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via2_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_Via2_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Via2_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Via2_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_Via2_frontcheck; //We are going forwards
    return sw_BombardierRailStar_Via2_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Via2_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_Via2_lencheck;
    return sw_BombardierRailStar_Via2_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_Via2, 14807) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             100;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_Via2_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_Via2_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_Via2_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

//BombardierRailStar_Via3
spriteset(spriteset_BombardierRailStar_Via3_purchase,   "gfx/BombardierRailStar_Via3.png") {template_purchase(7, 21)}
spriteset(spriteset_BombardierRailStar_Via3_Motor_lead,   "gfx/BombardierRailStar_Via3.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_BombardierRailStar_Via3_Motor_rear,   "gfx/BombardierRailStar_Via3.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_BombardierRailStar_Via3_DrivingTrailer_lead,   "gfx/BombardierRailStar_Via3.png") {template_Old_8(187, 39)}
spriteset(spriteset_BombardierRailStar_Via3_DrivingTrailer_rear,   "gfx/BombardierRailStar_Via3.png") {template_Old_8(187, 64)}
spriteset(spriteset_BombardierRailStar_Via3_Trailer,   "gfx/BombardierRailStar_Via3.png") {template_Old_8(7, 89)}
spriteset(spriteset_BombardierRailStar_Via3_NonControlMotor,   "gfx/BombardierRailStar_Via3.png") {template_Old_8(187, 89)}
spriteset(spriteset_BombardierRailStar_Via3_NonControlMotor_r,   "gfx/BombardierRailStar_Via3.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Via3_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Via3_NonControlMotor;
    return spriteset_BombardierRailStar_Via3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via3_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via3_Trailer;
    return spriteset_BombardierRailStar_Via3_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Via3_NonControlMotor;
    return spriteset_BombardierRailStar_Via3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via3_pantocheck_at_1_r;
    return sw_BombardierRailStar_Via3_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_BombardierRailStar_Via3_Trailer;
    return sw_BombardierRailStar_Via3_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via3_pantocheck_at_2_r;
    return sw_BombardierRailStar_Via3_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Via3_Trailer;
    3 : sw_BombardierRailStar_Via3_pantocheck_at_1_r;
    4 : sw_BombardierRailStar_Via3_sidecheck_4_r;
    5 : sw_BombardierRailStar_Via3_pantocheck_at_2_r;
    6 .. 7 : sw_BombardierRailStar_Via3_sidecheck_6_r;
    return sw_BombardierRailStar_Via3_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_BombardierRailStar_Via3_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_BombardierRailStar_Via3_NonControlMotor;
    return spriteset_BombardierRailStar_Via3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_BombardierRailStar_Via3_NonControlMotor_r;
    return spriteset_BombardierRailStar_Via3_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_BombardierRailStar_Via3_NonControlMotor;
    return spriteset_BombardierRailStar_Via3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via3_pantocheck_at_1;
    return sw_BombardierRailStar_Via3_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via3_pantocheck_at_1;
    return spriteset_BombardierRailStar_Via3_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_BombardierRailStar_Via3_pantocheck_at_2;
    return sw_BombardierRailStar_Via3_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_BombardierRailStar_Via3_Trailer;
    3 : sw_BombardierRailStar_Via3_pantocheck_at_1;
    4 : sw_BombardierRailStar_Via3_sidecheck_4;
    5 : sw_BombardierRailStar_Via3_pantocheck_at_2;
    6 .. 7 : sw_BombardierRailStar_Via3_sidecheck_6;
    return sw_BombardierRailStar_Via3_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_BombardierRailStar_Via3_Motor_lead; //Panto
    return spriteset_BombardierRailStar_Via3_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_panto_direction_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via3_panto_direction_r_pos;        //Front panto
    return spriteset_BombardierRailStar_Via3_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via3_panto_direction_r;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Via3_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_frontcheck_r, position_in_vehid_chain){
    0: sw_BombardierRailStar_Via3_panto_direction_r; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Via3_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_panto_direction, vehicle_is_flipped){
    0 : spriteset_BombardierRailStar_Via3_Motor_lead;        //Front panto
    return spriteset_BombardierRailStar_Via3_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_panto_flipcheck, vehicle_is_flipped){
    0 : sw_BombardierRailStar_Via3_panto_direction;        //Not flipped, give Panto
    return spriteset_BombardierRailStar_Via3_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_BombardierRailStar_Via3_frontcheck, position_in_vehid_chain){
    0: sw_BombardierRailStar_Via3_panto_direction; //We need a pantograph, guaranteed
    return sw_BombardierRailStar_Via3_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Via3_directioncheck, vehicle_is_reversed){
    0: sw_BombardierRailStar_Via3_frontcheck; //We are going forwards
    return sw_BombardierRailStar_Via3_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_BombardierRailStar_Via3_revcheck, vehicle_is_reversed){
    0 : sw_BombardierRailStar_Via3_lencheck;
    return sw_BombardierRailStar_Via3_lencheck_r;
}

item(FEAT_TRAINS, Item_BombardierRailStar_Via3, 14808) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BOMBARDIERRAILSTAR);
        introduction_date:                date(1986,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        42 ton;
        speed:                            125 mph;
        power:                            1400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     20;
        running_cost_factor:             100;
        cargo_capacity:                  87/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_BombardierRailStar_PHIII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_BombardierRailStar_Via3_directioncheck;
        can_attach_wagon: sw_BombardierRailStar_attach ;
        purchase: spriteset_BombardierRailStar_Via3_purchase;
        additional_text: string(STR_INFO_BOMBARDIERRAILSTAR);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_BombardierRailStar_Via3_revcheck ;
        length                      : 8;
        cargo_capacity              : (87/param_capacity_mod) ;
        power                       : 700 ;
		running_cost_factor: 50;

    }
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_attach, vehicle_type_id){
    Item_SuperlinerEMU_Phase1    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//SuperlinerEMU_Phase1
//CC1
spriteset(spriteset_SuperlinerEMU_Phase1_purchase,   "gfx/SuperlinerEMU_Phase1.png") {template_purchase(7, 21)}
spriteset(spriteset_SuperlinerEMU_Phase1_Motor_lead,   "gfx/SuperlinerEMU_Phase1.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_SuperlinerEMU_Phase1_Motor_rear,   "gfx/SuperlinerEMU_Phase1.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_SuperlinerEMU_Phase1_DrivingTrailer_lead,   "gfx/SuperlinerEMU_Phase1.png") {template_Old_8(187, 39)}
spriteset(spriteset_SuperlinerEMU_Phase1_DrivingTrailer_rear,   "gfx/SuperlinerEMU_Phase1.png") {template_Old_8(187, 64)}
spriteset(spriteset_SuperlinerEMU_Phase1_Trailer,   "gfx/SuperlinerEMU_Phase1.png") {template_Old_8(7, 89)}
spriteset(spriteset_SuperlinerEMU_Phase1_NonControlMotor,   "gfx/SuperlinerEMU_Phase1.png") {template_Old_8(187, 89)}
spriteset(spriteset_SuperlinerEMU_Phase1_NonControlMotor_r,   "gfx/SuperlinerEMU_Phase1.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_SuperlinerEMU_Phase1_NonControlMotor_r;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SuperlinerEMU_Phase1_NonControlMotor;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_SuperlinerEMU_Phase1_NonControlMotor_r;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_SuperlinerEMU_Phase1_Trailer;
    return spriteset_SuperlinerEMU_Phase1_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SuperlinerEMU_Phase1_NonControlMotor;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SuperlinerEMU_Phase1_pantocheck_at_1_r;
    return sw_SuperlinerEMU_Phase1_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_SuperlinerEMU_Phase1_Trailer;
    return sw_SuperlinerEMU_Phase1_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SuperlinerEMU_Phase1_pantocheck_at_2_r;
    return sw_SuperlinerEMU_Phase1_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SuperlinerEMU_Phase1_Trailer;
    3 : sw_SuperlinerEMU_Phase1_pantocheck_at_1_r;
    4 : sw_SuperlinerEMU_Phase1_sidecheck_4_r;
    5 : sw_SuperlinerEMU_Phase1_pantocheck_at_2_r;
    6 .. 7 : sw_SuperlinerEMU_Phase1_sidecheck_6_r;
    return sw_SuperlinerEMU_Phase1_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_SuperlinerEMU_Phase1_NonControlMotor_r;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_SuperlinerEMU_Phase1_NonControlMotor;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_SuperlinerEMU_Phase1_NonControlMotor_r;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_SuperlinerEMU_Phase1_NonControlMotor;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SuperlinerEMU_Phase1_pantocheck_at_1;
    return sw_SuperlinerEMU_Phase1_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SuperlinerEMU_Phase1_pantocheck_at_1;
    return spriteset_SuperlinerEMU_Phase1_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_SuperlinerEMU_Phase1_pantocheck_at_2;
    return sw_SuperlinerEMU_Phase1_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_SuperlinerEMU_Phase1_Trailer;
    3 : sw_SuperlinerEMU_Phase1_pantocheck_at_1;
    4 : sw_SuperlinerEMU_Phase1_sidecheck_4;
    5 : sw_SuperlinerEMU_Phase1_pantocheck_at_2;
    6 .. 7 : sw_SuperlinerEMU_Phase1_sidecheck_6;
    return sw_SuperlinerEMU_Phase1_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_SuperlinerEMU_Phase1_Motor_lead; //Panto
    return spriteset_SuperlinerEMU_Phase1_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_panto_direction_r, vehicle_is_flipped){
    0 : sw_SuperlinerEMU_Phase1_panto_direction_r_pos;        //Front panto
    return spriteset_SuperlinerEMU_Phase1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_SuperlinerEMU_Phase1_panto_direction_r;        //Not flipped, give Panto
    return spriteset_SuperlinerEMU_Phase1_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_frontcheck_r, position_in_vehid_chain){
    0: sw_SuperlinerEMU_Phase1_panto_direction_r; //We need a pantograph, guaranteed
    return sw_SuperlinerEMU_Phase1_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_panto_direction, vehicle_is_flipped){
    0 : spriteset_SuperlinerEMU_Phase1_Motor_lead;        //Front panto
    return spriteset_SuperlinerEMU_Phase1_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_panto_flipcheck, vehicle_is_flipped){
    0 : sw_SuperlinerEMU_Phase1_panto_direction;        //Not flipped, give Panto
    return spriteset_SuperlinerEMU_Phase1_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_SuperlinerEMU_Phase1_frontcheck, position_in_vehid_chain){
    0: sw_SuperlinerEMU_Phase1_panto_direction; //We need a pantograph, guaranteed
    return sw_SuperlinerEMU_Phase1_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_SuperlinerEMU_Phase1_directioncheck, vehicle_is_reversed){
    0: sw_SuperlinerEMU_Phase1_frontcheck; //We are going forwards
    return sw_SuperlinerEMU_Phase1_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_SuperlinerEMU_Phase1_revcheck, vehicle_is_reversed){
    0 : sw_SuperlinerEMU_Phase1_lencheck;
    return sw_SuperlinerEMU_Phase1_lencheck_r;
}

item(FEAT_TRAINS, Item_SuperlinerEMU_Phase1, 16801) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_SUPERLINEREMU);
        introduction_date:                date(1980,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        74 ton;
        speed:                            100 mph;
        power:                            2000 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     25;
        running_cost_factor:             240;
        cargo_capacity:                  90/param_capacity_mod;
        loading_speed: 15;

        variant_group: Item_SuperlinerEMU_Phase1;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_SuperlinerEMU_Phase1_directioncheck;
        can_attach_wagon: sw_SuperlinerEMU_attach ;
        purchase: spriteset_SuperlinerEMU_Phase1_purchase;
        additional_text: string(STR_INFO_SUPERLINEREMU);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_SuperlinerEMU_Phase1_revcheck ;
        length                      : 8;
        cargo_capacity              : (90/param_capacity_mod) ;
        power                       : 1000 ;
		running_cost_factor: 60;

    }
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_attach, vehicle_type_id){
	Item_Budd_MetrolinerI_PRR    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_AmtrakPHI    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_AmtrakPHII    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_AmtrakPHIII    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_AmtrakPHIV    : return CB_RESULT_ATTACH_ALLOW  ;
//	Item_Budd_MetrolinerI_Via    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_Shinkansen    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_ICE    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_CN    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_NH    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_MetrolinerI_Cascades    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_MetrolinerI_PRR
spriteset(spriteset_Budd_MetrolinerI_PRR_purchase,   "gfx/Budd_MetrolinerI_PRR.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_PRR_Motor_lead,   "gfx/Budd_MetrolinerI_PRR.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_PRR_Motor_rear,   "gfx/Budd_MetrolinerI_PRR.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_PRR_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_PRR.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_PRR_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_PRR.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_PRR_Trailer,   "gfx/Budd_MetrolinerI_PRR.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_PRR_NonControlMotor,   "gfx/Budd_MetrolinerI_PRR.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_PRR_NonControlMotor_r,   "gfx/Budd_MetrolinerI_PRR.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_PRR_Trailer;
    return spriteset_Budd_MetrolinerI_PRR_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_PRR_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_PRR_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_PRR_Trailer;
    return sw_Budd_MetrolinerI_PRR_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_PRR_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_PRR_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_PRR_Trailer;
    3 : sw_Budd_MetrolinerI_PRR_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_PRR_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_PRR_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_PRR_sidecheck_6_r;
    return sw_Budd_MetrolinerI_PRR_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_PRR_NonControlMotor;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_PRR_pantocheck_at_1;
    return sw_Budd_MetrolinerI_PRR_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_PRR_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_PRR_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_PRR_pantocheck_at_2;
    return sw_Budd_MetrolinerI_PRR_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_PRR_Trailer;
    3 : sw_Budd_MetrolinerI_PRR_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_PRR_sidecheck_4;
    5 : sw_Budd_MetrolinerI_PRR_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_PRR_sidecheck_6;
    return sw_Budd_MetrolinerI_PRR_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_PRR_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_PRR_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_PRR_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_PRR_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_PRR_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_PRR_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_PRR_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_PRR_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_PRR_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_PRR_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_PRR_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_PRR_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_PRR_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_PRR_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_PRR_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_PRR_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_PRR_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_PRR_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_PRR_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_PRR_lencheck;
    return sw_Budd_MetrolinerI_PRR_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_PRR, 18676) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_PRR_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_PRR_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_PRR_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_AmtrakPHI
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_purchase,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_Motor_lead,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_Motor_rear,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor_r,   "gfx/Budd_MetrolinerI_AmtrakPHI.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
    return sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_6_r;
    return sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHI_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1;
    return sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2;
    return sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHI_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_4;
    5 : sw_Budd_MetrolinerI_AmtrakPHI_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_6;
    return sw_Budd_MetrolinerI_AmtrakPHI_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_AmtrakPHI_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHI_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHI_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHI_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHI_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHI_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_AmtrakPHI_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHI_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHI_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHI_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHI_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHI_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHI_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHI_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_AmtrakPHI_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_AmtrakPHI_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHI_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_AmtrakPHI_lencheck;
    return sw_Budd_MetrolinerI_AmtrakPHI_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_AmtrakPHI, 18677) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_AmtrakPHI_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_AmtrakPHI_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_AmtrakPHI_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_AmtrakPHII
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_purchase,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_Motor_lead,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_Motor_rear,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor_r,   "gfx/Budd_MetrolinerI_AmtrakPHII.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
    return sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_6_r;
    return sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1;
    return sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2;
    return sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHII_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_4;
    5 : sw_Budd_MetrolinerI_AmtrakPHII_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_6;
    return sw_Budd_MetrolinerI_AmtrakPHII_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_AmtrakPHII_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHII_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHII_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHII_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHII_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHII_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_AmtrakPHII_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHII_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHII_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHII_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHII_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHII_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHII_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHII_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_AmtrakPHII_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_AmtrakPHII_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHII_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_AmtrakPHII_lencheck;
    return sw_Budd_MetrolinerI_AmtrakPHII_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_AmtrakPHII, 18678) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_AmtrakPHII_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_AmtrakPHII_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_AmtrakPHII_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_AmtrakPHIII
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_purchase,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_Motor_lead,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_Motor_rear,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor_r,   "gfx/Budd_MetrolinerI_AmtrakPHIII.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
    return sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_6_r;
    return sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIII_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1;
    return sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2;
    return sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHIII_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_4;
    5 : sw_Budd_MetrolinerI_AmtrakPHIII_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_6;
    return sw_Budd_MetrolinerI_AmtrakPHIII_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_AmtrakPHIII_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHIII_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_AmtrakPHIII_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIII_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIII_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHIII_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHIII_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHIII_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_AmtrakPHIII_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_AmtrakPHIII_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHIII_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_AmtrakPHIII_lencheck;
    return sw_Budd_MetrolinerI_AmtrakPHIII_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_AmtrakPHIII, 18679) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_AmtrakPHIII_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_AmtrakPHIII_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_AmtrakPHIII_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_AmtrakPHIV
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_purchase,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_Motor_lead,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_Motor_rear,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor_r,   "gfx/Budd_MetrolinerI_AmtrakPHIV.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
    return sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_6_r;
    return sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_AmtrakPHIV_NonControlMotor;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1;
    return sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2;
    return sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_AmtrakPHIV_Trailer;
    3 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_4;
    5 : sw_Budd_MetrolinerI_AmtrakPHIV_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_6;
    return sw_Budd_MetrolinerI_AmtrakPHIV_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_AmtrakPHIV_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHIV_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_AmtrakPHIV_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_AmtrakPHIV_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_AmtrakPHIV_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_AmtrakPHIV_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_AmtrakPHIV_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHIV_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_AmtrakPHIV_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_AmtrakPHIV_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_AmtrakPHIV_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_AmtrakPHIV_lencheck;
    return sw_Budd_MetrolinerI_AmtrakPHIV_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_AmtrakPHIV, 18680) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_AmtrakPHIV_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_AmtrakPHIV_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_AmtrakPHIV_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_Shinkansen
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_purchase,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_Motor_lead,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_Motor_rear,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_Trailer,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor_r,   "gfx/Budd_MetrolinerI_Shinkansen.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
    return spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
    return sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
    3 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_Shinkansen_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_Shinkansen_sidecheck_6_r;
    return sw_Budd_MetrolinerI_Shinkansen_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_Shinkansen_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1;
    return sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2;
    return sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_Shinkansen_Trailer;
    3 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_Shinkansen_sidecheck_4;
    5 : sw_Budd_MetrolinerI_Shinkansen_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_Shinkansen_sidecheck_6;
    return sw_Budd_MetrolinerI_Shinkansen_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_Shinkansen_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_Shinkansen_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_Shinkansen_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_Shinkansen_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_Shinkansen_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_Shinkansen_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_Shinkansen_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_Shinkansen_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_Shinkansen_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_Shinkansen_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_Shinkansen_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_Shinkansen_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Shinkansen_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_Shinkansen_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_Shinkansen_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_Shinkansen_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_Shinkansen_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_Shinkansen_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_Shinkansen_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_Shinkansen_lencheck;
    return sw_Budd_MetrolinerI_Shinkansen_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_Shinkansen, 18682) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_Shinkansen_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_Shinkansen_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_Shinkansen_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_ICE
spriteset(spriteset_Budd_MetrolinerI_ICE_purchase,   "gfx/Budd_MetrolinerI_ICE.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_ICE_Motor_lead,   "gfx/Budd_MetrolinerI_ICE.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_ICE_Motor_rear,   "gfx/Budd_MetrolinerI_ICE.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_ICE_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_ICE.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_ICE_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_ICE.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_ICE_Trailer,   "gfx/Budd_MetrolinerI_ICE.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_ICE_NonControlMotor,   "gfx/Budd_MetrolinerI_ICE.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_ICE_NonControlMotor_r,   "gfx/Budd_MetrolinerI_ICE.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_ICE_Trailer;
    return spriteset_Budd_MetrolinerI_ICE_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_ICE_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_ICE_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_ICE_Trailer;
    return sw_Budd_MetrolinerI_ICE_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_ICE_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_ICE_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_ICE_Trailer;
    3 : sw_Budd_MetrolinerI_ICE_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_ICE_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_ICE_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_ICE_sidecheck_6_r;
    return sw_Budd_MetrolinerI_ICE_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_ICE_NonControlMotor;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_ICE_pantocheck_at_1;
    return sw_Budd_MetrolinerI_ICE_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_ICE_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_ICE_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_ICE_pantocheck_at_2;
    return sw_Budd_MetrolinerI_ICE_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_ICE_Trailer;
    3 : sw_Budd_MetrolinerI_ICE_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_ICE_sidecheck_4;
    5 : sw_Budd_MetrolinerI_ICE_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_ICE_sidecheck_6;
    return sw_Budd_MetrolinerI_ICE_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_ICE_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_ICE_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_ICE_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_ICE_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_ICE_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_ICE_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_ICE_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_ICE_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_ICE_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_ICE_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_ICE_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_ICE_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_ICE_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_ICE_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_ICE_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_ICE_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_ICE_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_ICE_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_ICE_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_ICE_lencheck;
    return sw_Budd_MetrolinerI_ICE_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_ICE, 18683) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_ICE_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_ICE_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_ICE_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_CN
spriteset(spriteset_Budd_MetrolinerI_CN_purchase,   "gfx/Budd_MetrolinerI_CN.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_CN_Motor_lead,   "gfx/Budd_MetrolinerI_CN.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_CN_Motor_rear,   "gfx/Budd_MetrolinerI_CN.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_CN_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_CN.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_CN_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_CN.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_CN_Trailer,   "gfx/Budd_MetrolinerI_CN.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_CN_NonControlMotor,   "gfx/Budd_MetrolinerI_CN.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_CN_NonControlMotor_r,   "gfx/Budd_MetrolinerI_CN.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_CN_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_CN_NonControlMotor;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_CN_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_CN_Trailer;
    return spriteset_Budd_MetrolinerI_CN_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_CN_NonControlMotor;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_CN_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_CN_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_CN_Trailer;
    return sw_Budd_MetrolinerI_CN_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_CN_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_CN_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_CN_Trailer;
    3 : sw_Budd_MetrolinerI_CN_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_CN_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_CN_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_CN_sidecheck_6_r;
    return sw_Budd_MetrolinerI_CN_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_CN_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_CN_NonControlMotor;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_CN_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_CN_NonControlMotor;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_CN_pantocheck_at_1;
    return sw_Budd_MetrolinerI_CN_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_CN_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_CN_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_CN_pantocheck_at_2;
    return sw_Budd_MetrolinerI_CN_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_CN_Trailer;
    3 : sw_Budd_MetrolinerI_CN_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_CN_sidecheck_4;
    5 : sw_Budd_MetrolinerI_CN_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_CN_sidecheck_6;
    return sw_Budd_MetrolinerI_CN_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_CN_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_CN_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_CN_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_CN_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_CN_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_CN_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_CN_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_CN_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_CN_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_CN_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_CN_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_CN_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_CN_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_CN_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_CN_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_CN_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_CN_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_CN_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_CN_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_CN_lencheck;
    return sw_Budd_MetrolinerI_CN_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_CN, 18684) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_CN_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_CN_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_CN_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_NH
spriteset(spriteset_Budd_MetrolinerI_NH_purchase,   "gfx/Budd_MetrolinerI_NH.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_NH_Motor_lead,   "gfx/Budd_MetrolinerI_NH.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_NH_Motor_rear,   "gfx/Budd_MetrolinerI_NH.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_NH_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_NH.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_NH_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_NH.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_NH_Trailer,   "gfx/Budd_MetrolinerI_NH.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_NH_NonControlMotor,   "gfx/Budd_MetrolinerI_NH.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_NH_NonControlMotor_r,   "gfx/Budd_MetrolinerI_NH.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_NH_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_NH_NonControlMotor;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_NH_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_NH_Trailer;
    return spriteset_Budd_MetrolinerI_NH_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_NH_NonControlMotor;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_NH_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_NH_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_NH_Trailer;
    return sw_Budd_MetrolinerI_NH_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_NH_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_NH_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_NH_Trailer;
    3 : sw_Budd_MetrolinerI_NH_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_NH_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_NH_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_NH_sidecheck_6_r;
    return sw_Budd_MetrolinerI_NH_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_NH_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_NH_NonControlMotor;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_NH_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_NH_NonControlMotor;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_NH_pantocheck_at_1;
    return sw_Budd_MetrolinerI_NH_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_NH_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_NH_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_NH_pantocheck_at_2;
    return sw_Budd_MetrolinerI_NH_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_NH_Trailer;
    3 : sw_Budd_MetrolinerI_NH_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_NH_sidecheck_4;
    5 : sw_Budd_MetrolinerI_NH_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_NH_sidecheck_6;
    return sw_Budd_MetrolinerI_NH_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_NH_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_NH_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_NH_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_NH_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_NH_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_NH_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_NH_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_NH_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_NH_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_NH_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_NH_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_NH_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_NH_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_NH_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_NH_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_NH_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_NH_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_NH_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_NH_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_NH_lencheck;
    return sw_Budd_MetrolinerI_NH_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_NH, 18685) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_NH_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_NH_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_NH_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

//Budd_MetrolinerI_Cascades
spriteset(spriteset_Budd_MetrolinerI_Cascades_purchase,   "gfx/Budd_MetrolinerI_Cascades.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_MetrolinerI_Cascades_Motor_lead,   "gfx/Budd_MetrolinerI_Cascades.png") {template_Old_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_MetrolinerI_Cascades_Motor_rear,   "gfx/Budd_MetrolinerI_Cascades.png") {template_Old_8(7, 64)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_MetrolinerI_Cascades_DrivingTrailer_lead,   "gfx/Budd_MetrolinerI_Cascades.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_MetrolinerI_Cascades_DrivingTrailer_rear,   "gfx/Budd_MetrolinerI_Cascades.png") {template_Old_8(187, 64)}
spriteset(spriteset_Budd_MetrolinerI_Cascades_Trailer,   "gfx/Budd_MetrolinerI_Cascades.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_MetrolinerI_Cascades_NonControlMotor,   "gfx/Budd_MetrolinerI_Cascades.png") {template_Old_8(187, 89)}
spriteset(spriteset_Budd_MetrolinerI_Cascades_NonControlMotor_r,   "gfx/Budd_MetrolinerI_Cascades.png") {template_Old_8_r(187, 89)}

// C O D E
//Backward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_2_r, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_1_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_0_r, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_Cascades_Trailer;
    return spriteset_Budd_MetrolinerI_Cascades_NonControlMotor;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_1_r;
    return sw_Budd_MetrolinerI_Cascades_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : spriteset_Budd_MetrolinerI_Cascades_Trailer;
    return sw_Budd_MetrolinerI_Cascades_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_2_r;
    return sw_Budd_MetrolinerI_Cascades_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_lencheck_r, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_Cascades_Trailer;
    3 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_1_r;
    4 : sw_Budd_MetrolinerI_Cascades_sidecheck_4_r;
    5 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_2_r;
    6 .. 7 : sw_Budd_MetrolinerI_Cascades_sidecheck_6_r;
    return sw_Budd_MetrolinerI_Cascades_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_2, position_in_vehid_chain % 3){
    2 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
    2 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_1, position_in_vehid_chain % 2){
    1 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor_r;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}
switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
    1 : spriteset_Budd_MetrolinerI_Cascades_NonControlMotor;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_1;
    return sw_Budd_MetrolinerI_Cascades_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_1;
    return spriteset_Budd_MetrolinerI_Cascades_Trailer;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
    1 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_2;
    return sw_Budd_MetrolinerI_Cascades_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_lencheck, num_vehs_in_vehid_chain ) {
    0 .. 2 : spriteset_Budd_MetrolinerI_Cascades_Trailer;
    3 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_1;
    4 : sw_Budd_MetrolinerI_Cascades_sidecheck_4;
    5 : sw_Budd_MetrolinerI_Cascades_pantocheck_at_2;
    6 .. 7 : sw_Budd_MetrolinerI_Cascades_sidecheck_6;
    return sw_Budd_MetrolinerI_Cascades_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_panto_direction_r_pos, position_in_vehid_chain_from_end){
    0: spriteset_Budd_MetrolinerI_Cascades_Motor_lead; //Panto
    return spriteset_Budd_MetrolinerI_Cascades_DrivingTrailer_lead; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_panto_direction_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_Cascades_panto_direction_r_pos;        //Front panto
    return spriteset_Budd_MetrolinerI_Cascades_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_panto_flipcheck_r, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_Cascades_panto_direction_r;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_Cascades_Motor_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_frontcheck_r, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_Cascades_panto_direction_r; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_Cascades_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_panto_direction, vehicle_is_flipped){
    0 : spriteset_Budd_MetrolinerI_Cascades_Motor_lead;        //Front panto
    return spriteset_Budd_MetrolinerI_Cascades_Motor_rear;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_panto_flipcheck, vehicle_is_flipped){
    0 : sw_Budd_MetrolinerI_Cascades_panto_direction;        //Not flipped, give Panto
    return spriteset_Budd_MetrolinerI_Cascades_DrivingTrailer_rear;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_Budd_MetrolinerI_Cascades_frontcheck, position_in_vehid_chain){
    0: sw_Budd_MetrolinerI_Cascades_panto_direction; //We need a pantograph, guaranteed
    return sw_Budd_MetrolinerI_Cascades_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_Cascades_directioncheck, vehicle_is_reversed){
    0: sw_Budd_MetrolinerI_Cascades_frontcheck; //We are going forwards
    return sw_Budd_MetrolinerI_Cascades_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_Budd_MetrolinerI_Cascades_revcheck, vehicle_is_reversed){
    0 : sw_Budd_MetrolinerI_Cascades_lencheck;
    return sw_Budd_MetrolinerI_Cascades_lencheck_r;
}

item(FEAT_TRAINS, Item_Budd_MetrolinerI_Cascades, 18686) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROLINERI);
        introduction_date:                date(1969,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        63 ton;
        speed:                            125 mph;
        power:                            2400 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     16;
        running_cost_factor:             220;
        cargo_capacity:                  80/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_Budd_MetrolinerI_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_MetrolinerI_Cascades_directioncheck;
        can_attach_wagon: sw_Budd_MetrolinerI_attach ;
        purchase: spriteset_Budd_MetrolinerI_Cascades_purchase;
        additional_text: string(STR_INFO_BUDD_METROLINERI);
    }
    livery_override (Item_MU_Trailer){
        default                     : sw_Budd_MetrolinerI_Cascades_revcheck ;
        length                      : 8;
        cargo_capacity              : (80/param_capacity_mod) ;
        power                       : 1200 ;
		running_cost_factor: 55;

    }
}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_attach, vehicle_type_id){
	Item_Adtranz_X2000_SJ     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_X2000_PhaseIII     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_X2000_PhaseIV     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_X2000_PhaseV     : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Adtranz_X2000_Via     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Adtranz_X2000_SJ
spriteset(spriteset_Adtranz_X2000_SJ_Purchase,   "gfx/Adtranz_X2000_SJ.png") {template_purchase(7, 21)}
spriteset(spriteset_Adtranz_X2000_SJ_Lead,   "gfx/Adtranz_X2000_SJ.png") {template_Old_8(7, 39)}
spriteset(spriteset_Adtranz_X2000_SJ_Rear,   "gfx/Adtranz_X2000_SJ.png") {template_Old_8(7, 64)}

spriteset(spriteset_Adtranz_X2000_SJ_DT_Lead,   "gfx/Adtranz_X2000_SJ.png") {template_Old_8(187, 39)}
spriteset(spriteset_Adtranz_X2000_SJ_DT_Rear,   "gfx/Adtranz_X2000_SJ.png") {template_Old_8(187, 64)}

spriteset(spriteset_Adtranz_X2000_SJ_Trailer,   "gfx/Adtranz_X2000_SJ.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_SJ_forward, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_SJ_Lead;
    1: spriteset_Adtranz_X2000_SJ_DT_Rear;
}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_SJ_rev, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_SJ_DT_Lead;
    1: spriteset_Adtranz_X2000_SJ_Rear;
}

switch(FEAT_TRAINS, PARENT, sw_Adtranz_X2000_SJ_directioncheck, vehicle_is_reversed){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    sw_Adtranz_X2000_SJ_forward;
    1:    sw_Adtranz_X2000_SJ_rev;
}

item(FEAT_TRAINS, Item_Adtranz_X2000_SJ, 18901) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_X2000);
        introduction_date:                date(1990,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            210 km/h;
        power:                            4370 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     28;
        running_cost_factor:             160;
        cargo_capacity:                  36;
        loading_speed: 10;

        variant_group: Item_Adtranz_X2000_SJ;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_X2000_SJ_directioncheck;
        can_attach_wagon: sw_Adtranz_X2000_attach;
        purchase: spriteset_Adtranz_X2000_SJ_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_X2000);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_X2000_SJ_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
        weight:                        47;
        running_cost_factor:             20;
    }
}

//Adtranz_X2000_PhaseIII
spriteset(spriteset_Adtranz_X2000_PhaseIII_Purchase,   "gfx/Adtranz_X2000_PhaseIII.png") {template_purchase(7, 21)}
spriteset(spriteset_Adtranz_X2000_PhaseIII_Lead,   "gfx/Adtranz_X2000_PhaseIII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Adtranz_X2000_PhaseIII_Rear,   "gfx/Adtranz_X2000_PhaseIII.png") {template_Old_8(7, 64)}

spriteset(spriteset_Adtranz_X2000_PhaseIII_DT_Lead,   "gfx/Adtranz_X2000_PhaseIII.png") {template_Old_8(187, 39)}
spriteset(spriteset_Adtranz_X2000_PhaseIII_DT_Rear,   "gfx/Adtranz_X2000_PhaseIII.png") {template_Old_8(187, 64)}

spriteset(spriteset_Adtranz_X2000_PhaseIII_Trailer,   "gfx/Adtranz_X2000_PhaseIII.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_PhaseIII_forward, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_PhaseIII_Lead;
    1: spriteset_Adtranz_X2000_PhaseIII_DT_Rear;
}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_PhaseIII_rev, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_PhaseIII_DT_Lead;
    1: spriteset_Adtranz_X2000_PhaseIII_Rear;
}

switch(FEAT_TRAINS, PARENT, sw_Adtranz_X2000_PhaseIII_directioncheck, vehicle_is_reversed){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    sw_Adtranz_X2000_PhaseIII_forward;
    1:    sw_Adtranz_X2000_PhaseIII_rev;
}

item(FEAT_TRAINS, Item_Adtranz_X2000_PhaseIII, 18902) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_X2000);
        introduction_date:                date(1990,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            210 km/h;
        power:                            4370 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     28;
        running_cost_factor:             160;
        cargo_capacity:                  36;
        loading_speed: 10;

        variant_group: Item_Adtranz_X2000_SJ;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_X2000_PhaseIII_directioncheck;
        can_attach_wagon: sw_Adtranz_X2000_attach;
        purchase: spriteset_Adtranz_X2000_PhaseIII_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_X2000);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_X2000_PhaseIII_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
        weight:                        47;
        running_cost_factor:             20;
    }
}

//Adtranz_X2000_PhaseIV
spriteset(spriteset_Adtranz_X2000_PhaseIV_Purchase,   "gfx/Adtranz_X2000_PhaseIV.png") {template_purchase(7, 21)}
spriteset(spriteset_Adtranz_X2000_PhaseIV_Lead,   "gfx/Adtranz_X2000_PhaseIV.png") {template_Old_8(7, 39)}
spriteset(spriteset_Adtranz_X2000_PhaseIV_Rear,   "gfx/Adtranz_X2000_PhaseIV.png") {template_Old_8(7, 64)}

spriteset(spriteset_Adtranz_X2000_PhaseIV_DT_Lead,   "gfx/Adtranz_X2000_PhaseIV.png") {template_Old_8(187, 39)}
spriteset(spriteset_Adtranz_X2000_PhaseIV_DT_Rear,   "gfx/Adtranz_X2000_PhaseIV.png") {template_Old_8(187, 64)}

spriteset(spriteset_Adtranz_X2000_PhaseIV_Trailer,   "gfx/Adtranz_X2000_PhaseIV.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_PhaseIV_forward, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_PhaseIV_Lead;
    1: spriteset_Adtranz_X2000_PhaseIV_DT_Rear;
}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_PhaseIV_rev, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_PhaseIV_DT_Lead;
    1: spriteset_Adtranz_X2000_PhaseIV_Rear;
}

switch(FEAT_TRAINS, PARENT, sw_Adtranz_X2000_PhaseIV_directioncheck, vehicle_is_reversed){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    sw_Adtranz_X2000_PhaseIV_forward;
    1:    sw_Adtranz_X2000_PhaseIV_rev;
}

item(FEAT_TRAINS, Item_Adtranz_X2000_PhaseIV, 18903) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_X2000);
        introduction_date:                date(1990,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            210 km/h;
        power:                            4370 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     28;
        running_cost_factor:             160;
        cargo_capacity:                  36;
        loading_speed: 10;

        variant_group: Item_Adtranz_X2000_SJ;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_X2000_PhaseIV_directioncheck;
        can_attach_wagon: sw_Adtranz_X2000_attach;
        purchase: spriteset_Adtranz_X2000_PhaseIV_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_X2000);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_X2000_PhaseIV_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
        weight:                        47;
        running_cost_factor:             20;
    }
}

//Adtranz_X2000_PhaseV
spriteset(spriteset_Adtranz_X2000_PhaseV_Purchase,   "gfx/Adtranz_X2000_PhaseV.png") {template_purchase(7, 21)}
spriteset(spriteset_Adtranz_X2000_PhaseV_Lead,   "gfx/Adtranz_X2000_PhaseV.png") {template_Old_8(7, 39)}
spriteset(spriteset_Adtranz_X2000_PhaseV_Rear,   "gfx/Adtranz_X2000_PhaseV.png") {template_Old_8(7, 64)}

spriteset(spriteset_Adtranz_X2000_PhaseV_DT_Lead,   "gfx/Adtranz_X2000_PhaseV.png") {template_Old_8(187, 39)}
spriteset(spriteset_Adtranz_X2000_PhaseV_DT_Rear,   "gfx/Adtranz_X2000_PhaseV.png") {template_Old_8(187, 64)}

spriteset(spriteset_Adtranz_X2000_PhaseV_Trailer,   "gfx/Adtranz_X2000_PhaseV.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_PhaseV_forward, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_PhaseV_Lead;
    1: spriteset_Adtranz_X2000_PhaseV_DT_Rear;
}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_PhaseV_rev, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_PhaseV_DT_Lead;
    1: spriteset_Adtranz_X2000_PhaseV_Rear;
}

switch(FEAT_TRAINS, PARENT, sw_Adtranz_X2000_PhaseV_directioncheck, vehicle_is_reversed){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    sw_Adtranz_X2000_PhaseV_forward;
    1:    sw_Adtranz_X2000_PhaseV_rev;
}

item(FEAT_TRAINS, Item_Adtranz_X2000_PhaseV, 18904) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_X2000);
        introduction_date:                date(1990,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            210 km/h;
        power:                            4370 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     28;
        running_cost_factor:             160;
        cargo_capacity:                  36;
        loading_speed: 10;

        variant_group: Item_Adtranz_X2000_SJ;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_X2000_PhaseV_directioncheck;
        can_attach_wagon: sw_Adtranz_X2000_attach;
        purchase: spriteset_Adtranz_X2000_PhaseV_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_X2000);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_X2000_PhaseV_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
        weight:                        47;
        running_cost_factor:             20;
    }
}

//Adtranz_X2000_Via
spriteset(spriteset_Adtranz_X2000_Via_Purchase,   "gfx/Adtranz_X2000_Via.png") {template_purchase(7, 21)}
spriteset(spriteset_Adtranz_X2000_Via_Lead,   "gfx/Adtranz_X2000_Via.png") {template_Old_8(7, 39)}
spriteset(spriteset_Adtranz_X2000_Via_Rear,   "gfx/Adtranz_X2000_Via.png") {template_Old_8(7, 64)}

spriteset(spriteset_Adtranz_X2000_Via_DT_Lead,   "gfx/Adtranz_X2000_Via.png") {template_Old_8(187, 39)}
spriteset(spriteset_Adtranz_X2000_Via_DT_Rear,   "gfx/Adtranz_X2000_Via.png") {template_Old_8(187, 64)}

spriteset(spriteset_Adtranz_X2000_Via_Trailer,   "gfx/Adtranz_X2000_Via.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_Via_forward, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_Via_Lead;
    1: spriteset_Adtranz_X2000_Via_DT_Rear;
}

switch(FEAT_TRAINS, SELF, sw_Adtranz_X2000_Via_rev, vehicle_is_flipped){
    0:    spriteset_Adtranz_X2000_Via_DT_Lead;
    1: spriteset_Adtranz_X2000_Via_Rear;
}

switch(FEAT_TRAINS, PARENT, sw_Adtranz_X2000_Via_directioncheck, vehicle_is_reversed){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    sw_Adtranz_X2000_Via_forward;
    1:    sw_Adtranz_X2000_Via_rev;
}

item(FEAT_TRAINS, Item_Adtranz_X2000_Via, 18905) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        ELRL;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_ADTRANZ_X2000);
        introduction_date:                date(1990,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        64 ton;
        speed:                            210 km/h;
        power:                            4370 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     28;
        running_cost_factor:             160;
        cargo_capacity:                  36;
        loading_speed: 10;

        variant_group: Item_Adtranz_X2000_SJ;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Adtranz_X2000_Via_directioncheck;
        can_attach_wagon: sw_Adtranz_X2000_attach;
        purchase: spriteset_Adtranz_X2000_Via_Purchase;
        additional_text: string(STR_INFO_ADTRANZ_X2000);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Adtranz_X2000_Via_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (72/param_capacity_mod);
        power:                            0;
        weight:                        47;
        running_cost_factor:             20;
    }
}

//3rd Rail MP54
spriteset(spriteset_PRR_MP54_3R_Purchase,   "gfx/PRR_MP54_3R.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_3R,   "gfx/PRR_MP54_3R.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_3R_r,   "gfx/PRR_MP54_3R.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)


switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_attach, vehicle_type_id){
    Item_PRR_MP54_3R_PRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_3R_LIRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_3R_LIRRMTA     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_3R_PennCentral     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_3R_WTC     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_MP54_3R_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_PRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_LIRR     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_LIRRMTA     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_PennCentral     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_WTC     : return CB_RESULT_ATTACH_ALLOW  ;
    Item_PRR_P54_SEPTA     : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//3rd Rail MP54
spriteset(spriteset_PRR_MP54_3R_PRR_Purchase,   "gfx/PRR_MP54_3R_PRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_3R_PRR,   "gfx/PRR_MP54_3R_PRR.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_3R_PRR_r,   "gfx/PRR_MP54_3R_PRR.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_PRR_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_PRR_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_PRR_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_3R_PRR_r;
    spriteset_PRR_MP54_3R_PRR ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PRR_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_PRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_PRR_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PRR_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_PRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_PRR_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PRR_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_PRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_PRR_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_3R_PRR_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PRR_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_3R_PRR_markerlight_stack;
    return sw_PRR_MP54_3R_PRR_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PRR_lead, position_in_consist) {
    0: sw_PRR_MP54_3R_PRR_headlight_stack;
    return sw_PRR_MP54_3R_PRR_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PRR_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_3R_PRR_headlight_and_marker_stack;
return sw_PRR_MP54_3R_PRR_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_3R_PRR, 30076) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_3R);
        introduction_date:                date(1908,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_3R_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_3R_PRR_solo;
        can_attach_wagon: sw_PRR_MP54_3R_attach;
        purchase: spriteset_PRR_MP54_3R_PRR_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_3R);
}
}

//3rd Rail MP54
spriteset(spriteset_PRR_MP54_3R_LIRR_Purchase,   "gfx/PRR_MP54_3R_LIRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_3R_LIRR,   "gfx/PRR_MP54_3R_LIRR.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_3R_LIRR_r,   "gfx/PRR_MP54_3R_LIRR.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_LIRR_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_LIRR_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_LIRR_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_3R_LIRR_r;
    spriteset_PRR_MP54_3R_LIRR ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRR_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_LIRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_LIRR_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRR_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_LIRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_LIRR_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRR_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_LIRR_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_LIRR_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_3R_LIRR_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRR_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_3R_LIRR_markerlight_stack;
    return sw_PRR_MP54_3R_LIRR_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRR_lead, position_in_consist) {
    0: sw_PRR_MP54_3R_LIRR_headlight_stack;
    return sw_PRR_MP54_3R_LIRR_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRR_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_3R_LIRR_headlight_and_marker_stack;
return sw_PRR_MP54_3R_LIRR_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_3R_LIRR, 30077) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_3R);
        introduction_date:                date(1908,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_3R_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_3R_LIRR_solo;
        can_attach_wagon: sw_PRR_MP54_3R_attach;
        purchase: spriteset_PRR_MP54_3R_LIRR_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_3R);
}
}

//3rd Rail MP54
spriteset(spriteset_PRR_MP54_3R_LIRRMTA_Purchase,   "gfx/PRR_MP54_3R_LIRRMTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_3R_LIRRMTA,   "gfx/PRR_MP54_3R_LIRRMTA.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_3R_LIRRMTA_r,   "gfx/PRR_MP54_3R_LIRRMTA.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_LIRRMTA_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_LIRRMTA_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_LIRRMTA_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_3R_LIRRMTA_r;
    spriteset_PRR_MP54_3R_LIRRMTA ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRRMTA_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_LIRRMTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_LIRRMTA_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRRMTA_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_LIRRMTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_LIRRMTA_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRRMTA_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_LIRRMTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_LIRRMTA_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_3R_LIRRMTA_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRRMTA_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_3R_LIRRMTA_markerlight_stack;
    return sw_PRR_MP54_3R_LIRRMTA_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRRMTA_lead, position_in_consist) {
    0: sw_PRR_MP54_3R_LIRRMTA_headlight_stack;
    return sw_PRR_MP54_3R_LIRRMTA_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_LIRRMTA_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_3R_LIRRMTA_headlight_and_marker_stack;
return sw_PRR_MP54_3R_LIRRMTA_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_3R_LIRRMTA, 30078) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_3R);
        introduction_date:                date(1908,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_3R_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_3R_LIRRMTA_solo;
        can_attach_wagon: sw_PRR_MP54_3R_attach;
        purchase: spriteset_PRR_MP54_3R_LIRRMTA_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_3R);
}
}

//3rd Rail MP54
spriteset(spriteset_PRR_MP54_3R_PennCentral_Purchase,   "gfx/PRR_MP54_3R_PennCentral.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_3R_PennCentral,   "gfx/PRR_MP54_3R_PennCentral.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_3R_PennCentral_r,   "gfx/PRR_MP54_3R_PennCentral.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_PennCentral_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_PennCentral_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_PennCentral_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_3R_PennCentral_r;
    spriteset_PRR_MP54_3R_PennCentral ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PennCentral_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_PennCentral_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_PennCentral_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PennCentral_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_PennCentral_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_PennCentral_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PennCentral_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_PennCentral_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_PennCentral_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_3R_PennCentral_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PennCentral_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_3R_PennCentral_markerlight_stack;
    return sw_PRR_MP54_3R_PennCentral_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PennCentral_lead, position_in_consist) {
    0: sw_PRR_MP54_3R_PennCentral_headlight_stack;
    return sw_PRR_MP54_3R_PennCentral_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_PennCentral_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_3R_PennCentral_headlight_and_marker_stack;
return sw_PRR_MP54_3R_PennCentral_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_3R_PennCentral, 30079) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_3R);
        introduction_date:                date(1908,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_3R_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_3R_PennCentral_solo;
        can_attach_wagon: sw_PRR_MP54_3R_attach;
        purchase: spriteset_PRR_MP54_3R_PennCentral_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_3R);
}
}

//3rd Rail MP54
spriteset(spriteset_PRR_MP54_3R_WTC_Purchase,   "gfx/PRR_MP54_3R_WTC.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_3R_WTC,   "gfx/PRR_MP54_3R_WTC.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_3R_WTC_r,   "gfx/PRR_MP54_3R_WTC.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_WTC_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_WTC_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_WTC_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_3R_WTC_r;
    spriteset_PRR_MP54_3R_WTC ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_WTC_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_WTC_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_WTC_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_WTC_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_WTC_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_WTC_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_WTC_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_WTC_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_WTC_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_3R_WTC_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_WTC_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_3R_WTC_markerlight_stack;
    return sw_PRR_MP54_3R_WTC_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_WTC_lead, position_in_consist) {
    0: sw_PRR_MP54_3R_WTC_headlight_stack;
    return sw_PRR_MP54_3R_WTC_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_WTC_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_3R_WTC_headlight_and_marker_stack;
return sw_PRR_MP54_3R_WTC_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_3R_WTC, 30080) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_3R);
        introduction_date:                date(1908,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_3R_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_3R_WTC_solo;
        can_attach_wagon: sw_PRR_MP54_3R_attach;
        purchase: spriteset_PRR_MP54_3R_WTC_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_3R);
}
}

//3rd Rail MP54
spriteset(spriteset_PRR_MP54_3R_SEPTA_Purchase,   "gfx/PRR_MP54_3R_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_MP54_3R_SEPTA,   "gfx/PRR_MP54_3R_SEPTA.png") {template_Old_8(7, 39)} // <- Define a wagon
spriteset(spriteset_PRR_MP54_3R_SEPTA_r,   "gfx/PRR_MP54_3R_SEPTA.png") {template_Old_8(7, 64)} // <- Define a wagon (flipped)

// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_SEPTA_headlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Headlights_r;
    spriteset_PRR_MP54_Headlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_SEPTA_markerlight_flipcheck, vehicle_is_flipped){
    1: spriteset_PRR_MP54_Markerlights_r;
    spriteset_PRR_MP54_Markerlights ;
}
// NEW: Switch to check if we're flipped or not
switch(FEAT_TRAINS, PARENT, sw_PRR_MP54_3R_SEPTA_flipcheck, vehicle_is_reversed){
    1: spriteset_PRR_MP54_3R_SEPTA_r;
    spriteset_PRR_MP54_3R_SEPTA ;
}

//Headlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_SEPTA_headlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_SEPTA_headlight_flipcheck;    // Return the overlay
}
//Markerlight stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_SEPTA_markerlight_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_SEPTA_markerlight_flipcheck;    // Return the overlay
}

//both stacker
switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_SEPTA_headlight_and_marker_stack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_PRR_MP54_3R_SEPTA_flipcheck;    // Return the NEW FLIP CHECK
    1: return sw_PRR_MP54_3R_SEPTA_headlight_flipcheck;    // Return the headlight overlay
    return sw_PRR_MP54_3R_SEPTA_markerlight_flipcheck; // Return the marker light overlay
}
/* If this loco is leading the train, display headlights.  */

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_SEPTA_rear, position_in_consist_from_end){
    0 : return sw_PRR_MP54_3R_SEPTA_markerlight_stack;
    return sw_PRR_MP54_3R_SEPTA_flipcheck; // Return the NEW FLIP CHECK
}

switch (FEAT_TRAINS, SELF, sw_PRR_MP54_3R_SEPTA_lead, position_in_consist) {
    0: sw_PRR_MP54_3R_SEPTA_headlight_stack;
    return sw_PRR_MP54_3R_SEPTA_rear;
}

switch(FEAT_TRAINS, SELF, sw_PRR_MP54_3R_SEPTA_solo, position_in_consist == 0 && position_in_consist_from_end == 0) {
1: return sw_PRR_MP54_3R_SEPTA_headlight_and_marker_stack;
return sw_PRR_MP54_3R_SEPTA_lead;
}

item(FEAT_TRAINS, Item_PRR_MP54_3R_SEPTA, 30081) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_PRR_MP54_3R);
        introduction_date:                date(1908,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            65 mph;
        power:                            600 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     9;
        running_cost_factor:             110;
        cargo_capacity:                  96/param_capacity_mod;
        loading_speed: 20;

        variant_group: Item_PRR_MP54_3R_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_PRR_MP54_3R_SEPTA_solo;
        can_attach_wagon: sw_PRR_MP54_3R_attach;
        purchase: spriteset_PRR_MP54_3R_SEPTA_Purchase;
        additional_text: string(STR_INFO_PRR_MP54_3R);
}
}

switch(FEAT_TRAINS, SELF, sw_Budd_Metropolitan_attach, vehicle_type_id){
    Item_Budd_Metropolitan_Liv0    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Metropolitan_Liv1    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Metropolitan_Liv2    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Metropolitan_Liv3    : return CB_RESULT_ATTACH_ALLOW  ;
	Item_Budd_Metropolitan_Liv4    : return CB_RESULT_ATTACH_ALLOW  ;
    Item_MU_Trailer    : return CB_RESULT_ATTACH_ALLOW  ;
    return string(STR_NO_COUPLE_MU) ;
}

//Budd_Metropolitan_Liv0
spriteset(spriteset_Budd_Metropolitan_Liv0_Purchase,   "gfx/Budd_Metropolitan_Liv0.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Metropolitan_Liv0_Lead,   "gfx/Budd_Metropolitan_Liv0.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Metropolitan_Liv0_Rear,   "gfx/Budd_Metropolitan_Liv0.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Metropolitan_Liv0_Trailer,   "gfx/Budd_Metropolitan_Liv0.png") {template_8(7, 99)}

switch(FEAT_TRAINS, SELF, sw_Budd_Metropolitan_Liv0_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_Metropolitan_Liv0_Rear;
    spriteset_Budd_Metropolitan_Liv0_Lead;
}


item(FEAT_TRAINS, Item_Budd_Metropolitan_Liv0, 30650) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROPOLITAN);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            100 mph;
        power:                            1184 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 30;

//        variant_group: Item_Budd_Metropolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Metropolitan_Liv0_last;
        can_attach_wagon: sw_Budd_Metropolitan_attach;
        purchase: spriteset_Budd_Metropolitan_Liv0_Purchase;
        additional_text: string(STR_INFO_BUDD_METROPOLITAN);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_Metropolitan_Liv0_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (140/param_capacity_mod);
        power:                            592;
		running_cost_factor: 42;
    }
}

//Budd_Metropolitan_Liv1
spriteset(spriteset_Budd_Metropolitan_Liv1_Purchase,   "gfx/Budd_Metropolitan_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Metropolitan_Liv1_Lead,   "gfx/Budd_Metropolitan_Liv1.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Metropolitan_Liv1_Rear,   "gfx/Budd_Metropolitan_Liv1.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Metropolitan_Liv1_Trailer,   "gfx/Budd_Metropolitan_Liv1.png") {template_8(7, 99)}

switch(FEAT_TRAINS, SELF, sw_Budd_Metropolitan_Liv1_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_Metropolitan_Liv1_Rear;
    spriteset_Budd_Metropolitan_Liv1_Lead;
}


item(FEAT_TRAINS, Item_Budd_Metropolitan_Liv1, 30651) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROPOLITAN);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            100 mph;
        power:                            1184 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Metropolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Metropolitan_Liv1_last;
        can_attach_wagon: sw_Budd_Metropolitan_attach;
        purchase: spriteset_Budd_Metropolitan_Liv1_Purchase;
        additional_text: string(STR_INFO_BUDD_METROPOLITAN);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_Metropolitan_Liv1_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (140/param_capacity_mod);
        power:                            592;
		running_cost_factor: 42;
    }
}

//Budd_Metropolitan_Liv2
spriteset(spriteset_Budd_Metropolitan_Liv2_Purchase,   "gfx/Budd_Metropolitan_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Metropolitan_Liv2_Lead,   "gfx/Budd_Metropolitan_Liv2.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Metropolitan_Liv2_Rear,   "gfx/Budd_Metropolitan_Liv2.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Metropolitan_Liv2_Trailer,   "gfx/Budd_Metropolitan_Liv2.png") {template_8(7, 99)}

switch(FEAT_TRAINS, SELF, sw_Budd_Metropolitan_Liv2_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_Metropolitan_Liv2_Rear;
    spriteset_Budd_Metropolitan_Liv2_Lead;
}


item(FEAT_TRAINS, Item_Budd_Metropolitan_Liv2, 30652) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROPOLITAN);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            100 mph;
        power:                            1184 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Metropolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Metropolitan_Liv2_last;
        can_attach_wagon: sw_Budd_Metropolitan_attach;
        purchase: spriteset_Budd_Metropolitan_Liv2_Purchase;
        additional_text: string(STR_INFO_BUDD_METROPOLITAN);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_Metropolitan_Liv2_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (140/param_capacity_mod);
        power:                            592;
		running_cost_factor: 42;
    }
}

//Budd_Metropolitan_Liv3
spriteset(spriteset_Budd_Metropolitan_Liv3_Purchase,   "gfx/Budd_Metropolitan_Liv3.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Metropolitan_Liv3_Lead,   "gfx/Budd_Metropolitan_Liv3.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Metropolitan_Liv3_Rear,   "gfx/Budd_Metropolitan_Liv3.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Metropolitan_Liv3_Trailer,   "gfx/Budd_Metropolitan_Liv3.png") {template_8(7, 99)}

switch(FEAT_TRAINS, SELF, sw_Budd_Metropolitan_Liv3_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_Metropolitan_Liv3_Rear;
    spriteset_Budd_Metropolitan_Liv3_Lead;
}


item(FEAT_TRAINS, Item_Budd_Metropolitan_Liv3, 30653) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROPOLITAN);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            100 mph;
        power:                            1184 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Metropolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Metropolitan_Liv3_last;
        can_attach_wagon: sw_Budd_Metropolitan_attach;
        purchase: spriteset_Budd_Metropolitan_Liv3_Purchase;
        additional_text: string(STR_INFO_BUDD_METROPOLITAN);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_Metropolitan_Liv3_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (140/param_capacity_mod);
        power:                            592;
		running_cost_factor: 42;
    }
}

//Budd_Metropolitan_Liv4
spriteset(spriteset_Budd_Metropolitan_Liv4_Purchase,   "gfx/Budd_Metropolitan_Liv4.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Metropolitan_Liv4_Lead,   "gfx/Budd_Metropolitan_Liv4.png") {template_8(7, 39)} // <- Define a wagon, in this case the cab
spriteset(spriteset_Budd_Metropolitan_Liv4_Rear,   "gfx/Budd_Metropolitan_Liv4.png") {template_8(7, 69)} // <- Define the cab wagon again, but this time using a slightly different alignment template to get it flipped. Unsure if necessary for PGT
spriteset(spriteset_Budd_Metropolitan_Liv4_Trailer,   "gfx/Budd_Metropolitan_Liv4.png") {template_8(7, 99)}

switch(FEAT_TRAINS, SELF, sw_Budd_Metropolitan_Liv4_last, position_in_consist_from_end){ // <- This code tells the game whether to use the cab or flipped cab, based on if they're right at the end or not
    0:    spriteset_Budd_Metropolitan_Liv4_Rear;
    spriteset_Budd_Metropolitan_Liv4_Lead;
}


item(FEAT_TRAINS, Item_Budd_Metropolitan_Liv4, 30654) {
    property {
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        refit_cost:                        0;
        climates_available:                ALL_CLIMATES;
        bitmask_vehicle_info:            0;
        misc_flags:                        bitmask(TRAIN_FLAG_MU,TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK); // <- Train Flag MU needed here

        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];

        track_type:                        SAA3;
        running_cost_base:                RUNNING_COST_ELECTRIC;
        engine_class:                     ENGINE_CLASS_ELECTRIC;
        ai_special_flag:                AI_FLAG_PASSENGER;
        dual_headed:                    1; // <- Double Headed, so cab on each end

        visual_effect_and_powered: VISUAL_EFFECT_ELECTRIC;

        name:                            string(STR_NAME_BUDD_METROPOLITAN);
        introduction_date:                date(1968,1,1);
        vehicle_life:                     50;
        model_life:                        30;
        length:                            8;

        weight:                        48 ton;
        speed:                            100 mph;
        power:                            1184 hp;
        tractive_effort_coefficient:     0.7;
        cost_factor:                     13;
        running_cost_factor:             170;
        cargo_capacity:                  140/param_capacity_mod;
        loading_speed: 30;

        variant_group: Item_Budd_Metropolitan_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);
    }
    graphics {
        default: sw_Budd_Metropolitan_Liv4_last;
        can_attach_wagon: sw_Budd_Metropolitan_attach;
        purchase: spriteset_Budd_Metropolitan_Liv4_Purchase;
        additional_text: string(STR_INFO_BUDD_METROPOLITAN);
}
        livery_override (Item_MU_Trailer) { // <- Override the appearance and stats of Item_FAI_WAGON_MU_COACH when attached, to make it fit the MU's appearance and stats
        default:                        spriteset_Budd_Metropolitan_Liv4_Trailer; // <- This tells the game that when attached, the livery_override wagon needs to use this sprite
        length:                            8;
        cargo_capacity:                   (140/param_capacity_mod);
        power:                            592;
		running_cost_factor: 42;
    }
}

//1840GenericCar
spriteset(spriteset_1840GenericCar_Purchase,   "gfx/1840GenericCar.png") {template_purchase(7, 21)}
spriteset(spriteset_1840GenericCar,   "gfx/1840GenericCar.png") {template_Old_6(7, 39)}
spriteset(spriteset_1840GenericCar_Rear,   "gfx/1840GenericCar.png") {template_Old_6(7, 64)}

switch(FEAT_TRAINS, SELF, sw_1840GenericCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_1840GenericCar_Rear;
    return spriteset_1840GenericCar;
}

item (FEAT_TRAINS, Item_1840GenericCar, 45400) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    75;
        running_cost_factor:            1;
        loading_speed:                    10;

//        variant_group: Item_1840GenericCar;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_1840GENERICCAR);
        introduction_date:                date(1840, 1, 1);

        speed:                            50 mph;
        weight:                            22 ton;
        cargo_capacity:                    50/param_capacity_mod;
    }
    graphics {
    default:                             sw_1840GenericCar_rearcheck;
    purchase:                            spriteset_1840GenericCar_Purchase;
    additional_text: string(STR_INFO_1840GENERICCAR);
}
}

//Mail_1840GenericCar
spriteset(spriteset_Mail_1840GenericCar_Purchase,   "gfx/1840GenericCar.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_1840GenericCar,   "gfx/1840GenericCar.png") {template_Old_6(187, 39)}
spriteset(spriteset_Mail_1840GenericCar_Rear,   "gfx/1840GenericCar.png") {template_Old_6(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_1840GenericCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_1840GenericCar_Rear;
    return spriteset_Mail_1840GenericCar;
}

item (FEAT_TRAINS, Item_Mail_1840GenericCar, 45410) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    75;
        running_cost_factor:            1;
        loading_speed:                    10;

//        variant_group: Item_Mail_1840GenericCar;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_1840GENERICCAR);
        introduction_date:                date(1840, 1, 1);

        speed:                            50 mph;
        weight:                            22 ton;
        cargo_capacity:                    40/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_1840GenericCar_rearcheck;
    purchase:                            spriteset_Mail_1840GenericCar_Purchase;
    additional_text: string(STR_INFO_MAIL_1840GENERICCAR);
}
}

//1840GenericCar_Stripe
spriteset(spriteset_1840GenericCar_Stripe_Purchase,   "gfx/1840GenericCar_Stripe.png") {template_purchase(7, 21)}
spriteset(spriteset_1840GenericCar_Stripe,   "gfx/1840GenericCar_Stripe.png") {template_Old_6(7, 39)}
spriteset(spriteset_1840GenericCar_Stripe_Rear,   "gfx/1840GenericCar_Stripe.png") {template_Old_6(7, 64)}

switch(FEAT_TRAINS, SELF, sw_1840GenericCar_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_1840GenericCar_Stripe_Rear;
    return spriteset_1840GenericCar_Stripe;
}

item (FEAT_TRAINS, Item_1840GenericCar_Stripe, 45402) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    75;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_1840GenericCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_1840GENERICCAR);
        introduction_date:                date(1840, 1, 1);

        speed:                            50 mph;
        weight:                            22 ton;
        cargo_capacity:                    50/param_capacity_mod;
    }
    graphics {
    default:                             sw_1840GenericCar_Stripe_rearcheck;
    purchase:                            spriteset_1840GenericCar_Stripe_Purchase;
    additional_text: string(STR_INFO_1840GENERICCAR);
}
}

//Mail_1840GenericCar_Stripe
spriteset(spriteset_Mail_1840GenericCar_Stripe_Purchase,   "gfx/1840GenericCar_Stripe.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_1840GenericCar_Stripe,   "gfx/1840GenericCar_Stripe.png") {template_Old_6(187, 39)}
spriteset(spriteset_Mail_1840GenericCar_Stripe_Rear,   "gfx/1840GenericCar_Stripe.png") {template_Old_6(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_1840GenericCar_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_1840GenericCar_Stripe_Rear;
    return spriteset_Mail_1840GenericCar_Stripe;
}

item (FEAT_TRAINS, Item_Mail_1840GenericCar_Stripe, 45412) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    75;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_Mail_1840GenericCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_1840GENERICCAR);
        introduction_date:                date(1840, 1, 1);

        speed:                            50 mph;
        weight:                            22 ton;
        cargo_capacity:                    40/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_1840GenericCar_Stripe_rearcheck;
    purchase:                            spriteset_Mail_1840GenericCar_Stripe_Purchase;
    additional_text: string(STR_INFO_MAIL_1840GENERICCAR);
}
}

//1840GenericCar_BodyStripe
spriteset(spriteset_1840GenericCar_BodyStripe_Purchase,   "gfx/1840GenericCar_BodyStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_1840GenericCar_BodyStripe,   "gfx/1840GenericCar_BodyStripe.png") {template_Old_6(7, 39)}
spriteset(spriteset_1840GenericCar_BodyStripe_Rear,   "gfx/1840GenericCar_BodyStripe.png") {template_Old_6(7, 64)}

switch(FEAT_TRAINS, SELF, sw_1840GenericCar_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_1840GenericCar_BodyStripe_Rear;
    return spriteset_1840GenericCar_BodyStripe;
}

item (FEAT_TRAINS, Item_1840GenericCar_BodyStripe, 45403) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    75;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_1840GenericCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_1840GENERICCAR);
        introduction_date:                date(1840, 1, 1);

        speed:                            50 mph;
        weight:                            22 ton;
        cargo_capacity:                    50/param_capacity_mod;
    }
    graphics {
    default:                             sw_1840GenericCar_BodyStripe_rearcheck;
    purchase:                            spriteset_1840GenericCar_BodyStripe_Purchase;
    additional_text: string(STR_INFO_1840GENERICCAR);
}
}

//Mail_1840GenericCar_BodyStripe
spriteset(spriteset_Mail_1840GenericCar_BodyStripe_Purchase,   "gfx/1840GenericCar_BodyStripe.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_1840GenericCar_BodyStripe,   "gfx/1840GenericCar_BodyStripe.png") {template_Old_6(187, 39)}
spriteset(spriteset_Mail_1840GenericCar_BodyStripe_Rear,   "gfx/1840GenericCar_BodyStripe.png") {template_Old_6(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_1840GenericCar_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_1840GenericCar_BodyStripe_Rear;
    return spriteset_Mail_1840GenericCar_BodyStripe;
}

item (FEAT_TRAINS, Item_Mail_1840GenericCar_BodyStripe, 45413) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            6;
        cost_factor:                    75;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_Mail_1840GenericCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_1840GENERICCAR);
        introduction_date:                date(1840, 1, 1);

        speed:                            50 mph;
        weight:                            22 ton;
        cargo_capacity:                    40/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_1840GenericCar_BodyStripe_rearcheck;
    purchase:                            spriteset_Mail_1840GenericCar_BodyStripe_Purchase;
    additional_text: string(STR_INFO_MAIL_1840GENERICCAR);
}
}

//ArchRoofCar
spriteset(spriteset_ArchRoofCar_Purchase,   "gfx/ArchRoofCar.png") {template_purchase(7, 21)}
spriteset(spriteset_ArchRoofCar,   "gfx/ArchRoofCar.png") {template_Old_7(7, 39)}
spriteset(spriteset_ArchRoofCar_Rear,   "gfx/ArchRoofCar.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_ArchRoofCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_ArchRoofCar_Rear;
    return spriteset_ArchRoofCar;
}

item (FEAT_TRAINS, Item_ArchRoofCar, 45600) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    80;
        running_cost_factor:            1;
        loading_speed:                    10;

//        variant_group: Item_ArchRoofCar;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_ARCHROOFCAR);
        introduction_date:                date(1860, 1, 1);

        speed:                            55 mph;
        weight:                            24 ton;
        cargo_capacity:                    68/param_capacity_mod;
    }
    graphics {
    default:                             sw_ArchRoofCar_rearcheck;
    purchase:                            spriteset_ArchRoofCar_Purchase;
    additional_text: string(STR_INFO_ARCHROOFCAR);
}
}

//ArchRoofCar_Stripe
spriteset(spriteset_ArchRoofCar_Stripe_Purchase,   "gfx/ArchRoofCar_Stripe.png") {template_purchase(7, 21)}
spriteset(spriteset_ArchRoofCar_Stripe,   "gfx/ArchRoofCar_Stripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_ArchRoofCar_Stripe_Rear,   "gfx/ArchRoofCar_Stripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_ArchRoofCar_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_ArchRoofCar_Stripe_Rear;
    return spriteset_ArchRoofCar_Stripe;
}

item (FEAT_TRAINS, Item_ArchRoofCar_Stripe, 45601) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    80;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_ArchRoofCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_ARCHROOFCAR);
        introduction_date:                date(1860, 1, 1);

        speed:                            55 mph;
        weight:                            24 ton;
        cargo_capacity:                    68/param_capacity_mod;
    }
    graphics {
    default:                             sw_ArchRoofCar_Stripe_rearcheck;
    purchase:                            spriteset_ArchRoofCar_Stripe_Purchase;
    additional_text: string(STR_INFO_ARCHROOFCAR);
}
}

//ArchRoofCar_BodyStripe
spriteset(spriteset_ArchRoofCar_BodyStripe_Purchase,   "gfx/ArchRoofCar_BodyStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_ArchRoofCar_BodyStripe,   "gfx/ArchRoofCar_BodyStripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_ArchRoofCar_BodyStripe_Rear,   "gfx/ArchRoofCar_BodyStripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_ArchRoofCar_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_ArchRoofCar_BodyStripe_Rear;
    return spriteset_ArchRoofCar_BodyStripe;
}

item (FEAT_TRAINS, Item_ArchRoofCar_BodyStripe, 45602) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    80;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_ArchRoofCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_ARCHROOFCAR);
        introduction_date:                date(1860, 1, 1);

        speed:                            55 mph;
        weight:                            24 ton;
        cargo_capacity:                    68/param_capacity_mod;
    }
    graphics {
    default:                             sw_ArchRoofCar_BodyStripe_rearcheck;
    purchase:                            spriteset_ArchRoofCar_BodyStripe_Purchase;
    additional_text: string(STR_INFO_ARCHROOFCAR);
}
}

//DuckbillCar
spriteset(spriteset_DuckbillCar_Purchase,   "gfx/DuckbillCar.png") {template_purchase(7, 21)}
spriteset(spriteset_DuckbillCar,   "gfx/DuckbillCar.png") {template_Old_7(7, 39)}
spriteset(spriteset_DuckbillCar_Rear,   "gfx/DuckbillCar.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_DuckbillCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_DuckbillCar_Rear;
    return spriteset_DuckbillCar;
}

item (FEAT_TRAINS, Item_DuckbillCar, 45620) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    83;
        running_cost_factor:            1;
        loading_speed:                    10;

//        variant_group: Item_DuckbillCar;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_DUCKBILLCAR);
        introduction_date:                date(1860, 1, 1);

        speed:                            55 mph;
        weight:                            25 ton;
        cargo_capacity:                    74/param_capacity_mod;
    }
    graphics {
    default:                             sw_DuckbillCar_rearcheck;
    purchase:                            spriteset_DuckbillCar_Purchase;
    additional_text: string(STR_INFO_DUCKBILLCAR);
}
}

//DuckbillCar_Stripe
spriteset(spriteset_DuckbillCar_Stripe_Purchase,   "gfx/DuckbillCar_Stripe.png") {template_purchase(7, 21)}
spriteset(spriteset_DuckbillCar_Stripe,   "gfx/DuckbillCar_Stripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_DuckbillCar_Stripe_Rear,   "gfx/DuckbillCar_Stripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_DuckbillCar_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_DuckbillCar_Stripe_Rear;
    return spriteset_DuckbillCar_Stripe;
}

item (FEAT_TRAINS, Item_DuckbillCar_Stripe, 45621) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    83;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_DuckbillCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_DUCKBILLCAR);
        introduction_date:                date(1860, 1, 1);

        speed:                            55 mph;
        weight:                            25 ton;
        cargo_capacity:                    74/param_capacity_mod;
    }
    graphics {
    default:                             sw_DuckbillCar_Stripe_rearcheck;
    purchase:                            spriteset_DuckbillCar_Stripe_Purchase;
    additional_text: string(STR_INFO_DUCKBILLCAR);
}
}

//DuckbillCar_BodyStripe
spriteset(spriteset_DuckbillCar_BodyStripe_Purchase,   "gfx/DuckbillCar_BodyStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_DuckbillCar_BodyStripe,   "gfx/DuckbillCar_BodyStripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_DuckbillCar_BodyStripe_Rear,   "gfx/DuckbillCar_BodyStripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_DuckbillCar_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_DuckbillCar_BodyStripe_Rear;
    return spriteset_DuckbillCar_BodyStripe;
}

item (FEAT_TRAINS, Item_DuckbillCar_BodyStripe, 45622) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    83;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_DuckbillCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_DUCKBILLCAR);
        introduction_date:                date(1860, 1, 1);

        speed:                            55 mph;
        weight:                            25 ton;
        cargo_capacity:                    74/param_capacity_mod;
    }
    graphics {
    default:                             sw_DuckbillCar_BodyStripe_rearcheck;
    purchase:                            spriteset_DuckbillCar_BodyStripe_Purchase;
    additional_text: string(STR_INFO_DUCKBILLCAR);
}
}

//EndPlatformSuburbanCar
spriteset(spriteset_EndPlatformSuburbanCar_Purchase,   "gfx/EndPlatformSuburbanCar.png") {template_purchase(7, 21)}
spriteset(spriteset_EndPlatformSuburbanCar,   "gfx/EndPlatformSuburbanCar.png") {template_Old_7(7, 39)}
spriteset(spriteset_EndPlatformSuburbanCar_Rear,   "gfx/EndPlatformSuburbanCar.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_EndPlatformSuburbanCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_EndPlatformSuburbanCar_Rear;
    return spriteset_EndPlatformSuburbanCar;
}

item (FEAT_TRAINS, Item_EndPlatformSuburbanCar, 45800) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    88;
        running_cost_factor:            1;
        loading_speed:                    10;

//        variant_group: Item_EndPlatformSuburbanCar;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_ENDPLATFORMSUBURBANCAR);
        introduction_date:                date(1880, 1, 1);

        speed:                            60 mph;
        weight:                            27 ton;
        cargo_capacity:                    80/param_capacity_mod;
    }
    graphics {
    default:                             sw_EndPlatformSuburbanCar_rearcheck;
    purchase:                            spriteset_EndPlatformSuburbanCar_Purchase;
    additional_text: string(STR_INFO_ENDPLATFORMSUBURBANCAR);
}
}

//EndPlatformSuburbanCar_Stripe
spriteset(spriteset_EndPlatformSuburbanCar_Stripe_Purchase,   "gfx/EndPlatformSuburbanCar_Stripe.png") {template_purchase(7, 21)}
spriteset(spriteset_EndPlatformSuburbanCar_Stripe,   "gfx/EndPlatformSuburbanCar_Stripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_EndPlatformSuburbanCar_Stripe_Rear,   "gfx/EndPlatformSuburbanCar_Stripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_EndPlatformSuburbanCar_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_EndPlatformSuburbanCar_Stripe_Rear;
    return spriteset_EndPlatformSuburbanCar_Stripe;
}

item (FEAT_TRAINS, Item_EndPlatformSuburbanCar_Stripe, 45801) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    88;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_EndPlatformSuburbanCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_ENDPLATFORMSUBURBANCAR);
        introduction_date:                date(1880, 1, 1);

        speed:                            60 mph;
        weight:                            27 ton;
        cargo_capacity:                    80/param_capacity_mod;
    }
    graphics {
    default:                             sw_EndPlatformSuburbanCar_Stripe_rearcheck;
    purchase:                            spriteset_EndPlatformSuburbanCar_Stripe_Purchase;
    additional_text: string(STR_INFO_ENDPLATFORMSUBURBANCAR);
}
}

//EndPlatformSuburbanCar_BodyStripe
spriteset(spriteset_EndPlatformSuburbanCar_BodyStripe_Purchase,   "gfx/EndPlatformSuburbanCar_BodyStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_EndPlatformSuburbanCar_BodyStripe,   "gfx/EndPlatformSuburbanCar_BodyStripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_EndPlatformSuburbanCar_BodyStripe_Rear,   "gfx/EndPlatformSuburbanCar_BodyStripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_EndPlatformSuburbanCar_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_EndPlatformSuburbanCar_BodyStripe_Rear;
    return spriteset_EndPlatformSuburbanCar_BodyStripe;
}

item (FEAT_TRAINS, Item_EndPlatformSuburbanCar_BodyStripe, 45802) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            7;
        cost_factor:                    88;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_EndPlatformSuburbanCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_ENDPLATFORMSUBURBANCAR);
        introduction_date:                date(1880, 1, 1);

        speed:                            60 mph;
        weight:                            27 ton;
        cargo_capacity:                    80/param_capacity_mod;
    }
    graphics {
    default:                             sw_EndPlatformSuburbanCar_BodyStripe_rearcheck;
    purchase:                            spriteset_EndPlatformSuburbanCar_BodyStripe_Purchase;
    additional_text: string(STR_INFO_ENDPLATFORMSUBURBANCAR);
}
}

//SideLoadingSuburbanCar
spriteset(spriteset_SideLoadingSuburbanCar_Purchase,   "gfx/SideLoadingSuburbanCar.png") {template_purchase(7, 21)}
spriteset(spriteset_SideLoadingSuburbanCar,   "gfx/SideLoadingSuburbanCar.png") {template_Old_7(7, 39)}
spriteset(spriteset_SideLoadingSuburbanCar_Rear,   "gfx/SideLoadingSuburbanCar.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_SideLoadingSuburbanCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_SideLoadingSuburbanCar_Rear;
    return spriteset_SideLoadingSuburbanCar;
}

item (FEAT_TRAINS, Item_SideLoadingSuburbanCar, 46000) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    110;
        running_cost_factor:            3;
        loading_speed:                    40;

//        variant_group: Item_SideLoadingSuburbanCar;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_SIDELOADINGSUBURBANCAR);
        introduction_date:                date(1903, 1, 1);

        speed:                            65 mph;
        weight:                            45 ton;
        cargo_capacity:                    90/param_capacity_mod;
    }
    graphics {
    default:                             sw_SideLoadingSuburbanCar_rearcheck;
    purchase:                            spriteset_SideLoadingSuburbanCar_Purchase;
    additional_text: string(STR_INFO_SIDELOADINGSUBURBANCAR);
}
}

//SideLoadingSuburbanCar_Stripe
spriteset(spriteset_SideLoadingSuburbanCar_Stripe_Purchase,   "gfx/SideLoadingSuburbanCar_Stripe.png") {template_purchase(7, 21)}
spriteset(spriteset_SideLoadingSuburbanCar_Stripe,   "gfx/SideLoadingSuburbanCar_Stripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_SideLoadingSuburbanCar_Stripe_Rear,   "gfx/SideLoadingSuburbanCar_Stripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_SideLoadingSuburbanCar_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_SideLoadingSuburbanCar_Stripe_Rear;
    return spriteset_SideLoadingSuburbanCar_Stripe;
}

item (FEAT_TRAINS, Item_SideLoadingSuburbanCar_Stripe, 46001) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    110;
        running_cost_factor:            3;
        loading_speed:                    40;

        variant_group: Item_SideLoadingSuburbanCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_SIDELOADINGSUBURBANCAR);
        introduction_date:                date(1903, 1, 1);

        speed:                            65 mph;
        weight:                            45 ton;
        cargo_capacity:                    90/param_capacity_mod;
    }
    graphics {
    default:                             sw_SideLoadingSuburbanCar_Stripe_rearcheck;
    purchase:                            spriteset_SideLoadingSuburbanCar_Stripe_Purchase;
    additional_text: string(STR_INFO_SIDELOADINGSUBURBANCAR);
}
}

//SideLoadingSuburbanCar_BodyStripe
spriteset(spriteset_SideLoadingSuburbanCar_BodyStripe_Purchase,   "gfx/SideLoadingSuburbanCar_BodyStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_SideLoadingSuburbanCar_BodyStripe,   "gfx/SideLoadingSuburbanCar_BodyStripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_SideLoadingSuburbanCar_BodyStripe_Rear,   "gfx/SideLoadingSuburbanCar_BodyStripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_SideLoadingSuburbanCar_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_SideLoadingSuburbanCar_BodyStripe_Rear;
    return spriteset_SideLoadingSuburbanCar_BodyStripe;
}

item (FEAT_TRAINS, Item_SideLoadingSuburbanCar_BodyStripe, 46002) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    110;
        running_cost_factor:            3;
        loading_speed:                    40;

        variant_group: Item_SideLoadingSuburbanCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_SIDELOADINGSUBURBANCAR);
        introduction_date:                date(1903, 1, 1);

        speed:                            65 mph;
        weight:                            45 ton;
        cargo_capacity:                    90/param_capacity_mod;
    }
    graphics {
    default:                             sw_SideLoadingSuburbanCar_BodyStripe_rearcheck;
    purchase:                            spriteset_SideLoadingSuburbanCar_BodyStripe_Purchase;
    additional_text: string(STR_INFO_SIDELOADINGSUBURBANCAR);
}
}

//PRR P54
spriteset(spriteset_PRR_P54_PRR_Purchase,   "gfx/PRR_P54_PRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_P54_PRR,   "gfx/PRR_P54_PRR.png") {template_Old_8(7, 39)}
spriteset(spriteset_PRR_P54_PRR_Rear,   "gfx/PRR_P54_PRR.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PRR_P54_PRR_rearcheck, position_in_consist_from_end){
    0 : spriteset_PRR_P54_PRR_Rear;
    return spriteset_PRR_P54_PRR;
}

item (FEAT_TRAINS, Item_PRR_P54_PRR, 46021) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_PRR_P54_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PRR_P54);
        introduction_date:                date(1908, 1, 1);

        speed:                            65 mph;
        weight:                            48 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_PRR_P54_PRR_rearcheck;
    purchase:                            spriteset_PRR_P54_PRR_Purchase;
    additional_text: string(STR_INFO_PRR_P54);
}
}

//PRR P54
spriteset(spriteset_PRR_P54_LIRR_Purchase,   "gfx/PRR_P54_LIRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_P54_LIRR,   "gfx/PRR_P54_LIRR.png") {template_Old_8(7, 39)}
spriteset(spriteset_PRR_P54_LIRR_Rear,   "gfx/PRR_P54_LIRR.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PRR_P54_LIRR_rearcheck, position_in_consist_from_end){
    0 : spriteset_PRR_P54_LIRR_Rear;
    return spriteset_PRR_P54_LIRR;
}

item (FEAT_TRAINS, Item_PRR_P54_LIRR, 46022) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_PRR_P54_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PRR_P54);
        introduction_date:                date(1908, 1, 1);

        speed:                            65 mph;
        weight:                            48 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_PRR_P54_LIRR_rearcheck;
    purchase:                            spriteset_PRR_P54_LIRR_Purchase;
    additional_text: string(STR_INFO_PRR_P54);
}
}

//PRR P54
spriteset(spriteset_PRR_P54_LIRRMTA_Purchase,   "gfx/PRR_P54_LIRRMTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_P54_LIRRMTA,   "gfx/PRR_P54_LIRRMTA.png") {template_Old_8(7, 39)}
spriteset(spriteset_PRR_P54_LIRRMTA_Rear,   "gfx/PRR_P54_LIRRMTA.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PRR_P54_LIRRMTA_rearcheck, position_in_consist_from_end){
    0 : spriteset_PRR_P54_LIRRMTA_Rear;
    return spriteset_PRR_P54_LIRRMTA;
}

item (FEAT_TRAINS, Item_PRR_P54_LIRRMTA, 46023) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_PRR_P54_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PRR_P54);
        introduction_date:                date(1908, 1, 1);

        speed:                            65 mph;
        weight:                            48 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_PRR_P54_LIRRMTA_rearcheck;
    purchase:                            spriteset_PRR_P54_LIRRMTA_Purchase;
    additional_text: string(STR_INFO_PRR_P54);
}
}

//PRR P54
spriteset(spriteset_PRR_P54_PennCentral_Purchase,   "gfx/PRR_P54_PennCentral.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_P54_PennCentral,   "gfx/PRR_P54_PennCentral.png") {template_Old_8(7, 39)}
spriteset(spriteset_PRR_P54_PennCentral_Rear,   "gfx/PRR_P54_PennCentral.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PRR_P54_PennCentral_rearcheck, position_in_consist_from_end){
    0 : spriteset_PRR_P54_PennCentral_Rear;
    return spriteset_PRR_P54_PennCentral;
}

item (FEAT_TRAINS, Item_PRR_P54_PennCentral, 46024) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_PRR_P54_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PRR_P54);
        introduction_date:                date(1908, 1, 1);

        speed:                            65 mph;
        weight:                            48 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_PRR_P54_PennCentral_rearcheck;
    purchase:                            spriteset_PRR_P54_PennCentral_Purchase;
    additional_text: string(STR_INFO_PRR_P54);
}
}

//PRR P54
spriteset(spriteset_PRR_P54_WTC_Purchase,   "gfx/PRR_P54_WTC.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_P54_WTC,   "gfx/PRR_P54_WTC.png") {template_Old_8(7, 39)}
spriteset(spriteset_PRR_P54_WTC_Rear,   "gfx/PRR_P54_WTC.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PRR_P54_WTC_rearcheck, position_in_consist_from_end){
    0 : spriteset_PRR_P54_WTC_Rear;
    return spriteset_PRR_P54_WTC;
}

item (FEAT_TRAINS, Item_PRR_P54_WTC, 46025) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_PRR_P54_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PRR_P54);
        introduction_date:                date(1908, 1, 1);

        speed:                            65 mph;
        weight:                            48 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_PRR_P54_WTC_rearcheck;
    purchase:                            spriteset_PRR_P54_WTC_Purchase;
    additional_text: string(STR_INFO_PRR_P54);
}
}

//PRR P54
spriteset(spriteset_PRR_P54_SEPTA_Purchase,   "gfx/PRR_P54_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_P54_SEPTA,   "gfx/PRR_P54_SEPTA.png") {template_Old_8(7, 39)}
spriteset(spriteset_PRR_P54_SEPTA_Rear,   "gfx/PRR_P54_SEPTA.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PRR_P54_SEPTA_rearcheck, position_in_consist_from_end){
    0 : spriteset_PRR_P54_SEPTA_Rear;
    return spriteset_PRR_P54_SEPTA;
}

item (FEAT_TRAINS, Item_PRR_P54_SEPTA, 46026) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_PRR_P54_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PRR_P54);
        introduction_date:                date(1908, 1, 1);

        speed:                            65 mph;
        weight:                            48 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_PRR_P54_SEPTA_rearcheck;
    purchase:                            spriteset_PRR_P54_SEPTA_Purchase;
    additional_text: string(STR_INFO_PRR_P54);
}
}

//RailroadRoofSuburbanCar
spriteset(spriteset_RailroadRoofSuburbanCar_Purchase,   "gfx/RailroadRoofSuburbanCar.png") {template_purchase(7, 21)}
spriteset(spriteset_RailroadRoofSuburbanCar,   "gfx/RailroadRoofSuburbanCar.png") {template_Old_7(7, 39)}
spriteset(spriteset_RailroadRoofSuburbanCar_Rear,   "gfx/RailroadRoofSuburbanCar.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_RailroadRoofSuburbanCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_RailroadRoofSuburbanCar_Rear;
    return spriteset_RailroadRoofSuburbanCar;
}

item (FEAT_TRAINS, Item_RailroadRoofSuburbanCar, 46200) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    118;
        running_cost_factor:            3;
        loading_speed:                    40;

//        variant_group: Item_RailroadRoofSuburbanCar;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_RAILROADROOFSUBURBANCAR);
        introduction_date:                date(1920, 1, 1);

        speed:                            70 mph;
        weight:                            47 ton;
        cargo_capacity:                    97/param_capacity_mod;
    }
    graphics {
    default:                             sw_RailroadRoofSuburbanCar_rearcheck;
    purchase:                            spriteset_RailroadRoofSuburbanCar_Purchase;
    additional_text: string(STR_INFO_RAILROADROOFSUBURBANCAR);
}
}

//RailroadRoofSuburbanCar_Stripe
spriteset(spriteset_RailroadRoofSuburbanCar_Stripe_Purchase,   "gfx/RailroadRoofSuburbanCar_Stripe.png") {template_purchase(7, 21)}
spriteset(spriteset_RailroadRoofSuburbanCar_Stripe,   "gfx/RailroadRoofSuburbanCar_Stripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_RailroadRoofSuburbanCar_Stripe_Rear,   "gfx/RailroadRoofSuburbanCar_Stripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_RailroadRoofSuburbanCar_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_RailroadRoofSuburbanCar_Stripe_Rear;
    return spriteset_RailroadRoofSuburbanCar_Stripe;
}

item (FEAT_TRAINS, Item_RailroadRoofSuburbanCar_Stripe, 46201) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    118;
        running_cost_factor:            3;
        loading_speed:                    40;

        variant_group: Item_RailroadRoofSuburbanCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_RAILROADROOFSUBURBANCAR);
        introduction_date:                date(1920, 1, 1);

        speed:                            70 mph;
        weight:                            47 ton;
        cargo_capacity:                    97/param_capacity_mod;
    }
    graphics {
    default:                             sw_RailroadRoofSuburbanCar_Stripe_rearcheck;
    purchase:                            spriteset_RailroadRoofSuburbanCar_Stripe_Purchase;
    additional_text: string(STR_INFO_RAILROADROOFSUBURBANCAR);
}
}

//RailroadRoofSuburbanCar_BodyStripe
spriteset(spriteset_RailroadRoofSuburbanCar_BodyStripe_Purchase,   "gfx/RailroadRoofSuburbanCar_BodyStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_RailroadRoofSuburbanCar_BodyStripe,   "gfx/RailroadRoofSuburbanCar_BodyStripe.png") {template_Old_7(7, 39)}
spriteset(spriteset_RailroadRoofSuburbanCar_BodyStripe_Rear,   "gfx/RailroadRoofSuburbanCar_BodyStripe.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_RailroadRoofSuburbanCar_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_RailroadRoofSuburbanCar_BodyStripe_Rear;
    return spriteset_RailroadRoofSuburbanCar_BodyStripe;
}

item (FEAT_TRAINS, Item_RailroadRoofSuburbanCar_BodyStripe, 46202) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    118;
        running_cost_factor:            3;
        loading_speed:                    40;

        variant_group: Item_RailroadRoofSuburbanCar;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_RAILROADROOFSUBURBANCAR);
        introduction_date:                date(1920, 1, 1);

        speed:                            70 mph;
        weight:                            47 ton;
        cargo_capacity:                    97/param_capacity_mod;
    }
    graphics {
    default:                             sw_RailroadRoofSuburbanCar_BodyStripe_rearcheck;
    purchase:                            spriteset_RailroadRoofSuburbanCar_BodyStripe_Purchase;
    additional_text: string(STR_INFO_RAILROADROOFSUBURBANCAR);
}
}

//PioneerIIICommuterCar_Production
spriteset(spriteset_PioneerIIICommuterCar_Production_Purchase,   "gfx/PioneerIIICommuterCar_Production.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIIICommuterCar_Production,   "gfx/PioneerIIICommuterCar_Production.png") {template_Old_7(7, 39)}
spriteset(spriteset_PioneerIIICommuterCar_Production_Rear,   "gfx/PioneerIIICommuterCar_Production.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PioneerIIICommuterCar_Production_rearcheck, position_in_consist_from_end){
    0 : spriteset_PioneerIIICommuterCar_Production_Rear;
    return spriteset_PioneerIIICommuterCar_Production;
}

item (FEAT_TRAINS, Item_PioneerIIICommuterCar_Production, 46521) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            3;
        loading_speed:                    10;

        variant_group: Item_PioneerIIICommuterCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PIONEERIIICOMMUTERCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            85 mph;
        weight:                            24 ton;
        cargo_capacity:                    105/param_capacity_mod;
    }
    graphics {
    default:                             sw_PioneerIIICommuterCar_Production_rearcheck;
    purchase:                            spriteset_PioneerIIICommuterCar_Production_Purchase;
    additional_text: string(STR_INFO_PIONEERIIICOMMUTERCAR);
}
}

//PioneerIIICommuterCar_SEPTA
spriteset(spriteset_PioneerIIICommuterCar_SEPTA_Purchase,   "gfx/PioneerIIICommuterCar_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIIICommuterCar_SEPTA,   "gfx/PioneerIIICommuterCar_SEPTA.png") {template_Old_7(7, 39)}
spriteset(spriteset_PioneerIIICommuterCar_SEPTA_Rear,   "gfx/PioneerIIICommuterCar_SEPTA.png") {template_Old_7(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PioneerIIICommuterCar_SEPTA_rearcheck, position_in_consist_from_end){
    0 : spriteset_PioneerIIICommuterCar_SEPTA_Rear;
    return spriteset_PioneerIIICommuterCar_SEPTA;
}

item (FEAT_TRAINS, Item_PioneerIIICommuterCar_SEPTA, 46522) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            3;
        loading_speed:                    10;

        variant_group: Item_PioneerIIICommuterCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PIONEERIIICOMMUTERCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            85 mph;
        weight:                            24 ton;
        cargo_capacity:                    105/param_capacity_mod;
    }
    graphics {
    default:                             sw_PioneerIIICommuterCar_SEPTA_rearcheck;
    purchase:                            spriteset_PioneerIIICommuterCar_SEPTA_Purchase;
    additional_text: string(STR_INFO_PIONEERIIICOMMUTERCAR);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_Erie_Purchase,   "gfx/Pullman_Comet_Erie.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_Erie,   "gfx/Pullman_Comet_Erie.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_Erie_Rear,   "gfx/Pullman_Comet_Erie.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_Erie_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_Erie_Rear;
    return spriteset_Pullman_Comet_Erie;
}

item (FEAT_TRAINS, Item_Pullman_Comet_Erie, 46701) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_Erie_rearcheck;
    purchase:                            spriteset_Pullman_Comet_Erie_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_Erie_Cab_Purchase,   "gfx/Pullman_Comet_Erie.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_Erie_Cab,   "gfx/Pullman_Comet_Erie.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_Erie_Cab_Rear,   "gfx/Pullman_Comet_Erie.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_Erie_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_Erie_Cab_Rear;
    return spriteset_Pullman_Comet_Erie_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_Erie_Cab, 46721) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_Erie_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_Erie_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_NJT_Purchase,   "gfx/Pullman_Comet_NJT.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_NJT,   "gfx/Pullman_Comet_NJT.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_NJT_Rear,   "gfx/Pullman_Comet_NJT.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_NJT_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_NJT_Rear;
    return spriteset_Pullman_Comet_NJT;
}

item (FEAT_TRAINS, Item_Pullman_Comet_NJT, 46702) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_NJT_rearcheck;
    purchase:                            spriteset_Pullman_Comet_NJT_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_NJT_Cab_Purchase,   "gfx/Pullman_Comet_NJT.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_NJT_Cab,   "gfx/Pullman_Comet_NJT.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_NJT_Cab_Rear,   "gfx/Pullman_Comet_NJT.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_NJT_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_NJT_Cab_Rear;
    return spriteset_Pullman_Comet_NJT_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_NJT_Cab, 46722) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_NJT_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_NJT_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

spriteset(spriteset_Pullman_Comet_NJTStripes_Cab_Purchase,   "gfx/Pullman_Comet_NJTStripes.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_NJTStripes_Cab,   "gfx/Pullman_Comet_NJTStripes.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_NJTStripes_Cab_Rear,   "gfx/Pullman_Comet_NJTStripes.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_NJTStripes_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_NJTStripes_Cab_Rear;
    return spriteset_Pullman_Comet_NJTStripes_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_NJTStripes_Cab, 46723) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_NJTStripes_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_NJTStripes_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_MBTA_Purchase,   "gfx/Pullman_Comet_MBTA.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_MBTA,   "gfx/Pullman_Comet_MBTA.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_MBTA_Rear,   "gfx/Pullman_Comet_MBTA.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_MBTA_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_MBTA_Rear;
    return spriteset_Pullman_Comet_MBTA;
}

item (FEAT_TRAINS, Item_Pullman_Comet_MBTA, 46704) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_MBTA_rearcheck;
    purchase:                            spriteset_Pullman_Comet_MBTA_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_MBTA_Cab_Purchase,   "gfx/Pullman_Comet_MBTA.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_MBTA_Cab,   "gfx/Pullman_Comet_MBTA.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_MBTA_Cab_Rear,   "gfx/Pullman_Comet_MBTA.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_MBTA_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_MBTA_Cab_Rear;
    return spriteset_Pullman_Comet_MBTA_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_MBTA_Cab, 46724) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_MBTA_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_MBTA_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_ShoreLiner_Purchase,   "gfx/Pullman_Comet_ShoreLiner.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_ShoreLiner,   "gfx/Pullman_Comet_ShoreLiner.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_ShoreLiner_Rear,   "gfx/Pullman_Comet_ShoreLiner.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_ShoreLiner_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_ShoreLiner_Rear;
    return spriteset_Pullman_Comet_ShoreLiner;
}

item (FEAT_TRAINS, Item_Pullman_Comet_ShoreLiner, 46705) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_ShoreLiner_rearcheck;
    purchase:                            spriteset_Pullman_Comet_ShoreLiner_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_ShoreLiner_Cab_Purchase,   "gfx/Pullman_Comet_ShoreLiner.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_ShoreLiner_Cab,   "gfx/Pullman_Comet_ShoreLiner.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_ShoreLiner_Cab_Rear,   "gfx/Pullman_Comet_ShoreLiner.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_ShoreLiner_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_ShoreLiner_Cab_Rear;
    return spriteset_Pullman_Comet_ShoreLiner_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_ShoreLiner_Cab, 46725) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_ShoreLiner_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_ShoreLiner_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_ShoreLinerBlack_Purchase,   "gfx/Pullman_Comet_ShoreLinerBlack.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_ShoreLinerBlack,   "gfx/Pullman_Comet_ShoreLinerBlack.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_ShoreLinerBlack_Rear,   "gfx/Pullman_Comet_ShoreLinerBlack.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_ShoreLinerBlack_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_ShoreLinerBlack_Rear;
    return spriteset_Pullman_Comet_ShoreLinerBlack;
}

item (FEAT_TRAINS, Item_Pullman_Comet_ShoreLinerBlack, 46706) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_ShoreLinerBlack_rearcheck;
    purchase:                            spriteset_Pullman_Comet_ShoreLinerBlack_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_ShoreLinerBlack_Cab_Purchase,   "gfx/Pullman_Comet_ShoreLinerBlack.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_ShoreLinerBlack_Cab,   "gfx/Pullman_Comet_ShoreLinerBlack.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_ShoreLinerBlack_Cab_Rear,   "gfx/Pullman_Comet_ShoreLinerBlack.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_ShoreLinerBlack_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_ShoreLinerBlack_Cab_Rear;
    return spriteset_Pullman_Comet_ShoreLinerBlack_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_ShoreLinerBlack_Cab, 46726) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_ShoreLinerBlack_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_ShoreLinerBlack_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_AMT_Purchase,   "gfx/Pullman_Comet_AMT.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_AMT,   "gfx/Pullman_Comet_AMT.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_AMT_Rear,   "gfx/Pullman_Comet_AMT.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_AMT_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_AMT_Rear;
    return spriteset_Pullman_Comet_AMT;
}

item (FEAT_TRAINS, Item_Pullman_Comet_AMT, 46707) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_AMT_rearcheck;
    purchase:                            spriteset_Pullman_Comet_AMT_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_AMT_Cab_Purchase,   "gfx/Pullman_Comet_AMT.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_AMT_Cab,   "gfx/Pullman_Comet_AMT.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_AMT_Cab_Rear,   "gfx/Pullman_Comet_AMT.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_AMT_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_AMT_Cab_Rear;
    return spriteset_Pullman_Comet_AMT_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_AMT_Cab, 46727) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_AMT_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_AMT_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_AMTAlt_Purchase,   "gfx/Pullman_Comet_AMTAlt.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_AMTAlt,   "gfx/Pullman_Comet_AMTAlt.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_AMTAlt_Rear,   "gfx/Pullman_Comet_AMTAlt.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_AMTAlt_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_AMTAlt_Rear;
    return spriteset_Pullman_Comet_AMTAlt;
}

item (FEAT_TRAINS, Item_Pullman_Comet_AMTAlt, 46708) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_AMTAlt_rearcheck;
    purchase:                            spriteset_Pullman_Comet_AMTAlt_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_AMTAlt_Cab_Purchase,   "gfx/Pullman_Comet_AMTAlt.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_AMTAlt_Cab,   "gfx/Pullman_Comet_AMTAlt.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_AMTAlt_Cab_Rear,   "gfx/Pullman_Comet_AMTAlt.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_AMTAlt_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_AMTAlt_Cab_Rear;
    return spriteset_Pullman_Comet_AMTAlt_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_AMTAlt_Cab, 46728) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_AMTAlt_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_AMTAlt_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_SEPTA_Purchase,   "gfx/Pullman_Comet_SEPTA.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_SEPTA,   "gfx/Pullman_Comet_SEPTA.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_SEPTA_Rear,   "gfx/Pullman_Comet_SEPTA.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_SEPTA_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_SEPTA_Rear;
    return spriteset_Pullman_Comet_SEPTA;
}

item (FEAT_TRAINS, Item_Pullman_Comet_SEPTA, 46709) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_SEPTA_rearcheck;
    purchase:                            spriteset_Pullman_Comet_SEPTA_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_SEPTA_Cab_Purchase,   "gfx/Pullman_Comet_SEPTA.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_SEPTA_Cab,   "gfx/Pullman_Comet_SEPTA.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_SEPTA_Cab_Rear,   "gfx/Pullman_Comet_SEPTA.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_SEPTA_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_SEPTA_Cab_Rear;
    return spriteset_Pullman_Comet_SEPTA_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_SEPTA_Cab, 46729) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_SEPTA_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_SEPTA_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_MARC_Purchase,   "gfx/Pullman_Comet_MARC.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_MARC,   "gfx/Pullman_Comet_MARC.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_MARC_Rear,   "gfx/Pullman_Comet_MARC.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_MARC_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_MARC_Rear;
    return spriteset_Pullman_Comet_MARC;
}

item (FEAT_TRAINS, Item_Pullman_Comet_MARC, 46710) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_MARC_rearcheck;
    purchase:                            spriteset_Pullman_Comet_MARC_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_MARC_Cab_Purchase,   "gfx/Pullman_Comet_MARC.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_MARC_Cab,   "gfx/Pullman_Comet_MARC.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_MARC_Cab_Rear,   "gfx/Pullman_Comet_MARC.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_MARC_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_MARC_Cab_Rear;
    return spriteset_Pullman_Comet_MARC_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_MARC_Cab, 46730) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_MARC_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_MARC_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Pullman Comet
spriteset(spriteset_Pullman_Comet_FrontRunner_Purchase,   "gfx/Pullman_Comet_FrontRunner.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_Comet_FrontRunner,   "gfx/Pullman_Comet_FrontRunner.png") {template_Old_8(7, 39)}
spriteset(spriteset_Pullman_Comet_FrontRunner_Rear,   "gfx/Pullman_Comet_FrontRunner.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_FrontRunner_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_FrontRunner_Rear;
    return spriteset_Pullman_Comet_FrontRunner;
}

item (FEAT_TRAINS, Item_Pullman_Comet_FrontRunner, 46711) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET);
        introduction_date:                date(1970, 1, 1);

        speed:                            120 mph;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_FrontRunner_rearcheck;
    purchase:                            spriteset_Pullman_Comet_FrontRunner_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET);
}
}

spriteset(spriteset_Pullman_Comet_FrontRunner_Cab_Purchase,   "gfx/Pullman_Comet_FrontRunner.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_Comet_FrontRunner_Cab,   "gfx/Pullman_Comet_FrontRunner.png") {template_Old_8(187, 39)}
spriteset(spriteset_Pullman_Comet_FrontRunner_Cab_Rear,   "gfx/Pullman_Comet_FrontRunner.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Pullman_Comet_FrontRunner_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_Comet_FrontRunner_Cab_Rear;
    return spriteset_Pullman_Comet_FrontRunner_Cab;
}

item (FEAT_TRAINS, Item_Pullman_Comet_FrontRunner_Cab, 46731) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Pullman_Comet_Erie_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_COMET_CAB);
        introduction_date:                date(1970, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            120 mph;
        power:                            1 hp;
        weight:                            29 ton;
        cargo_capacity:                    112/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_Comet_FrontRunner_Cab_rearcheck;
    purchase:                            spriteset_Pullman_Comet_FrontRunner_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_COMET_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_Silver_Purchase,   "gfx/Budd_GalleryCar_Silver.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_Silver,   "gfx/Budd_GalleryCar_Silver.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_Silver_Rear,   "gfx/Budd_GalleryCar_Silver.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Silver_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Silver_Rear;
    return spriteset_Budd_GalleryCar_Silver;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Silver, 48501) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Silver_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Silver_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_Silver_Cab_Purchase,   "gfx/Budd_GalleryCar_Silver.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_Silver_Cab,   "gfx/Budd_GalleryCar_Silver.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_Silver_Cab_Rear,   "gfx/Budd_GalleryCar_Silver.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Silver_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Silver_Cab_Rear;
    return spriteset_Budd_GalleryCar_Silver_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Silver_Cab, 48521) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Silver_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Silver_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_Burlington_Purchase,   "gfx/Budd_GalleryCar_Burlington.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_Burlington,   "gfx/Budd_GalleryCar_Burlington.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_Burlington_Rear,   "gfx/Budd_GalleryCar_Burlington.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Burlington_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Burlington_Rear;
    return spriteset_Budd_GalleryCar_Burlington;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Burlington, 48502) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Burlington_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Burlington_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_Burlington_Cab_Purchase,   "gfx/Budd_GalleryCar_Burlington.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_Burlington_Cab,   "gfx/Budd_GalleryCar_Burlington.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_Burlington_Cab_Rear,   "gfx/Budd_GalleryCar_Burlington.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Burlington_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Burlington_Cab_Rear;
    return spriteset_Budd_GalleryCar_Burlington_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Burlington_Cab, 48522) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Burlington_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Burlington_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_Milwaukee_Purchase,   "gfx/Budd_GalleryCar_Milwaukee.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_Milwaukee,   "gfx/Budd_GalleryCar_Milwaukee.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_Milwaukee_Rear,   "gfx/Budd_GalleryCar_Milwaukee.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Milwaukee_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Milwaukee_Rear;
    return spriteset_Budd_GalleryCar_Milwaukee;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Milwaukee, 48503) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Milwaukee_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Milwaukee_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_Milwaukee_Cab_Purchase,   "gfx/Budd_GalleryCar_Milwaukee.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_Milwaukee_Cab,   "gfx/Budd_GalleryCar_Milwaukee.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_Milwaukee_Cab_Rear,   "gfx/Budd_GalleryCar_Milwaukee.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Milwaukee_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Milwaukee_Cab_Rear;
    return spriteset_Budd_GalleryCar_Milwaukee_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Milwaukee_Cab, 48523) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Milwaukee_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Milwaukee_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_Metra_Purchase,   "gfx/Budd_GalleryCar_Metra.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_Metra,   "gfx/Budd_GalleryCar_Metra.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_Metra_Rear,   "gfx/Budd_GalleryCar_Metra.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Metra_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Metra_Rear;
    return spriteset_Budd_GalleryCar_Metra;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Metra, 48504) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Metra_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Metra_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_Metra_Cab_Purchase,   "gfx/Budd_GalleryCar_Metra.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_Metra_Cab,   "gfx/Budd_GalleryCar_Metra.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_Metra_Cab_Rear,   "gfx/Budd_GalleryCar_Metra.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Metra_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Metra_Cab_Rear;
    return spriteset_Budd_GalleryCar_Metra_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Metra_Cab, 48524) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Metra_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Metra_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_Caltrain_Purchase,   "gfx/Budd_GalleryCar_Caltrain.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_Caltrain,   "gfx/Budd_GalleryCar_Caltrain.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_Caltrain_Rear,   "gfx/Budd_GalleryCar_Caltrain.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Caltrain_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Caltrain_Rear;
    return spriteset_Budd_GalleryCar_Caltrain;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Caltrain, 48505) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Caltrain_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Caltrain_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_Caltrain_Cab_Purchase,   "gfx/Budd_GalleryCar_Caltrain.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_Caltrain_Cab,   "gfx/Budd_GalleryCar_Caltrain.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_Caltrain_Cab_Rear,   "gfx/Budd_GalleryCar_Caltrain.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Caltrain_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Caltrain_Cab_Rear;
    return spriteset_Budd_GalleryCar_Caltrain_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Caltrain_Cab, 48525) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Caltrain_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Caltrain_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_VRE_Purchase,   "gfx/Budd_GalleryCar_VRE.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_VRE,   "gfx/Budd_GalleryCar_VRE.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_VRE_Rear,   "gfx/Budd_GalleryCar_VRE.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_VRE_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_VRE_Rear;
    return spriteset_Budd_GalleryCar_VRE;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_VRE, 48506) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_VRE_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_VRE_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_VRE_Cab_Purchase,   "gfx/Budd_GalleryCar_VRE.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_VRE_Cab,   "gfx/Budd_GalleryCar_VRE.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_VRE_Cab_Rear,   "gfx/Budd_GalleryCar_VRE.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_VRE_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_VRE_Cab_Rear;
    return spriteset_Budd_GalleryCar_VRE_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_VRE_Cab, 48526) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_VRE_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_VRE_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_CP_Purchase,   "gfx/Budd_GalleryCar_CP.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_CP,   "gfx/Budd_GalleryCar_CP.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_CP_Rear,   "gfx/Budd_GalleryCar_CP.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_CP_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_CP_Rear;
    return spriteset_Budd_GalleryCar_CP;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_CP, 48507) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_CP_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_CP_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_CP_Cab_Purchase,   "gfx/Budd_GalleryCar_CP.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_CP_Cab,   "gfx/Budd_GalleryCar_CP.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_CP_Cab_Rear,   "gfx/Budd_GalleryCar_CP.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_CP_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_CP_Cab_Rear;
    return spriteset_Budd_GalleryCar_CP_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_CP_Cab, 48527) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_CP_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_CP_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Budd Gallery Car
spriteset(spriteset_Budd_GalleryCar_Amtrak_Purchase,   "gfx/Budd_GalleryCar_Amtrak.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_GalleryCar_Amtrak,   "gfx/Budd_GalleryCar_Amtrak.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_GalleryCar_Amtrak_Rear,   "gfx/Budd_GalleryCar_Amtrak.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Amtrak_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Amtrak_Rear;
    return spriteset_Budd_GalleryCar_Amtrak;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Amtrak, 48508) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR);
        introduction_date:                date(1950, 1, 1);

        speed:                            100 mph;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Amtrak_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Amtrak_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR);
}
}

spriteset(spriteset_Budd_GalleryCar_Amtrak_Cab_Purchase,   "gfx/Budd_GalleryCar_Amtrak.png") {template_purchase(187, 21)}
spriteset(spriteset_Budd_GalleryCar_Amtrak_Cab,   "gfx/Budd_GalleryCar_Amtrak.png") {template_Old_8(187, 39)}
spriteset(spriteset_Budd_GalleryCar_Amtrak_Cab_Rear,   "gfx/Budd_GalleryCar_Amtrak.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_GalleryCar_Amtrak_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_GalleryCar_Amtrak_Cab_Rear;
    return spriteset_Budd_GalleryCar_Amtrak_Cab;
}

item (FEAT_TRAINS, Item_Budd_GalleryCar_Amtrak_Cab, 48528) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Budd_GalleryCar_Silver_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_GALLERYCAR_CAB);
        introduction_date:                date(1950, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            48 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_GalleryCar_Amtrak_Cab_rearcheck;
    purchase:                            spriteset_Budd_GalleryCar_Amtrak_Cab_Purchase;
    additional_text: string(STR_INFO_BUDD_GALLERYCAR_CAB);
}
}

//Pullman_GalleryCar_Liv0
spriteset(spriteset_Pullman_GalleryCar_Liv0_Purchase,   "gfx/Pullman_GalleryCar_Liv0.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv0,   "gfx/Pullman_GalleryCar_Liv0.png") {template_8(7, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv0_Rear,   "gfx/Pullman_GalleryCar_Liv0.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv0_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv0_Rear;
    return spriteset_Pullman_GalleryCar_Liv0;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv0, 48540) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

//        variant_group: Item_Pullman_GalleryCar_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv0_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv0_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR);
}
}

spriteset(spriteset_Pullman_GalleryCar_Liv0_Cab_Purchase,   "gfx/Pullman_GalleryCar_Liv0.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv0_Cab,   "gfx/Pullman_GalleryCar_Liv0.png") {template_8(187, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv0_Cab_Rear,   "gfx/Pullman_GalleryCar_Liv0.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv0_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv0_Cab_Rear;
    return spriteset_Pullman_GalleryCar_Liv0_Cab;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv0_Cab, 48550) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

//        variant_group: Item_Pullman_GalleryCar_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR_CAB);
        introduction_date:                date(1956, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv0_Cab_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv0_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR_CAB);
}
}

//Pullman_GalleryCar_Liv1
spriteset(spriteset_Pullman_GalleryCar_Liv1_Purchase,   "gfx/Pullman_GalleryCar_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv1,   "gfx/Pullman_GalleryCar_Liv1.png") {template_8(7, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv1_Rear,   "gfx/Pullman_GalleryCar_Liv1.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv1_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv1_Rear;
    return spriteset_Pullman_GalleryCar_Liv1;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv1, 48541) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Pullman_GalleryCar_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv1_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv1_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR);
}
}

spriteset(spriteset_Pullman_GalleryCar_Liv1_Cab_Purchase,   "gfx/Pullman_GalleryCar_Liv1.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv1_Cab,   "gfx/Pullman_GalleryCar_Liv1.png") {template_8(187, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv1_Cab_Rear,   "gfx/Pullman_GalleryCar_Liv1.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv1_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv1_Cab_Rear;
    return spriteset_Pullman_GalleryCar_Liv1_Cab;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv1_Cab, 48551) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Pullman_GalleryCar_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR_CAB);
        introduction_date:                date(1956, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv1_Cab_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv1_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR_CAB);
}
}

//Pullman_GalleryCar_Liv2
spriteset(spriteset_Pullman_GalleryCar_Liv2_Purchase,   "gfx/Pullman_GalleryCar_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv2,   "gfx/Pullman_GalleryCar_Liv2.png") {template_8(7, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv2_Rear,   "gfx/Pullman_GalleryCar_Liv2.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv2_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv2_Rear;
    return spriteset_Pullman_GalleryCar_Liv2;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv2, 48542) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Pullman_GalleryCar_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv2_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv2_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR);
}
}

spriteset(spriteset_Pullman_GalleryCar_Liv2_Cab_Purchase,   "gfx/Pullman_GalleryCar_Liv2.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv2_Cab,   "gfx/Pullman_GalleryCar_Liv2.png") {template_8(187, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv2_Cab_Rear,   "gfx/Pullman_GalleryCar_Liv2.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv2_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv2_Cab_Rear;
    return spriteset_Pullman_GalleryCar_Liv2_Cab;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv2_Cab, 48552) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Pullman_GalleryCar_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR_CAB);
        introduction_date:                date(1956, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv2_Cab_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv2_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR_CAB);
}
}

//Pullman_GalleryCar_Liv3
spriteset(spriteset_Pullman_GalleryCar_Liv3_Purchase,   "gfx/Pullman_GalleryCar_Liv3.png") {template_purchase(7, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv3,   "gfx/Pullman_GalleryCar_Liv3.png") {template_8(7, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv3_Rear,   "gfx/Pullman_GalleryCar_Liv3.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv3_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv3_Rear;
    return spriteset_Pullman_GalleryCar_Liv3;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv3, 48543) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    120;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Pullman_GalleryCar_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv3_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv3_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR);
}
}

spriteset(spriteset_Pullman_GalleryCar_Liv3_Cab_Purchase,   "gfx/Pullman_GalleryCar_Liv3.png") {template_purchase(187, 21)}
spriteset(spriteset_Pullman_GalleryCar_Liv3_Cab,   "gfx/Pullman_GalleryCar_Liv3.png") {template_8(187, 39)}
spriteset(spriteset_Pullman_GalleryCar_Liv3_Cab_Rear,   "gfx/Pullman_GalleryCar_Liv3.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Pullman_GalleryCar_Liv3_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Pullman_GalleryCar_Liv3_Cab_Rear;
    return spriteset_Pullman_GalleryCar_Liv3_Cab;
}

item (FEAT_TRAINS, Item_Pullman_GalleryCar_Liv3_Cab, 48553) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    15;

        variant_group: Item_Pullman_GalleryCar_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PULLMAN_GALLERYCAR_CAB);
        introduction_date:                date(1956, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    160/param_capacity_mod;
    }
    graphics {
    default:                             sw_Pullman_GalleryCar_Liv3_Cab_rearcheck;
    purchase:                            spriteset_Pullman_GalleryCar_Liv3_Cab_Purchase;
    additional_text: string(STR_INFO_PULLMAN_GALLERYCAR_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_Metra_Purchase,   "gfx/BuddComeng_DoubleDecker_Metra.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metra,   "gfx/BuddComeng_DoubleDecker_Metra.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metra_Rear,   "gfx/BuddComeng_DoubleDecker_Metra.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Metra_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Metra_Rear;
    return spriteset_BuddComeng_DoubleDecker_Metra;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Metra, 48741) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Metra_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Metra_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_Metra_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_Metra.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metra_Cab,   "gfx/BuddComeng_DoubleDecker_Metra.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metra_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_Metra.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Metra_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Metra_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_Metra_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Metra_Cab, 48761) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Metra_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Metra_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_Caltrain_Purchase,   "gfx/BuddComeng_DoubleDecker_Caltrain.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Caltrain,   "gfx/BuddComeng_DoubleDecker_Caltrain.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Caltrain_Rear,   "gfx/BuddComeng_DoubleDecker_Caltrain.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Caltrain_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Caltrain_Rear;
    return spriteset_BuddComeng_DoubleDecker_Caltrain;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Caltrain, 48742) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Caltrain_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Caltrain_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_Caltrain_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_Caltrain.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Caltrain_Cab,   "gfx/BuddComeng_DoubleDecker_Caltrain.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Caltrain_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_Caltrain.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Caltrain_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Caltrain_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_Caltrain_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Caltrain_Cab, 48762) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Caltrain_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Caltrain_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_Amtrak_Purchase,   "gfx/BuddComeng_DoubleDecker_Amtrak.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Amtrak,   "gfx/BuddComeng_DoubleDecker_Amtrak.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Amtrak_Rear,   "gfx/BuddComeng_DoubleDecker_Amtrak.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Amtrak_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Amtrak_Rear;
    return spriteset_BuddComeng_DoubleDecker_Amtrak;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Amtrak, 48743) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Amtrak_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Amtrak_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_Amtrak_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_Amtrak.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Amtrak_Cab,   "gfx/BuddComeng_DoubleDecker_Amtrak.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Amtrak_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_Amtrak.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Amtrak_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Amtrak_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_Amtrak_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Amtrak_Cab, 48763) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Amtrak_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Amtrak_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_TopBottom_Purchase,   "gfx/BuddComeng_DoubleDecker_TopBottom.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_TopBottom,   "gfx/BuddComeng_DoubleDecker_TopBottom.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_TopBottom_Rear,   "gfx/BuddComeng_DoubleDecker_TopBottom.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_TopBottom_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_TopBottom_Rear;
    return spriteset_BuddComeng_DoubleDecker_TopBottom;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_TopBottom, 48744) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_TopBottom_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_TopBottom_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_TopBottom_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_TopBottom.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_TopBottom_Cab,   "gfx/BuddComeng_DoubleDecker_TopBottom.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_TopBottom_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_TopBottom.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_TopBottom_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_TopBottom_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_TopBottom_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_TopBottom_Cab, 48764) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_TopBottom_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_TopBottom_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit1_Purchase,   "gfx/BuddComeng_DoubleDecker_GoTransit1.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit1,   "gfx/BuddComeng_DoubleDecker_GoTransit1.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit1_Rear,   "gfx/BuddComeng_DoubleDecker_GoTransit1.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_GoTransit1_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_GoTransit1_Rear;
    return spriteset_BuddComeng_DoubleDecker_GoTransit1;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_GoTransit1, 48745) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_GoTransit1_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_GoTransit1_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit1_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_GoTransit1.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit1_Cab,   "gfx/BuddComeng_DoubleDecker_GoTransit1.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit1_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_GoTransit1.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_GoTransit1_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_GoTransit1_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_GoTransit1_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_GoTransit1_Cab, 48765) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_GoTransit1_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_GoTransit1_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit2_Purchase,   "gfx/BuddComeng_DoubleDecker_GoTransit2.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit2,   "gfx/BuddComeng_DoubleDecker_GoTransit2.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit2_Rear,   "gfx/BuddComeng_DoubleDecker_GoTransit2.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_GoTransit2_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_GoTransit2_Rear;
    return spriteset_BuddComeng_DoubleDecker_GoTransit2;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_GoTransit2, 48746) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_GoTransit2_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_GoTransit2_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit2_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_GoTransit2.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit2_Cab,   "gfx/BuddComeng_DoubleDecker_GoTransit2.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_GoTransit2_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_GoTransit2.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_GoTransit2_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_GoTransit2_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_GoTransit2_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_GoTransit2_Cab, 48766) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_GoTransit2_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_GoTransit2_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink1_Purchase,   "gfx/BuddComeng_DoubleDecker_Metrolink1.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink1,   "gfx/BuddComeng_DoubleDecker_Metrolink1.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink1_Rear,   "gfx/BuddComeng_DoubleDecker_Metrolink1.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Metrolink1_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Metrolink1_Rear;
    return spriteset_BuddComeng_DoubleDecker_Metrolink1;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Metrolink1, 48747) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Metrolink1_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Metrolink1_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink1_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_Metrolink1.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink1_Cab,   "gfx/BuddComeng_DoubleDecker_Metrolink1.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink1_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_Metrolink1.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Metrolink1_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Metrolink1_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_Metrolink1_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Metrolink1_Cab, 48767) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Metrolink1_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Metrolink1_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink2_Purchase,   "gfx/BuddComeng_DoubleDecker_Metrolink2.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink2,   "gfx/BuddComeng_DoubleDecker_Metrolink2.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink2_Rear,   "gfx/BuddComeng_DoubleDecker_Metrolink2.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Metrolink2_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Metrolink2_Rear;
    return spriteset_BuddComeng_DoubleDecker_Metrolink2;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Metrolink2, 48748) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Metrolink2_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Metrolink2_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink2_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_Metrolink2.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink2_Cab,   "gfx/BuddComeng_DoubleDecker_Metrolink2.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_Metrolink2_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_Metrolink2.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_Metrolink2_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_Metrolink2_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_Metrolink2_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_Metrolink2_Cab, 48768) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_Metrolink2_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_Metrolink2_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Budd-Comeng Double-Decker
spriteset(spriteset_BuddComeng_DoubleDecker_MetraSwitching_Purchase,   "gfx/BuddComeng_DoubleDecker_MetraSwitching.png") {template_purchase(7, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_MetraSwitching,   "gfx/BuddComeng_DoubleDecker_MetraSwitching.png") {template_Old_8(7, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_MetraSwitching_Rear,   "gfx/BuddComeng_DoubleDecker_MetraSwitching.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_MetraSwitching_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_MetraSwitching_Rear;
    return spriteset_BuddComeng_DoubleDecker_MetraSwitching;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_MetraSwitching, 48749) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    130;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER);
        introduction_date:                date(1978, 1, 1);

        speed:                            100 mph;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_MetraSwitching_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_MetraSwitching_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER);
}
}

spriteset(spriteset_BuddComeng_DoubleDecker_MetraSwitching_Cab_Purchase,   "gfx/BuddComeng_DoubleDecker_MetraSwitching.png") {template_purchase(187, 21)}
spriteset(spriteset_BuddComeng_DoubleDecker_MetraSwitching_Cab,   "gfx/BuddComeng_DoubleDecker_MetraSwitching.png") {template_Old_8(187, 39)}
spriteset(spriteset_BuddComeng_DoubleDecker_MetraSwitching_Cab_Rear,   "gfx/BuddComeng_DoubleDecker_MetraSwitching.png") {template_Old_8(187, 64)}

switch(FEAT_TRAINS, SELF, sw_BuddComeng_DoubleDecker_MetraSwitching_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_BuddComeng_DoubleDecker_MetraSwitching_Cab_Rear;
    return spriteset_BuddComeng_DoubleDecker_MetraSwitching_Cab;
}

item (FEAT_TRAINS, Item_BuddComeng_DoubleDecker_MetraSwitching_Cab, 48769) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    5;
        running_cost_factor:            6;
        loading_speed:                    30;

        variant_group: Item_BuddComeng_DoubleDecker_Metra_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDDCOMENG_DOUBLEDECKER_CAB);
        introduction_date:                date(1978, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            100 mph;
        power:                            1 hp;
        weight:                            50 ton;
        cargo_capacity:                    230/param_capacity_mod;
    }
    graphics {
    default:                             sw_BuddComeng_DoubleDecker_MetraSwitching_Cab_rearcheck;
    purchase:                            spriteset_BuddComeng_DoubleDecker_MetraSwitching_Cab_Purchase;
    additional_text: string(STR_INFO_BUDDCOMENG_DOUBLEDECKER_CAB);
}
}

//Bombardier_Multilevel_Liv0
spriteset(spriteset_Bombardier_Multilevel_Liv0_Purchase,   "gfx/Bombardier_Multilevel_Liv0.png") {template_purchase(7, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv0,   "gfx/Bombardier_Multilevel_Liv0.png") {template_8(7, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv0_Rear,   "gfx/Bombardier_Multilevel_Liv0.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv0_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv0_Rear;
    return spriteset_Bombardier_Multilevel_Liv0;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv0, 49000) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    110;
        running_cost_factor:            5;
        loading_speed:                    20;

//        variant_group: Item_Bombardier_Multilevel_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL);
        introduction_date:                date(2006, 1, 1);

        speed:                            110 mph;
        weight:                            61 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv0_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv0_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL);
}
}

spriteset(spriteset_Bombardier_Multilevel_Liv0_Cab_Purchase,   "gfx/Bombardier_Multilevel_Liv0.png") {template_purchase(187, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv0_Cab,   "gfx/Bombardier_Multilevel_Liv0.png") {template_8(187, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv0_Cab_Rear,   "gfx/Bombardier_Multilevel_Liv0.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv0_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv0_Cab_Rear;
    return spriteset_Bombardier_Multilevel_Liv0_Cab;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv0_Cab, 49020) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    20;

//        variant_group: Item_Bombardier_Multilevel_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL_CAB);
        introduction_date:                date(2006, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            110 mph;
        power:                            1 hp;
        weight:                            63 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv0_Cab_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv0_Cab_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL_CAB);
}
}

//Bombardier_Multilevel_Liv1
spriteset(spriteset_Bombardier_Multilevel_Liv1_Purchase,   "gfx/Bombardier_Multilevel_Liv1.png") {template_purchase(7, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv1,   "gfx/Bombardier_Multilevel_Liv1.png") {template_8(7, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv1_Rear,   "gfx/Bombardier_Multilevel_Liv1.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv1_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv1_Rear;
    return spriteset_Bombardier_Multilevel_Liv1;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv1, 49001) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    110;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Bombardier_Multilevel_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL);
        introduction_date:                date(2006, 1, 1);

        speed:                            110 mph;
        weight:                            61 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv1_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv1_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL);
}
}

spriteset(spriteset_Bombardier_Multilevel_Liv1_Cab_Purchase,   "gfx/Bombardier_Multilevel_Liv1.png") {template_purchase(187, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv1_Cab,   "gfx/Bombardier_Multilevel_Liv1.png") {template_8(187, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv1_Cab_Rear,   "gfx/Bombardier_Multilevel_Liv1.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv1_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv1_Cab_Rear;
    return spriteset_Bombardier_Multilevel_Liv1_Cab;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv1_Cab, 49021) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Bombardier_Multilevel_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL_CAB);
        introduction_date:                date(2006, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            110 mph;
        power:                            1 hp;
        weight:                            63 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv1_Cab_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv1_Cab_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL_CAB);
}
}

//Bombardier_Multilevel_Liv2
spriteset(spriteset_Bombardier_Multilevel_Liv2_Purchase,   "gfx/Bombardier_Multilevel_Liv2.png") {template_purchase(7, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv2,   "gfx/Bombardier_Multilevel_Liv2.png") {template_8(7, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv2_Rear,   "gfx/Bombardier_Multilevel_Liv2.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv2_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv2_Rear;
    return spriteset_Bombardier_Multilevel_Liv2;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv2, 49002) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    110;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Bombardier_Multilevel_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL);
        introduction_date:                date(2006, 1, 1);

        speed:                            110 mph;
        weight:                            61 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv2_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv2_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL);
}
}

spriteset(spriteset_Bombardier_Multilevel_Liv2_Cab_Purchase,   "gfx/Bombardier_Multilevel_Liv2.png") {template_purchase(187, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv2_Cab,   "gfx/Bombardier_Multilevel_Liv2.png") {template_8(187, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv2_Cab_Rear,   "gfx/Bombardier_Multilevel_Liv2.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv2_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv2_Cab_Rear;
    return spriteset_Bombardier_Multilevel_Liv2_Cab;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv2_Cab, 49022) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Bombardier_Multilevel_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL_CAB);
        introduction_date:                date(2006, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            110 mph;
        power:                            1 hp;
        weight:                            63 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv2_Cab_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv2_Cab_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL_CAB);
}
}

//Bombardier_Multilevel_Liv3
spriteset(spriteset_Bombardier_Multilevel_Liv3_Purchase,   "gfx/Bombardier_Multilevel_Liv3.png") {template_purchase(7, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv3,   "gfx/Bombardier_Multilevel_Liv3.png") {template_8(7, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv3_Rear,   "gfx/Bombardier_Multilevel_Liv3.png") {template_8(7, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv3_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv3_Rear;
    return spriteset_Bombardier_Multilevel_Liv3;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv3, 49003) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    110;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Bombardier_Multilevel_Liv0;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL);
        introduction_date:                date(2006, 1, 1);

        speed:                            110 mph;
        weight:                            61 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv3_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv3_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL);
}
}

spriteset(spriteset_Bombardier_Multilevel_Liv3_Cab_Purchase,   "gfx/Bombardier_Multilevel_Liv3.png") {template_purchase(187, 21)}
spriteset(spriteset_Bombardier_Multilevel_Liv3_Cab,   "gfx/Bombardier_Multilevel_Liv3.png") {template_8(187, 39)}
spriteset(spriteset_Bombardier_Multilevel_Liv3_Cab_Rear,   "gfx/Bombardier_Multilevel_Liv3.png") {template_8(187, 69)}

switch(FEAT_TRAINS, SELF, sw_Bombardier_Multilevel_Liv3_Cab_rearcheck, position_in_consist_from_end){
    0 : spriteset_Bombardier_Multilevel_Liv3_Cab_Rear;
    return spriteset_Bombardier_Multilevel_Liv3_Cab;
}

item (FEAT_TRAINS, Item_Bombardier_Multilevel_Liv3_Cab, 49023) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    4;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Bombardier_Multilevel_Liv0_Cab;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BOMBARDIER_MULTILEVEL_CAB);
        introduction_date:                date(2006, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            110 mph;
        power:                            1 hp;
        weight:                            63 ton;
        cargo_capacity:                    155/param_capacity_mod;
    }
    graphics {
    default:                             sw_Bombardier_Multilevel_Liv3_Cab_rearcheck;
    purchase:                            spriteset_Bombardier_Multilevel_Liv3_Cab_Purchase;
    additional_text: string(STR_INFO_BOMBARDIER_MULTILEVEL_CAB);
}
}

//12Wheel
spriteset(spriteset_12Wheel_Purchase,   "gfx/12Wheel.png") {template_purchase(7, 21)}
spriteset(spriteset_12Wheel,   "gfx/12Wheel.png") {template_Old_8(7, 39)}
spriteset(spriteset_12Wheel_Rear,   "gfx/12Wheel.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_12Wheel_rearcheck, position_in_consist_from_end){
    0 : spriteset_12Wheel_Rear;
    return spriteset_12Wheel;
}

item (FEAT_TRAINS, Item_12Wheel, 50500) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    90;
        running_cost_factor:            2;
        loading_speed:                    10;

//        variant_group: Item_12Wheel;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_12WHEEL);
        introduction_date:                date(1857, 1, 1);

        speed:                            60 mph;
        weight:                            28 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_12Wheel_rearcheck;
    purchase:                            spriteset_12Wheel_Purchase;
    additional_text: string(STR_INFO_12WHEEL);
}
}

//Mail_12Wheel
spriteset(spriteset_Mail_12Wheel_Purchase,   "gfx/12Wheel.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_12Wheel,   "gfx/12Wheel.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_12Wheel_Rear,   "gfx/12Wheel.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_12Wheel_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_12Wheel_Rear;
    return spriteset_Mail_12Wheel;
}

item (FEAT_TRAINS, Item_Mail_12Wheel, 50510) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    90;
        running_cost_factor:            1;
        loading_speed:                    10;

//        variant_group: Item_Mail_12Wheel;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_12WHEEL);
        introduction_date:                date(1857, 1, 1);

        speed:                            60 mph;
        weight:                            28 ton;
        cargo_capacity:                    50/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_12Wheel_rearcheck;
    purchase:                            spriteset_Mail_12Wheel_Purchase;
    additional_text: string(STR_INFO_MAIL_12WHEEL);
}
}

//12Wheel_Stripe
spriteset(spriteset_12Wheel_Stripe_Purchase,   "gfx/12Wheel_Stripe.png") {template_purchase(7, 21)}
spriteset(spriteset_12Wheel_Stripe,   "gfx/12Wheel_Stripe.png") {template_Old_8(7, 39)}
spriteset(spriteset_12Wheel_Stripe_Rear,   "gfx/12Wheel_Stripe.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_12Wheel_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_12Wheel_Stripe_Rear;
    return spriteset_12Wheel_Stripe;
}

item (FEAT_TRAINS, Item_12Wheel_Stripe, 50501) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    90;
        running_cost_factor:            2;
        loading_speed:                    10;

        variant_group: Item_12Wheel;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_12WHEEL);
        introduction_date:                date(1857, 1, 1);

        speed:                            80 mph;
        weight:                            28 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_12Wheel_Stripe_rearcheck;
    purchase:                            spriteset_12Wheel_Stripe_Purchase;
    additional_text: string(STR_INFO_12WHEEL);
}
}

//Mail_12Wheel_Stripe
spriteset(spriteset_Mail_12Wheel_Stripe_Purchase,   "gfx/12Wheel_Stripe.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_12Wheel_Stripe,   "gfx/12Wheel_Stripe.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_12Wheel_Stripe_Rear,   "gfx/12Wheel_Stripe.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_12Wheel_Stripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_12Wheel_Stripe_Rear;
    return spriteset_Mail_12Wheel_Stripe;
}

item (FEAT_TRAINS, Item_Mail_12Wheel_Stripe, 50511) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    90;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_Mail_12Wheel;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_12WHEEL);
        introduction_date:                date(1857, 1, 1);

        speed:                            80 mph;
        weight:                            28 ton;
        cargo_capacity:                    50/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_12Wheel_Stripe_rearcheck;
    purchase:                            spriteset_Mail_12Wheel_Stripe_Purchase;
    additional_text: string(STR_INFO_MAIL_12WHEEL);
}
}

//12Wheel_BodyStripe
spriteset(spriteset_12Wheel_BodyStripe_Purchase,   "gfx/12Wheel_BodyStripe.png") {template_purchase(7, 21)}
spriteset(spriteset_12Wheel_BodyStripe,   "gfx/12Wheel_BodyStripe.png") {template_Old_8(7, 39)}
spriteset(spriteset_12Wheel_BodyStripe_Rear,   "gfx/12Wheel_BodyStripe.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_12Wheel_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_12Wheel_BodyStripe_Rear;
    return spriteset_12Wheel_BodyStripe;
}

item (FEAT_TRAINS, Item_12Wheel_BodyStripe, 50502) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    90;
        running_cost_factor:            2;
        loading_speed:                    10;

        variant_group: Item_12Wheel;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_12WHEEL);
        introduction_date:                date(1857, 1, 1);

        speed:                            80 mph;
        weight:                            28 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_12Wheel_BodyStripe_rearcheck;
    purchase:                            spriteset_12Wheel_BodyStripe_Purchase;
    additional_text: string(STR_INFO_12WHEEL);
}
}

//Mail_12Wheel_BodyStripe
spriteset(spriteset_Mail_12Wheel_BodyStripe_Purchase,   "gfx/12Wheel_BodyStripe.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_12Wheel_BodyStripe,   "gfx/12Wheel_BodyStripe.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_12Wheel_BodyStripe_Rear,   "gfx/12Wheel_BodyStripe.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_12Wheel_BodyStripe_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_12Wheel_BodyStripe_Rear;
    return spriteset_Mail_12Wheel_BodyStripe;
}

item (FEAT_TRAINS, Item_Mail_12Wheel_BodyStripe, 50512) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    90;
        running_cost_factor:            1;
        loading_speed:                    10;

        variant_group: Item_Mail_12Wheel;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_12WHEEL);
        introduction_date:                date(1857, 1, 1);

        speed:                            80 mph;
        weight:                            28 ton;
        cargo_capacity:                    50/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_12Wheel_BodyStripe_rearcheck;
    purchase:                            spriteset_Mail_12Wheel_BodyStripe_Purchase;
    additional_text: string(STR_INFO_MAIL_12WHEEL);
}
}

//PRR_P70_Liv0
spriteset(spriteset_PRR_P70_Liv0_Purchase,   "gfx/PRR_P70_Liv0.png") {template_purchase(7, 21)}
spriteset(spriteset_PRR_P70_Liv0,   "gfx/PRR_P70_Liv0.png") {template_8(7, 39)}
spriteset(spriteset_PRR_P70_Liv0_Diner,   "gfx/PRR_P70_Liv0.png") {template_8(7, 69)}
spriteset(spriteset_PRR_P70_Liv0_Rear,   "gfx/PRR_P70_Liv0.png") {template_8(7, 99)}

switch(FEAT_TRAINS, SELF, sw_PRR_P70_Liv0_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_PRR_P70_Liv0_Diner;
  spriteset_PRR_P70_Liv0;
}

switch(FEAT_TRAINS, SELF, sw_PRR_P70_Liv0_rearcheck, position_in_consist_from_end){
    0 : spriteset_PRR_P70_Liv0_Rear;
    return sw_PRR_P70_Liv0_dinerposition;
}

item (FEAT_TRAINS, Item_PRR_P70_Liv0, 51000) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    115;
        running_cost_factor:            2;
        loading_speed:                    10;

//        variant_group: Item_PRR_P70_Liv0;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PRR_P70);
        introduction_date:                date(1907, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_PRR_P70_Liv0_rearcheck;
    purchase:                            spriteset_PRR_P70_Liv0_Purchase;
    additional_text: string(STR_INFO_PRR_P70);
}
}

//Observation_PRR_P70_Liv0
spriteset(spriteset_Observation_PRR_P70_Liv0_Purchase,   "gfx/PRR_P70_Liv0.png") {template_purchase(187, 21)}
spriteset(spriteset_Observation_PRR_P70_Liv0,   "gfx/PRR_P70_Liv0.png") {template_8(187, 39)}
spriteset(spriteset_Observation_PRR_P70_Liv0_Rear,   "gfx/PRR_P70_Liv0.png") {template_8(187, 69)}


switch(FEAT_TRAINS, SELF, sw_Observation_PRR_P70_Liv0_rearcheck, position_in_consist_from_end){
    0 : spriteset_Observation_PRR_P70_Liv0_Rear;
    return spriteset_Observation_PRR_P70_Liv0;
}

item (FEAT_TRAINS, Item_Observation_PRR_P70_Liv0, 51010) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    115;
        running_cost_factor:            2;
        loading_speed:                    10;

//        variant_group: Item_Observation_PRR_P70_Liv0;
//        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_OBSERVATION_PRR_P70);
        introduction_date:                date(1907, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    96/param_capacity_mod;
    }
    graphics {
    default:                             sw_Observation_PRR_P70_Liv0_rearcheck;
    purchase:                            spriteset_Observation_PRR_P70_Liv0_Purchase;
    additional_text: string(STR_INFO_PRR_P70);
}
}

//Budd_Keystone_PRR
spriteset(spriteset_Budd_Keystone_PRR_Purchase,   "gfx/Budd_Keystone_PRR.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Keystone_PRR,   "gfx/Budd_Keystone_PRR.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Keystone_PRR_Rear,   "gfx/Budd_Keystone_PRR.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Keystone_PRR_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Keystone_PRR_Rear;
    return spriteset_Budd_Keystone_PRR;
}

item (FEAT_TRAINS, Item_Budd_Keystone_PRR, 50542) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    100;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Keystone_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_KEYSTONE);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            41 ton;
        cargo_capacity:                    82/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Keystone_PRR_rearcheck;
    purchase:                            spriteset_Budd_Keystone_PRR_Purchase;
    additional_text: string(STR_INFO_BUDD_KEYSTONE);
}
}

//Budd_Keystone_Tube
spriteset(spriteset_Budd_Keystone_Tube_Purchase,   "gfx/Budd_Keystone_Tube.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Keystone_Tube,   "gfx/Budd_Keystone_Tube.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Keystone_Tube_Rear,   "gfx/Budd_Keystone_Tube.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Keystone_Tube_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Keystone_Tube_Rear;
    return spriteset_Budd_Keystone_Tube;
}

item (FEAT_TRAINS, Item_Budd_Keystone_Tube, 50543) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    100;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Keystone_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_KEYSTONE);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            41 ton;
        cargo_capacity:                    82/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Keystone_Tube_rearcheck;
    purchase:                            spriteset_Budd_Keystone_Tube_Purchase;
    additional_text: string(STR_INFO_BUDD_KEYSTONE);
}
}

//Budd_Keystone_AmtrakPHII
spriteset(spriteset_Budd_Keystone_AmtrakPHII_Purchase,   "gfx/Budd_Keystone_AmtrakPHII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Keystone_AmtrakPHII,   "gfx/Budd_Keystone_AmtrakPHII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Keystone_AmtrakPHII_Rear,   "gfx/Budd_Keystone_AmtrakPHII.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Keystone_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Keystone_AmtrakPHII_Rear;
    return spriteset_Budd_Keystone_AmtrakPHII;
}

item (FEAT_TRAINS, Item_Budd_Keystone_AmtrakPHII, 50544) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    100;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Keystone_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_KEYSTONE);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            41 ton;
        cargo_capacity:                    82/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Keystone_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Budd_Keystone_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_BUDD_KEYSTONE);
}
}

//Budd_Keystone_AmtrakPHIII
spriteset(spriteset_Budd_Keystone_AmtrakPHIII_Purchase,   "gfx/Budd_Keystone_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Keystone_AmtrakPHIII,   "gfx/Budd_Keystone_AmtrakPHIII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Keystone_AmtrakPHIII_Rear,   "gfx/Budd_Keystone_AmtrakPHIII.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Keystone_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Keystone_AmtrakPHIII_Rear;
    return spriteset_Budd_Keystone_AmtrakPHIII;
}

item (FEAT_TRAINS, Item_Budd_Keystone_AmtrakPHIII, 50545) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    100;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Keystone_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_KEYSTONE);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            41 ton;
        cargo_capacity:                    82/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Keystone_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Budd_Keystone_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_BUDD_KEYSTONE);
}
}

//Budd_Keystone_AmtrakPHIV
spriteset(spriteset_Budd_Keystone_AmtrakPHIV_Purchase,   "gfx/Budd_Keystone_AmtrakPHIV.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Keystone_AmtrakPHIV,   "gfx/Budd_Keystone_AmtrakPHIV.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Keystone_AmtrakPHIV_Rear,   "gfx/Budd_Keystone_AmtrakPHIV.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Keystone_AmtrakPHIV_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Keystone_AmtrakPHIV_Rear;
    return spriteset_Budd_Keystone_AmtrakPHIV;
}

item (FEAT_TRAINS, Item_Budd_Keystone_AmtrakPHIV, 50546) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    100;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Keystone_PRR;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_KEYSTONE);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            41 ton;
        cargo_capacity:                    82/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Keystone_AmtrakPHIV_rearcheck;
    purchase:                            spriteset_Budd_Keystone_AmtrakPHIV_Purchase;
    additional_text: string(STR_INFO_BUDD_KEYSTONE);
}
}

//PioneerIIIIntercityCar_Production
spriteset(spriteset_PioneerIIIIntercityCar_Production_Purchase,   "gfx/PioneerIIIIntercityCar_Production.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIIIIntercityCar_Production,   "gfx/PioneerIIIIntercityCar_Production.png") {template_Old_8(7, 39)}
spriteset(spriteset_PioneerIIIIntercityCar_Production_Rear,   "gfx/PioneerIIIIntercityCar_Production.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PioneerIIIIntercityCar_Production_rearcheck, position_in_consist_from_end){
    0 : spriteset_PioneerIIIIntercityCar_Production_Rear;
    return spriteset_PioneerIIIIntercityCar_Production;
}

item (FEAT_TRAINS, Item_PioneerIIIIntercityCar_Production, 50561) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            3;
        loading_speed:                    10;

        variant_group: Item_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    88/param_capacity_mod;
    }
    graphics {
    default:                             sw_PioneerIIIIntercityCar_Production_rearcheck;
    purchase:                            spriteset_PioneerIIIIntercityCar_Production_Purchase;
    additional_text: string(STR_INFO_PIONEERIIIINTERCITYCAR);
}
}

//Mail_PioneerIIIIntercityCar_Production
spriteset(spriteset_Mail_PioneerIIIIntercityCar_Production_Purchase,   "gfx/PioneerIIIIntercityCar_Production.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_Production,   "gfx/PioneerIIIIntercityCar_Production.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_Production_Rear,   "gfx/PioneerIIIIntercityCar_Production.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_PioneerIIIIntercityCar_Production_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_PioneerIIIIntercityCar_Production_Rear;
    return spriteset_Mail_PioneerIIIIntercityCar_Production;
}

item (FEAT_TRAINS, Item_Mail_PioneerIIIIntercityCar_Production, 50571) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            2;
        loading_speed:                    10;

        variant_group: Item_Mail_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_PioneerIIIIntercityCar_Production_rearcheck;
    purchase:                            spriteset_Mail_PioneerIIIIntercityCar_Production_Purchase;
    additional_text: string(STR_INFO_MAIL_PIONEERIIIINTERCITYCAR);
}
}

//PioneerIIIIntercityCar_PRR
spriteset(spriteset_PioneerIIIIntercityCar_PRR_Purchase,   "gfx/PioneerIIIIntercityCar_PRR.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIIIIntercityCar_PRR,   "gfx/PioneerIIIIntercityCar_PRR.png") {template_Old_8(7, 39)}
spriteset(spriteset_PioneerIIIIntercityCar_PRR_Rear,   "gfx/PioneerIIIIntercityCar_PRR.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PioneerIIIIntercityCar_PRR_rearcheck, position_in_consist_from_end){
    0 : spriteset_PioneerIIIIntercityCar_PRR_Rear;
    return spriteset_PioneerIIIIntercityCar_PRR;
}

item (FEAT_TRAINS, Item_PioneerIIIIntercityCar_PRR, 50562) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            3;
        loading_speed:                    10;

        variant_group: Item_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    88/param_capacity_mod;
    }
    graphics {
    default:                             sw_PioneerIIIIntercityCar_PRR_rearcheck;
    purchase:                            spriteset_PioneerIIIIntercityCar_PRR_Purchase;
    additional_text: string(STR_INFO_PIONEERIIIINTERCITYCAR);
}
}

//Mail_PioneerIIIIntercityCar_PRR
spriteset(spriteset_Mail_PioneerIIIIntercityCar_PRR_Purchase,   "gfx/PioneerIIIIntercityCar_PRR.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_PRR,   "gfx/PioneerIIIIntercityCar_PRR.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_PRR_Rear,   "gfx/PioneerIIIIntercityCar_PRR.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_PioneerIIIIntercityCar_PRR_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_PioneerIIIIntercityCar_PRR_Rear;
    return spriteset_Mail_PioneerIIIIntercityCar_PRR;
}

item (FEAT_TRAINS, Item_Mail_PioneerIIIIntercityCar_PRR, 50572) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            2;
        loading_speed:                    10;

        variant_group: Item_Mail_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_PioneerIIIIntercityCar_PRR_rearcheck;
    purchase:                            spriteset_Mail_PioneerIIIIntercityCar_PRR_Purchase;
    additional_text: string(STR_INFO_MAIL_PIONEERIIIINTERCITYCAR);
}
}

//PioneerIIIIntercityCar_AmtrakPHII
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHII_Purchase,   "gfx/PioneerIIIIntercityCar_AmtrakPHII.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHII,   "gfx/PioneerIIIIntercityCar_AmtrakPHII.png") {template_Old_8(7, 39)}
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHII_Rear,   "gfx/PioneerIIIIntercityCar_AmtrakPHII.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PioneerIIIIntercityCar_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_PioneerIIIIntercityCar_AmtrakPHII_Rear;
    return spriteset_PioneerIIIIntercityCar_AmtrakPHII;
}

item (FEAT_TRAINS, Item_PioneerIIIIntercityCar_AmtrakPHII, 50563) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            3;
        loading_speed:                    10;

        variant_group: Item_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    88/param_capacity_mod;
    }
    graphics {
    default:                             sw_PioneerIIIIntercityCar_AmtrakPHII_rearcheck;
    purchase:                            spriteset_PioneerIIIIntercityCar_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_PIONEERIIIINTERCITYCAR);
}
}

//Mail_PioneerIIIIntercityCar_AmtrakPHII
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHII_Purchase,   "gfx/PioneerIIIIntercityCar_AmtrakPHII.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHII,   "gfx/PioneerIIIIntercityCar_AmtrakPHII.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHII_Rear,   "gfx/PioneerIIIIntercityCar_AmtrakPHII.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_PioneerIIIIntercityCar_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHII_Rear;
    return spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHII;
}

item (FEAT_TRAINS, Item_Mail_PioneerIIIIntercityCar_AmtrakPHII, 50573) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            2;
        loading_speed:                    10;

        variant_group: Item_Mail_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_PioneerIIIIntercityCar_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_MAIL_PIONEERIIIINTERCITYCAR);
}
}

//PioneerIIIIntercityCar_AmtrakPHIII
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHIII_Purchase,   "gfx/PioneerIIIIntercityCar_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHIII,   "gfx/PioneerIIIIntercityCar_AmtrakPHIII.png") {template_Old_8(7, 39)}
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHIII_Rear,   "gfx/PioneerIIIIntercityCar_AmtrakPHIII.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PioneerIIIIntercityCar_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_PioneerIIIIntercityCar_AmtrakPHIII_Rear;
    return spriteset_PioneerIIIIntercityCar_AmtrakPHIII;
}

item (FEAT_TRAINS, Item_PioneerIIIIntercityCar_AmtrakPHIII, 50564) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            3;
        loading_speed:                    10;

        variant_group: Item_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    88/param_capacity_mod;
    }
    graphics {
    default:                             sw_PioneerIIIIntercityCar_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_PioneerIIIIntercityCar_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_PIONEERIIIINTERCITYCAR);
}
}

//Mail_PioneerIIIIntercityCar_AmtrakPHIII
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIII_Purchase,   "gfx/PioneerIIIIntercityCar_AmtrakPHIII.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIII,   "gfx/PioneerIIIIntercityCar_AmtrakPHIII.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIII_Rear,   "gfx/PioneerIIIIntercityCar_AmtrakPHIII.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_PioneerIIIIntercityCar_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIII_Rear;
    return spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIII;
}

item (FEAT_TRAINS, Item_Mail_PioneerIIIIntercityCar_AmtrakPHIII, 50574) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            2;
        loading_speed:                    10;

        variant_group: Item_Mail_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_PioneerIIIIntercityCar_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_MAIL_PIONEERIIIINTERCITYCAR);
}
}

//PioneerIIIIntercityCar_AmtrakPHIV
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHIV_Purchase,   "gfx/PioneerIIIIntercityCar_AmtrakPHIV.png") {template_purchase(7, 21)}
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHIV,   "gfx/PioneerIIIIntercityCar_AmtrakPHIV.png") {template_Old_8(7, 39)}
spriteset(spriteset_PioneerIIIIntercityCar_AmtrakPHIV_Rear,   "gfx/PioneerIIIIntercityCar_AmtrakPHIV.png") {template_Old_8(7, 64)}

switch(FEAT_TRAINS, SELF, sw_PioneerIIIIntercityCar_AmtrakPHIV_rearcheck, position_in_consist_from_end){
    0 : spriteset_PioneerIIIIntercityCar_AmtrakPHIV_Rear;
    return spriteset_PioneerIIIIntercityCar_AmtrakPHIV;
}

item (FEAT_TRAINS, Item_PioneerIIIIntercityCar_AmtrakPHIV, 50565) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            3;
        loading_speed:                    10;

        variant_group: Item_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    88/param_capacity_mod;
    }
    graphics {
    default:                             sw_PioneerIIIIntercityCar_AmtrakPHIV_rearcheck;
    purchase:                            spriteset_PioneerIIIIntercityCar_AmtrakPHIV_Purchase;
    additional_text: string(STR_INFO_PIONEERIIIINTERCITYCAR);
}
}

//Mail_PioneerIIIIntercityCar_AmtrakPHIV
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIV_Purchase,   "gfx/PioneerIIIIntercityCar_AmtrakPHIV.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIV,   "gfx/PioneerIIIIntercityCar_AmtrakPHIV.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIV_Rear,   "gfx/PioneerIIIIntercityCar_AmtrakPHIV.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_PioneerIIIIntercityCar_AmtrakPHIV_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIV_Rear;
    return spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIV;
}

item (FEAT_TRAINS, Item_Mail_PioneerIIIIntercityCar_AmtrakPHIV, 50575) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            2;
        loading_speed:                    10;

        variant_group: Item_Mail_PioneerIIIIntercityCar_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_PIONEERIIIINTERCITYCAR);
        introduction_date:                date(1956, 1, 1);

        speed:                            110 mph;
        weight:                            24 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_PioneerIIIIntercityCar_AmtrakPHIV_rearcheck;
    purchase:                            spriteset_Mail_PioneerIIIIntercityCar_AmtrakPHIV_Purchase;
    additional_text: string(STR_INFO_MAIL_PIONEERIIIINTERCITYCAR);
}
}

//Budd_Amfleet_AmtrakPHII
spriteset(spriteset_Budd_Amfleet_AmtrakPHII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHII,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHII_Diner,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHII_Rear,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AmtrakPHII_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_Amfleet_AmtrakPHII_Diner;
  spriteset_Budd_Amfleet_AmtrakPHII;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Amfleet_AmtrakPHII_Rear;
    return sw_Budd_Amfleet_AmtrakPHII_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_Amfleet_AmtrakPHII, 50701) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Amfleet_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Budd_Amfleet_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_BUDD_AMFLEET);
}
}

spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_purchase(367, 21)}
spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHII,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(367, 39)}
spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHII_Rear,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(367, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Cab_Amfleet_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Cab_Amfleet_AmtrakPHII_Rear;
    return spriteset_Budd_Cab_Amfleet_AmtrakPHII;
}

item (FEAT_TRAINS, Item_Budd_Cab_Amfleet_AmtrakPHII, 50711) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Cab_Amfleet_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Budd_Cab_Amfleet_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_BUDD_CAB_AMFLEET);
}
}

//Mail_Budd_Amfleet_AmtrakPHII
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHII,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHII_Rear,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Amfleet_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Amfleet_AmtrakPHII_Rear;
    return spriteset_Mail_Budd_Amfleet_AmtrakPHII;
}

item (FEAT_TRAINS, Item_Mail_Budd_Amfleet_AmtrakPHII, 50721) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Amfleet_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Mail_Budd_Amfleet_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_AMFLEET);
}
}

spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_purchase(547, 21)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHII,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(547, 39)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHII_Rear,   "gfx/Budd_Amfleet_AmtrakPHII.png") {template_Old_8(547, 64)}

switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Cab_Amfleet_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHII_Rear;
    return spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHII;
}

item (FEAT_TRAINS, Item_Mail_Budd_Cab_Amfleet_AmtrakPHII, 50732) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                MAIL;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Cab_Amfleet_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_CAB_AMFLEET);
}
}

//Budd_Amfleet_AmtrakPHIII
spriteset(spriteset_Budd_Amfleet_AmtrakPHIII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHIII,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHIII_Diner,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHIII_Rear,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AmtrakPHIII_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_Amfleet_AmtrakPHIII_Diner;
  spriteset_Budd_Amfleet_AmtrakPHIII;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Amfleet_AmtrakPHIII_Rear;
    return sw_Budd_Amfleet_AmtrakPHIII_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_Amfleet_AmtrakPHIII, 50702) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Amfleet_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Budd_Amfleet_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_BUDD_AMFLEET);
}
}

spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHIII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_purchase(367, 21)}
spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHIII,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(367, 39)}
spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHIII_Rear,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(367, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Cab_Amfleet_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Cab_Amfleet_AmtrakPHIII_Rear;
    return spriteset_Budd_Cab_Amfleet_AmtrakPHIII;
}

item (FEAT_TRAINS, Item_Budd_Cab_Amfleet_AmtrakPHIII, 50712) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Cab_Amfleet_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Budd_Cab_Amfleet_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_BUDD_CAB_AMFLEET);
}
}

//Mail_Budd_Amfleet_AmtrakPHIII
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHIII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHIII,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHIII_Rear,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Amfleet_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Amfleet_AmtrakPHIII_Rear;
    return spriteset_Mail_Budd_Amfleet_AmtrakPHIII;
}

item (FEAT_TRAINS, Item_Mail_Budd_Amfleet_AmtrakPHIII, 50722) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Amfleet_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Mail_Budd_Amfleet_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_AMFLEET);
}
}

spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIII_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_purchase(547, 21)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIII,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(547, 39)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIII_Rear,   "gfx/Budd_Amfleet_AmtrakPHIII.png") {template_Old_8(547, 64)}

switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Cab_Amfleet_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIII_Rear;
    return spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIII;
}

item (FEAT_TRAINS, Item_Mail_Budd_Cab_Amfleet_AmtrakPHIII, 50732) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                MAIL;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Cab_Amfleet_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_CAB_AMFLEET);
}
}

//Budd_Amfleet_AmtrakPHIV
spriteset(spriteset_Budd_Amfleet_AmtrakPHIV_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHIV,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHIV_Diner,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_Amfleet_AmtrakPHIV_Rear,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AmtrakPHIV_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_Amfleet_AmtrakPHIV_Diner;
  spriteset_Budd_Amfleet_AmtrakPHIV;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AmtrakPHIV_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Amfleet_AmtrakPHIV_Rear;
    return sw_Budd_Amfleet_AmtrakPHIV_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_Amfleet_AmtrakPHIV, 50703) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Amfleet_AmtrakPHIV_rearcheck;
    purchase:                            spriteset_Budd_Amfleet_AmtrakPHIV_Purchase;
    additional_text: string(STR_INFO_BUDD_AMFLEET);
}
}

spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHIV_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_purchase(367, 21)}
spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHIV,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(367, 39)}
spriteset(spriteset_Budd_Cab_Amfleet_AmtrakPHIV_Rear,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(367, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Cab_Amfleet_AmtrakPHIV_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Cab_Amfleet_AmtrakPHIV_Rear;
    return spriteset_Budd_Cab_Amfleet_AmtrakPHIV;
}

item (FEAT_TRAINS, Item_Budd_Cab_Amfleet_AmtrakPHIV, 50713) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Cab_Amfleet_AmtrakPHIV_rearcheck;
    purchase:                            spriteset_Budd_Cab_Amfleet_AmtrakPHIV_Purchase;
    additional_text: string(STR_INFO_BUDD_CAB_AMFLEET);
}
}

//Mail_Budd_Amfleet_AmtrakPHIV
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHIV_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHIV,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_Budd_Amfleet_AmtrakPHIV_Rear,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Amfleet_AmtrakPHIV_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Amfleet_AmtrakPHIV_Rear;
    return spriteset_Mail_Budd_Amfleet_AmtrakPHIV;
}

item (FEAT_TRAINS, Item_Mail_Budd_Amfleet_AmtrakPHIV, 50723) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Amfleet_AmtrakPHIV_rearcheck;
    purchase:                            spriteset_Mail_Budd_Amfleet_AmtrakPHIV_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_AMFLEET);
}
}

spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIV_Purchase,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_purchase(547, 21)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIV,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(547, 39)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIV_Rear,   "gfx/Budd_Amfleet_AmtrakPHIV.png") {template_Old_8(547, 64)}

switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Cab_Amfleet_AmtrakPHIV_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIV_Rear;
    return spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIV;
}

item (FEAT_TRAINS, Item_Mail_Budd_Cab_Amfleet_AmtrakPHIV, 50733) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                MAIL;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Cab_Amfleet_AmtrakPHIV_rearcheck;
    purchase:                            spriteset_Mail_Budd_Cab_Amfleet_AmtrakPHIV_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_CAB_AMFLEET);
}
}

//Budd_Amfleet_ConferenceCar
spriteset(spriteset_Budd_Cab_Amfleet_ConferenceCar_Purchase,   "gfx/Budd_Amfleet_ConferenceCar.png") {template_purchase(367, 21)}
spriteset(spriteset_Budd_Cab_Amfleet_ConferenceCar,   "gfx/Budd_Amfleet_ConferenceCar.png") {template_Old_8(367, 39)}
spriteset(spriteset_Budd_Cab_Amfleet_ConferenceCar_Rear,   "gfx/Budd_Amfleet_ConferenceCar.png") {template_Old_8(367, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Cab_Amfleet_ConferenceCar_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Cab_Amfleet_ConferenceCar_Rear;
    return spriteset_Budd_Cab_Amfleet_ConferenceCar;
}

item (FEAT_TRAINS, Item_Budd_Cab_Amfleet_ConferenceCar, 50734) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Cab_Amfleet_ConferenceCar_rearcheck;
    purchase:                            spriteset_Budd_Cab_Amfleet_ConferenceCar_Purchase;
    additional_text: string(STR_INFO_BUDD_CAB_AMFLEET);
}
}

//Budd_Amfleet_AcelaRegional
spriteset(spriteset_Budd_Amfleet_AcelaRegional_Purchase,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Amfleet_AcelaRegional,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Amfleet_AcelaRegional_Diner,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_Amfleet_AcelaRegional_Rear,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AcelaRegional_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_Amfleet_AcelaRegional_Diner;
  spriteset_Budd_Amfleet_AcelaRegional;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_AcelaRegional_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Amfleet_AcelaRegional_Rear;
    return sw_Budd_Amfleet_AcelaRegional_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_Amfleet_AcelaRegional, 50705) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Amfleet_AcelaRegional_rearcheck;
    purchase:                            spriteset_Budd_Amfleet_AcelaRegional_Purchase;
    additional_text: string(STR_INFO_BUDD_AMFLEET);
}
}

spriteset(spriteset_Budd_Cab_Amfleet_AcelaRegional_Purchase,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_purchase(367, 21)}
spriteset(spriteset_Budd_Cab_Amfleet_AcelaRegional,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(367, 39)}
spriteset(spriteset_Budd_Cab_Amfleet_AcelaRegional_Rear,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(367, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Cab_Amfleet_AcelaRegional_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Cab_Amfleet_AcelaRegional_Rear;
    return spriteset_Budd_Cab_Amfleet_AcelaRegional;
}

item (FEAT_TRAINS, Item_Budd_Cab_Amfleet_AcelaRegional, 50715) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Cab_Amfleet_AcelaRegional_rearcheck;
    purchase:                            spriteset_Budd_Cab_Amfleet_AcelaRegional_Purchase;
    additional_text: string(STR_INFO_BUDD_CAB_AMFLEET);
}
}

//Mail_Budd_Amfleet_AcelaRegional
spriteset(spriteset_Mail_Budd_Amfleet_AcelaRegional_Purchase,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_Budd_Amfleet_AcelaRegional,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_Budd_Amfleet_AcelaRegional_Rear,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Amfleet_AcelaRegional_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Amfleet_AcelaRegional_Rear;
    return spriteset_Mail_Budd_Amfleet_AcelaRegional;
}

item (FEAT_TRAINS, Item_Mail_Budd_Amfleet_AcelaRegional, 50725) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Amfleet_AcelaRegional_rearcheck;
    purchase:                            spriteset_Mail_Budd_Amfleet_AcelaRegional_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_AMFLEET);
}
}

spriteset(spriteset_Mail_Budd_Cab_Amfleet_AcelaRegional_Purchase,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_purchase(547, 21)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AcelaRegional,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(547, 39)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_AcelaRegional_Rear,   "gfx/Budd_Amfleet_AcelaRegional.png") {template_Old_8(547, 64)}

switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Cab_Amfleet_AcelaRegional_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Cab_Amfleet_AcelaRegional_Rear;
    return spriteset_Mail_Budd_Cab_Amfleet_AcelaRegional;
}

item (FEAT_TRAINS, Item_Mail_Budd_Cab_Amfleet_AcelaRegional, 50735) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                MAIL;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Cab_Amfleet_AcelaRegional_rearcheck;
    purchase:                            spriteset_Mail_Budd_Cab_Amfleet_AcelaRegional_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_CAB_AMFLEET);
}
}

//Budd_Amfleet_Via
spriteset(spriteset_Budd_Amfleet_Via_Purchase,   "gfx/Budd_Amfleet_Via.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_Amfleet_Via,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_Amfleet_Via_Diner,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_Amfleet_Via_Rear,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_Via_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_Amfleet_Via_Diner;
  spriteset_Budd_Amfleet_Via;
}

switch(FEAT_TRAINS, SELF, sw_Budd_Amfleet_Via_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Amfleet_Via_Rear;
    return sw_Budd_Amfleet_Via_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_Amfleet_Via, 50706) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Amfleet_Via_rearcheck;
    purchase:                            spriteset_Budd_Amfleet_Via_Purchase;
    additional_text: string(STR_INFO_BUDD_AMFLEET);
}
}

spriteset(spriteset_Budd_Cab_Amfleet_Via_Purchase,   "gfx/Budd_Amfleet_Via.png") {template_purchase(367, 21)}
spriteset(spriteset_Budd_Cab_Amfleet_Via,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(367, 39)}
spriteset(spriteset_Budd_Cab_Amfleet_Via_Rear,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(367, 64)}

switch(FEAT_TRAINS, SELF, sw_Budd_Cab_Amfleet_Via_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_Cab_Amfleet_Via_Rear;
    return spriteset_Budd_Cab_Amfleet_Via;
}

item (FEAT_TRAINS, Item_Budd_Cab_Amfleet_Via, 50716) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    84/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_Cab_Amfleet_Via_rearcheck;
    purchase:                            spriteset_Budd_Cab_Amfleet_Via_Purchase;
    additional_text: string(STR_INFO_BUDD_CAB_AMFLEET);
}
}

//Mail_Budd_Amfleet_Via
spriteset(spriteset_Mail_Budd_Amfleet_Via_Purchase,   "gfx/Budd_Amfleet_Via.png") {template_purchase(187, 21)}
spriteset(spriteset_Mail_Budd_Amfleet_Via,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(187, 39)}
spriteset(spriteset_Mail_Budd_Amfleet_Via_Rear,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(187, 64)}


switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Amfleet_Via_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Amfleet_Via_Rear;
    return spriteset_Mail_Budd_Amfleet_Via;
}

item (FEAT_TRAINS, Item_Mail_Budd_Amfleet_Via, 50726) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, JAVA, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    105;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_AMFLEET);
        introduction_date:                date(1975, 1, 1);

        speed:                            125 mph;
        weight:                            48 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Amfleet_Via_rearcheck;
    purchase:                            spriteset_Mail_Budd_Amfleet_Via_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_AMFLEET);
}
}

spriteset(spriteset_Mail_Budd_Cab_Amfleet_Via_Purchase,   "gfx/Budd_Amfleet_Via.png") {template_purchase(547, 21)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_Via,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(547, 39)}
spriteset(spriteset_Mail_Budd_Cab_Amfleet_Via_Rear,   "gfx/Budd_Amfleet_Via.png") {template_Old_8(547, 64)}

switch(FEAT_TRAINS, SELF, sw_Mail_Budd_Cab_Amfleet_Via_rearcheck, position_in_consist_from_end){
    0 : spriteset_Mail_Budd_Cab_Amfleet_Via_Rear;
    return spriteset_Mail_Budd_Cab_Amfleet_Via;
}

item (FEAT_TRAINS, Item_Mail_Budd_Cab_Amfleet_Via, 50736) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_ARMOURED);
        cargo_allow_refit:               [ MAIL, GOOD, FOOD, BEER, FRUT, FISH, VALU, GOLD, DIAM, DYES, ENSP, FERT, MILK, MNSP, FMSP];
		cargo_disallow_refit: [PASS, TOUR, COAL, OIL_, LVST, GRAI, WOOD, IORE, STEL, PAPR, WHEA, RUBR, MAIZ, CORE, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, AORE, BDMT, BRCK, CERA, CERE, CLAY, CMNT, COPR, FICR, GLAS, GRVL, LIME, OLSD, PETR, PLAS, POTA, RCYC, RFPR, SAND, SCMT, SGBT, SGCN, SULP, VEHI, VPTS, WDPR, WOOL, URAN, YETI, YETY];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        engine_class:                     ENGINE_CLASS_DIESEL;
        dual_headed:                    0;
        default_cargo_type:                MAIL;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        visual_effect_and_powered: VISUAL_EFFECT_DISABLE;

        model_life:                        30;

        length:                            8;
        cost_factor:                    3;
        running_cost_factor:            2;
        loading_speed:                    20;

        variant_group: Item_Mail_Budd_Cab_Amfleet_AmtrakPHII;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_MAIL_BUDD_CAB_AMFLEET);
        introduction_date:                date(1975, 1, 1);
        vehicle_life:                     50;
        model_life:                        30;

        speed:                            125 mph;
        power:                            1 hp;
        weight:                            51 ton;
        cargo_capacity:                    60/param_capacity_mod;
    }
    graphics {
    default:                             sw_Mail_Budd_Cab_Amfleet_Via_rearcheck;
    purchase:                            spriteset_Mail_Budd_Cab_Amfleet_Via_Purchase;
    additional_text: string(STR_INFO_MAIL_BUDD_CAB_AMFLEET);
}
}

//Budd_HiLevel_Production
spriteset(spriteset_Budd_HiLevel_Production_Purchase,   "gfx/Budd_HiLevel_Production.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_HiLevel_Production,   "gfx/Budd_HiLevel_Production.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_HiLevel_Production_Diner,   "gfx/Budd_HiLevel_Production.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_HiLevel_Production_Lounge,   "gfx/Budd_HiLevel_Production.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_HiLevel_Production_Rear,   "gfx/Budd_HiLevel_Production.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_Production_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_HiLevel_Production_Diner;
 2..3: spriteset_Budd_HiLevel_Production_Lounge;
  spriteset_Budd_HiLevel_Production;
}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_Production_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_HiLevel_Production_Rear;
    return sw_Budd_HiLevel_Production_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_HiLevel_Production, 52501) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    115;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_HiLevel_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_HILEVEL);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            85 ton;
        cargo_capacity:                    72/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_HiLevel_Production_rearcheck;
    purchase:                            spriteset_Budd_HiLevel_Production_Purchase;
    additional_text: string(STR_INFO_BUDD_HILEVEL);
}
}

//Budd_HiLevel_AmtrakPHII
spriteset(spriteset_Budd_HiLevel_AmtrakPHII_Purchase,   "gfx/Budd_HiLevel_AmtrakPHII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHII,   "gfx/Budd_HiLevel_AmtrakPHII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHII_Diner,   "gfx/Budd_HiLevel_AmtrakPHII.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHII_Lounge,   "gfx/Budd_HiLevel_AmtrakPHII.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHII_Rear,   "gfx/Budd_HiLevel_AmtrakPHII.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_AmtrakPHII_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_HiLevel_AmtrakPHII_Diner;
 2..3: spriteset_Budd_HiLevel_AmtrakPHII_Lounge;
  spriteset_Budd_HiLevel_AmtrakPHII;
}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_HiLevel_AmtrakPHII_Rear;
    return sw_Budd_HiLevel_AmtrakPHII_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_HiLevel_AmtrakPHII, 52502) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    115;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_HiLevel_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_HILEVEL);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            85 ton;
        cargo_capacity:                    72/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_HiLevel_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Budd_HiLevel_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_BUDD_HILEVEL);
}
}

//Budd_HiLevel_AmtrakPHIII
spriteset(spriteset_Budd_HiLevel_AmtrakPHIII_Purchase,   "gfx/Budd_HiLevel_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHIII,   "gfx/Budd_HiLevel_AmtrakPHIII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHIII_Diner,   "gfx/Budd_HiLevel_AmtrakPHIII.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHIII_Lounge,   "gfx/Budd_HiLevel_AmtrakPHIII.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_HiLevel_AmtrakPHIII_Rear,   "gfx/Budd_HiLevel_AmtrakPHIII.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_AmtrakPHIII_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_HiLevel_AmtrakPHIII_Diner;
 2..3: spriteset_Budd_HiLevel_AmtrakPHIII_Lounge;
  spriteset_Budd_HiLevel_AmtrakPHIII;
}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_HiLevel_AmtrakPHIII_Rear;
    return sw_Budd_HiLevel_AmtrakPHIII_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_HiLevel_AmtrakPHIII, 52503) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    115;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_HiLevel_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_HILEVEL);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            85 ton;
        cargo_capacity:                    72/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_HiLevel_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Budd_HiLevel_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_BUDD_HILEVEL);
}
}

//Budd_HiLevel_Caltrans
spriteset(spriteset_Budd_HiLevel_Caltrans_Purchase,   "gfx/Budd_HiLevel_Caltrans.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_HiLevel_Caltrans,   "gfx/Budd_HiLevel_Caltrans.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_HiLevel_Caltrans_Diner,   "gfx/Budd_HiLevel_Caltrans.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_HiLevel_Caltrans_Lounge,   "gfx/Budd_HiLevel_Caltrans.png") {template_Old_8(7, 89)}
spriteset(spriteset_Budd_HiLevel_Caltrans_Rear,   "gfx/Budd_HiLevel_Caltrans.png") {template_Old_8(7, 114)}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_Caltrans_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_HiLevel_Caltrans_Diner;
 2..3: spriteset_Budd_HiLevel_Caltrans_Lounge;
  spriteset_Budd_HiLevel_Caltrans;
}

switch(FEAT_TRAINS, SELF, sw_Budd_HiLevel_Caltrans_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_HiLevel_Caltrans_Rear;
    return sw_Budd_HiLevel_Caltrans_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_HiLevel_Caltrans, 52504) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    115;
        running_cost_factor:            4;
        loading_speed:                    20;

        variant_group: Item_Budd_HiLevel_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_HILEVEL);
        introduction_date:                date(1956, 1, 1);

        speed:                            100 mph;
        weight:                            85 ton;
        cargo_capacity:                    72/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_HiLevel_Caltrans_rearcheck;
    purchase:                            spriteset_Budd_HiLevel_Caltrans_Purchase;
    additional_text: string(STR_INFO_BUDD_HILEVEL);
}
}

//Budd_SkyView_Production
spriteset(spriteset_Budd_SkyView_Production_Purchase,   "gfx/Budd_SkyView_Production.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_SkyView_Production,   "gfx/Budd_SkyView_Production.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_SkyView_Production_Diner,   "gfx/Budd_SkyView_Production.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_SkyView_Production_Rear,   "gfx/Budd_SkyView_Production.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_SkyView_Production_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_SkyView_Production_Diner;
  spriteset_Budd_SkyView_Production;
}

switch(FEAT_TRAINS, SELF, sw_Budd_SkyView_Production_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_SkyView_Production_Rear;
    return sw_Budd_SkyView_Production_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_SkyView_Production, 52601) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Budd_SkyView_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_SKYVIEW);
        introduction_date:                date(1965, 1, 1);

        speed:                            100 mph;
        weight:                            82 ton;
        cargo_capacity:                    101/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_SkyView_Production_rearcheck;
    purchase:                            spriteset_Budd_SkyView_Production_Purchase;
    additional_text: string(STR_INFO_BUDD_SKYVIEW);
}
}

//Budd_SkyView_AmtrakPHII
spriteset(spriteset_Budd_SkyView_AmtrakPHII_Purchase,   "gfx/Budd_SkyView_AmtrakPHII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_SkyView_AmtrakPHII,   "gfx/Budd_SkyView_AmtrakPHII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_SkyView_AmtrakPHII_Diner,   "gfx/Budd_SkyView_AmtrakPHII.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_SkyView_AmtrakPHII_Rear,   "gfx/Budd_SkyView_AmtrakPHII.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_SkyView_AmtrakPHII_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_SkyView_AmtrakPHII_Diner;
  spriteset_Budd_SkyView_AmtrakPHII;
}

switch(FEAT_TRAINS, SELF, sw_Budd_SkyView_AmtrakPHII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_SkyView_AmtrakPHII_Rear;
    return sw_Budd_SkyView_AmtrakPHII_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_SkyView_AmtrakPHII, 52602) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Budd_SkyView_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_SKYVIEW);
        introduction_date:                date(1965, 1, 1);

        speed:                            100 mph;
        weight:                            82 ton;
        cargo_capacity:                    101/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_SkyView_AmtrakPHII_rearcheck;
    purchase:                            spriteset_Budd_SkyView_AmtrakPHII_Purchase;
    additional_text: string(STR_INFO_BUDD_SKYVIEW);
}
}

//Budd_SkyView_AmtrakPHIII
spriteset(spriteset_Budd_SkyView_AmtrakPHIII_Purchase,   "gfx/Budd_SkyView_AmtrakPHIII.png") {template_purchase(7, 21)}
spriteset(spriteset_Budd_SkyView_AmtrakPHIII,   "gfx/Budd_SkyView_AmtrakPHIII.png") {template_Old_8(7, 39)}
spriteset(spriteset_Budd_SkyView_AmtrakPHIII_Diner,   "gfx/Budd_SkyView_AmtrakPHIII.png") {template_Old_8(7, 64)}
spriteset(spriteset_Budd_SkyView_AmtrakPHIII_Rear,   "gfx/Budd_SkyView_AmtrakPHIII.png") {template_Old_8(7, 89)}

switch(FEAT_TRAINS, SELF, sw_Budd_SkyView_AmtrakPHIII_dinerposition, position_in_consist - position_in_consist_from_end) {
 0..1: spriteset_Budd_SkyView_AmtrakPHIII_Diner;
  spriteset_Budd_SkyView_AmtrakPHIII;
}

switch(FEAT_TRAINS, SELF, sw_Budd_SkyView_AmtrakPHIII_rearcheck, position_in_consist_from_end){
    0 : spriteset_Budd_SkyView_AmtrakPHIII_Rear;
    return sw_Budd_SkyView_AmtrakPHIII_dinerposition;
}

item (FEAT_TRAINS, Item_Budd_SkyView_AmtrakPHIII, 52603) {
    property {
        climates_available:             ALL_CLIMATES;
        refittable_cargo_classes:        CC_PASSENGERS;
        cargo_allow_refit:                [PASS, TOUR];
        sprite_id:                        SPRITE_ID_NEW_TRAIN;
        misc_flags:                        bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
        refit_cost:                        0;
        track_type:                        RAIL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                            0 hp;
        dual_headed:                    0;
        default_cargo_type:                PASS;
        air_drag_coefficient:            0.08;
        bitmask_vehicle_info:            0;

        running_cost_base:                RUNNING_COST_DIESEL;

        model_life:                        30;

        length:                            8;
        cost_factor:                    125;
        running_cost_factor:            5;
        loading_speed:                    20;

        variant_group: Item_Budd_SkyView_Production;
        extra_flags:  bitmask (VEHICLE_FLAG_DISABLE_NEW_VEHICLE_MESSAGE, VEHICLE_FLAG_DISABLE_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_EXCLUSIVE_PREVIEW, VEHICLE_FLAG_SYNC_VARIANT_RELIABILITY);

        name:                             string(STR_NAME_BUDD_SKYVIEW);
        introduction_date:                date(1965, 1, 1);

        speed:                            100 mph;
        weight:                            82 ton;
        cargo_capacity:                    101/param_capacity_mod;
    }
    graphics {
    default:                             sw_Budd_SkyView_AmtrakPHIII_rearcheck;
    purchase:                            spriteset_Budd_SkyView_AmtrakPHIII_Purchase;
    additional_text: string(STR_INFO_BUDD_SKYVIEW);
}
}