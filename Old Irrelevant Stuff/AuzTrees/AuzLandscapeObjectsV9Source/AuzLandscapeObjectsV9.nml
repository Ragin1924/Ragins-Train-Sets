/*
 *  Copyright (C) 2023 GarryG
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

/*
* GRF HEADER
*/

// define the newgrf
grf {
 grfid: "GG\70\19";
 name: string(STR_GRF_NAME);
 desc: string(STR_GRF_DESCRIPTION);
    url: string(STR_GRF_URL);
 version: 9;
 min_compatible_version: 1;

}

//include sprite templates

template template_flat_high(x,y,filename) {
    [x+14, y+2, 64, 94, -31, -63, filename]
    [x+89, y+2, 64, 94, -31, -63, filename]
    [x+164, y+2, 64, 94, -31, -63, filename]
    [x+239, y+2, 64, 94, -31, -63, filename]
}

template template_overlaps(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

 template template_normal_slope(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename]
}

 template template_normal_slope_MASK(x,y,filename, mask) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename, mask]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename, mask]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename, mask]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename, mask]
}

template template_flat_low(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename]
}

template template_flat_low_MASK(x,y, filename, mask) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename, mask]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename, mask]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename, mask]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename, mask]
}

template template_slopeobjects_purchase(x,y,filename) {
    [x+5, y+5, 64, 50, -31, -19, ANIM, filename]
    [x+85, y+5, 64, 50, -31, -19, ANIM, filename]
    [x+165, y+5, 64, 50, -31, -19, ANIM, filename]
    [x+245, y+5, 64, 50, -31, -19, ANIM, filename]
	
}

 template template_building_slope(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -8, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -8, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -8, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -8, ANIM, filename]
}

template template_very_tall(x,y,filename) {
    [x+14, y+2, 64, 244, -31, -213, ANIM, filename]
    [x+89, y+2, 64, 244, -31, -213, ANIM, filename]
    [x+164, y+2, 64, 244, -31, -213, ANIM, filename]
    [x+239, y+2, 64, 244, -31, -213, ANIM, filename]
}

template template_very_tall_MASK(x,y,filename, mask) {
    [x+14, y+2, 64, 244, -31, -213, ANIM, filename, mask]
    [x+89, y+2, 64, 244, -31, -213, ANIM, filename, mask]
    [x+164, y+2, 64, 244, -31, -213, ANIM, filename, mask]
    [x+239, y+2, 64, 244, -31, -213, ANIM, filename, mask]
}

 template template_fence_slope(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename]
}

template template_creek(x,y,filename) {
    [x, y, 64, 44, -31, -13, ANIM, filename]
    [x+75, y, 64, 44, -31, -13, ANIM, filename]
    [x+150, y, 64, 44, -31, -13, ANIM, filename]
    [x+225, y, 64, 44, -31, -13, ANIM, filename]
}

template template_prom_slope(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -18, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -18, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename]
}


 template template_building_slopehigh(x,y,filename) {
    [x+14, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+89, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+164, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+239, y+2, 64, 74, -31, -38, ANIM, filename]
}

 template template_waterfall_slope(x,y,filename) {
    [x+14, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+89, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+164, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+239, y+2, 64, 74, -31, -38, ANIM, filename]
}

template template_building_low(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename]
}


template template_footbridge(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

template template_building_high(x,y,filename) {
    [x+14, y+2, 64, 94, -31, -63, ANIM, filename]
    [x+89, y+2, 64, 94, -31, -63, ANIM, filename]
    [x+164, y+2, 64, 94, -31, -63, ANIM, filename]
    [x+239, y+2, 64, 94, -31, -63, ANIM, filename]
}

template template_groundsprite(x,y,filename) {
    [x, y, 64, 31, -31, 0, filename]
}


template template_purchase(x,y,filename) {
    [x, y, 102, 46, -49, -11, filename]
}


template template_slopeaware(x,y,filename) {
    [x+48, y+26, 64, 31, -31, 0, ANIM, filename]
    [x+128, y+26, 64, 31, -31, 0, ANIM, filename]
    [x+208, y+26, 64, 23, -31, 0, ANIM, filename]
    [x+288, y+26, 64, 23, -31, 0, ANIM, filename]
    [x+368, y+26, 64, 31, -31, 0, ANIM, filename]
    [x+448, y+26, 64, 31, -31, 0, ANIM, filename]
    [x+528, y+26, 64, 23, -31, 0, ANIM, filename]
    [x+608, y+26, 64, 23, -31, 0, ANIM, filename]
    [x+688, y+26, 64, 39, -31, -8, ANIM, filename]
    [x+768, y+26, 64, 39, -31, -8, ANIM, filename]
    [x+848, y+26, 64, 31, -31, -8, ANIM, filename]
    [x+928, y+26, 64, 31, -31, -8, ANIM, filename]
    [x+1008, y+26, 64, 39, -31, -8, ANIM, filename]
    [x+1088, y+26, 64, 39, -31, -8, ANIM, filename]
    [x+1168, y+26, 64, 31, -31, -8, ANIM, filename]
    [x+1248, y+26, 64, 47, -31, -16, ANIM, filename]
    [x+1328, y+26, 64, 15, -31, 0, ANIM, filename]
    [x+1408, y+26, 64, 31, -31, -8, ANIM, filename]
    [x+1488, y+26, 64, 31, -31, -8, ANIM, filename]
	
}

template template_slopeawarehigh(x,y,filename) {
    [x+16, y+8, 64, 83, -31, -52, ANIM, filename]
    [x+96, y+8, 64, 83, -31, -52, ANIM, filename]
    [x+176, y+8, 64, 75, -31, -52, ANIM, filename]
    [x+256, y+8, 64, 75, -31, -52, ANIM, filename]
    [x+336, y+8, 64, 83, -31, -52, ANIM, filename]
    [x+416, y+8, 64, 83, -31, -52, ANIM, filename]
    [x+496, y+8, 64, 75, -31, -52, ANIM, filename]
    [x+576, y+8, 64, 75, -31, -52, ANIM, filename]
    [x+656, y+8, 64, 91, -31, -60, ANIM, filename]
    [x+736, y+8, 64, 91, -31, -60, ANIM, filename]
    [x+816, y+8, 64, 83, -31, -60, ANIM, filename]
    [x+896, y+8, 64, 83, -31, -60, ANIM, filename]
    [x+976, y+8, 64, 91, -31, -60, ANIM, filename]
    [x+1056, y+8, 64, 91, -31, -60, ANIM, filename]
    [x+1136, y+8, 64, 83, -31, -60, ANIM, filename]
    [x+1216, y+8, 64, 99, -31, -68, ANIM, filename]
    [x+1296, y+8, 64, 75, -31, -52, ANIM, filename]
    [x+1376, y+8, 64, 83, -31, -60, ANIM, filename]
    [x+1456, y+8, 64, 83, -31, -60, ANIM, filename]
	
}

template template_slopeaware_purchase(x,y,filename) {
    [x+5, y+5, 64, 50, -31, -19, ANIM, filename]
    [x+85, y+5, 64, 50, -31, -19, ANIM, filename]
    [x+165, y+5, 64, 50, -31, -19, ANIM, filename]
    [x+245, y+5, 64, 50, -31, -19, ANIM, filename]
	
}

template template_building_extrahigh(x,y,filename) {
    [x+14, y+2, 64, 104, -31, -73, filename]
    [x+89, y+2, 64, 104, -31, -73, filename]
    [x+164, y+2, 64, 104, -31, -73, filename]
    [x+239, y+2, 64, 104, -31, -73, filename]
}

template template_talloverlaps(x,y,filename) {
    [x+18, y+8, 130, 270, -64, -223, ANIM, filename]
    [x+162, y+8, 130, 270, -64, -223, ANIM, filename]
    [x+306, y+8, 130, 270, -64, -223, ANIM, filename]
    [x+450, y+8, 130, 270, -64, -223, ANIM, filename]

}

/***************************************************
                  CREEKS OBJECT MENU 
****************************************************/

/*
 *  Copyright (C) 2022 GarryG
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

/***************************************************
                  LANDSCAPE OBJECT MENU 
****************************************************/

/***************************************************
THIS ENTRY MUST BE AFTER ALL CREEK OBJECTS AND BEFORE
ALL LANDSCAPE OBJECTS
*****************************************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ObjectMenuLS) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ObjectMenuLS, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ObjectMenuLS_32.png")
}

spriteset (spriteset_ObjectMenuLS_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ObjectMenuLS_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ObjectMenuLS_32.png")
}

spriteset (spriteset_ObjectMenuLS_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ObjectMenuLS_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ObjectMenuLS_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ObjectMenuLS_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenuLS(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_ObjectMenuLS_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_ObjectMenuLS_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenuLS_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_ObjectMenuLS_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenuLS(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_ObjectMenuLS_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_ObjectMenuLS_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenuLS_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_ObjectMenuLS_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenuLS(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_ObjectMenuLS_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_ObjectMenuLS_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenuLS_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_ObjectMenuLS_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenuLS(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_ObjectMenuLS_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_ObjectMenuLS_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenuLS_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ObjectMenuLS_view, view) {
    1:  spritelayout_ObjectMenuLS_2;
    2:  spritelayout_ObjectMenuLS_3;
    3:  spritelayout_ObjectMenuLS_4;
    spritelayout_ObjectMenuLS_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ObjectMenuLS_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ObjectMenuLS_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ObjectMenuLS_purchase, view) {
    1:  spritelayout_ObjectMenuLS_2_purchase;
    2:  spritelayout_ObjectMenuLS_3_purchase;
    3:  spritelayout_ObjectMenuLS_4_purchase;
    spritelayout_ObjectMenuLS_1_purchase;
}

item (FEAT_OBJECTS, ObjectMenuLS, 000) {
    property {
        class: "OZLS";
        classname: string(STR_OZLS);
        name: string(STR_ObjectMenuLS);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ObjectMenuLS_object;
        purchase: switch_ObjectMenuLS_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**************************************
   END  LANDSCAPE OBJECT  MENU
***************************************/


/***************************************
****************************************
            NATURAL LANDSCAPE
****************************************
****************************************/


/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_terrain1_slopes_001_a) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_a.png")
}

spriteset (spriteset_terrain1_slopes_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_a_SNOW.png")
}

spriteset (spriteset_terrain1_slopes_001_b) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_b.png")
}

spriteset (spriteset_terrain1_slopes_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_b_SNOW.png")
}

spriteset (spriteset_terrain1_slopes_001_c) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_c.png")
}

spriteset (spriteset_terrain1_slopes_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_c_SNOW.png")
}


spriteset (spriteset_terrain1_slopes_001_d) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_d.png")
}

spriteset (spriteset_terrain1_slopes_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain1_slopes_001_d_SNOW.png")
}

spriteset (spriteset_terrain1_slopes_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/terrain1_slopes_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_terrain1_slopes_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain1_slopes_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain1_slopes_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_terrain1_slopes_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain1_slopes_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain1_slopes_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_terrain1_slopes_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain1_slopes_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain1_slopes_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_terrain1_slopes_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain1_slopes_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain1_slopes_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_terrain1_slopes_001_view, view) {
    1:  spritelayout_terrain1_slopes_001_b;
    2:  spritelayout_terrain1_slopes_001_c;
    3:  spritelayout_terrain1_slopes_001_d;
    spritelayout_terrain1_slopes_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_terrain1_slopes_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_terrain1_slopes_001_view;
}


spritelayout spritelayout_terrain1_slopes_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain1_slopes_001_PURCHASE(0);
	}
}

spritelayout spritelayout_terrain1_slopes_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain1_slopes_001_PURCHASE(1);
	}
}

spritelayout spritelayout_terrain1_slopes_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain1_slopes_001_PURCHASE(2);
	}
}

spritelayout spritelayout_terrain1_slopes_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain1_slopes_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_terrain1_slopes_001_purchase, view) {
    1:  spritelayout_terrain1_slopes_001_2_purchase;
    2:  spritelayout_terrain1_slopes_001_3_purchase;
    3:  spritelayout_terrain1_slopes_001_4_purchase;
    spritelayout_terrain1_slopes_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_terrain1_slopes_001, view) {
1: string(STR_terrain1_slopes_001_purchase_view2);
2: string(STR_terrain1_slopes_001_purchase_view3);
3: string(STR_terrain1_slopes_001_purchase_view4);
default: string(STR_terrain1_slopes_001_purchase_view1);
}


item (FEAT_OBJECTS, terrain1_slopes_001, 208) {
    property {
        class: "ALND";
        classname: string(STR_ALND);
        name: string(STR_terrain1_slopes_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_terrain1_slopes_001_object;
        purchase: switch_terrain1_slopes_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_terrain1_slopes_001;

     }
}

/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_terrain2_slopes_001_a) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_a.png")
}

spriteset (spriteset_terrain2_slopes_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_a_SNOW.png")
}

spriteset (spriteset_terrain2_slopes_001_b) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_b.png")
}

spriteset (spriteset_terrain2_slopes_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_b_SNOW.png")
}

spriteset (spriteset_terrain2_slopes_001_c) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_c.png")
}

spriteset (spriteset_terrain2_slopes_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_c_SNOW.png")
}


spriteset (spriteset_terrain2_slopes_001_d) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_d.png")
}

spriteset (spriteset_terrain2_slopes_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain2_slopes_001_d_SNOW.png")
}

spriteset (spriteset_terrain2_slopes_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/terrain2_slopes_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_terrain2_slopes_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain2_slopes_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain2_slopes_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_terrain2_slopes_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain2_slopes_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain2_slopes_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_terrain2_slopes_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain2_slopes_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain2_slopes_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_terrain2_slopes_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain2_slopes_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain2_slopes_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_terrain2_slopes_001_view, view) {
    1:  spritelayout_terrain2_slopes_001_b;
    2:  spritelayout_terrain2_slopes_001_c;
    3:  spritelayout_terrain2_slopes_001_d;
    spritelayout_terrain2_slopes_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_terrain2_slopes_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_terrain2_slopes_001_view;
}


spritelayout spritelayout_terrain2_slopes_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain2_slopes_001_PURCHASE(0);
	}
}

spritelayout spritelayout_terrain2_slopes_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain2_slopes_001_PURCHASE(1);
	}
}

spritelayout spritelayout_terrain2_slopes_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain2_slopes_001_PURCHASE(2);
	}
}

spritelayout spritelayout_terrain2_slopes_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain2_slopes_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_terrain2_slopes_001_purchase, view) {
    1:  spritelayout_terrain2_slopes_001_2_purchase;
    2:  spritelayout_terrain2_slopes_001_3_purchase;
    3:  spritelayout_terrain2_slopes_001_4_purchase;
    spritelayout_terrain2_slopes_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_terrain2_slopes_001, view) {
1: string(STR_terrain2_slopes_001_purchase_view2);
2: string(STR_terrain2_slopes_001_purchase_view3);
3: string(STR_terrain2_slopes_001_purchase_view4);
default: string(STR_terrain2_slopes_001_purchase_view1);
}

item (FEAT_OBJECTS, terrain2_slopes_001, 209) {
    property {
        class: "ALND";
        classname: string(STR_ALND);
        name: string(STR_terrain2_slopes_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_terrain2_slopes_001_object;
        purchase: switch_terrain2_slopes_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_terrain2_slopes_001;

     }
}

/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_terrain3_slopes_001_a) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_a.png")
}

spriteset (spriteset_terrain3_slopes_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_a_SNOW.png")
}

spriteset (spriteset_terrain3_slopes_001_b) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_b.png")
}

spriteset (spriteset_terrain3_slopes_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_b_SNOW.png")
}

spriteset (spriteset_terrain3_slopes_001_c) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_c.png")
}

spriteset (spriteset_terrain3_slopes_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_c_SNOW.png")
}


spriteset (spriteset_terrain3_slopes_001_d) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_d.png")
}

spriteset (spriteset_terrain3_slopes_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/terrain3_slopes_001_d_SNOW.png")
}

spriteset (spriteset_terrain3_slopes_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/terrain3_slopes_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_terrain3_slopes_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain3_slopes_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain3_slopes_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_terrain3_slopes_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain3_slopes_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain3_slopes_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_terrain3_slopes_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain3_slopes_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain3_slopes_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_terrain3_slopes_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_terrain3_slopes_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_terrain3_slopes_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_terrain3_slopes_001_view, view) {
    1:  spritelayout_terrain3_slopes_001_b;
    2:  spritelayout_terrain3_slopes_001_c;
    3:  spritelayout_terrain3_slopes_001_d;
    spritelayout_terrain3_slopes_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_terrain3_slopes_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_terrain3_slopes_001_view;
}


spritelayout spritelayout_terrain3_slopes_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain3_slopes_001_PURCHASE(0);
	}
}

spritelayout spritelayout_terrain3_slopes_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain3_slopes_001_PURCHASE(1);
	}
}

spritelayout spritelayout_terrain3_slopes_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain3_slopes_001_PURCHASE(2);
	}
}

spritelayout spritelayout_terrain3_slopes_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_terrain3_slopes_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_terrain3_slopes_001_purchase, view) {
    1:  spritelayout_terrain3_slopes_001_2_purchase;
    2:  spritelayout_terrain3_slopes_001_3_purchase;
    3:  spritelayout_terrain3_slopes_001_4_purchase;
    spritelayout_terrain3_slopes_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_terrain3_slopes_001, view) {
1: string(STR_terrain3_slopes_001_purchase_view2);
2: string(STR_terrain3_slopes_001_purchase_view3);
3: string(STR_terrain3_slopes_001_purchase_view4);
default: string(STR_terrain3_slopes_001_purchase_view1);
}

item (FEAT_OBJECTS, terrain3_slopes_001, 210) {
    property {
        class: "ALND";
        classname: string(STR_ALND);
        name: string(STR_terrain3_slopes_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_terrain3_slopes_001_object;
        purchase: switch_terrain3_slopes_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_terrain3_slopes_001;

     }
}

/* slope_desert */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_desert_001_a) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_a.png")
}

spriteset (spriteset_slope_desert_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_a_SNOW.png")
}

spriteset (spriteset_slope_desert_001_b) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_b.png")
}

spriteset (spriteset_slope_desert_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_b_SNOW.png")
}

spriteset (spriteset_slope_desert_001_c) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_c.png")
}

spriteset (spriteset_slope_desert_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_c_SNOW.png")
}


spriteset (spriteset_slope_desert_001_d) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_d.png")
}

spriteset (spriteset_slope_desert_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_desert_001_d_SNOW.png")
}

spriteset (spriteset_slope_desert_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/slope_desert_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_desert_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_desert_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_desert_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_desert_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_desert_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_desert_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_desert_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_desert_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_desert_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_desert_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_desert_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_desert_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_desert_001_view, view) {
    1:  spritelayout_slope_desert_001_b;
    2:  spritelayout_slope_desert_001_c;
    3:  spritelayout_slope_desert_001_d;
    spritelayout_slope_desert_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_desert_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_desert_001_view;
}


spritelayout spritelayout_slope_desert_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_desert_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_desert_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_desert_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_desert_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_desert_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_desert_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_desert_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_desert_001_purchase, view) {
    1:  spritelayout_slope_desert_001_2_purchase;
    2:  spritelayout_slope_desert_001_3_purchase;
    3:  spritelayout_slope_desert_001_4_purchase;
    spritelayout_slope_desert_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_desert_001, view) {
1: string(STR_slope_desert_001_purchase_view2);
2: string(STR_slope_desert_001_purchase_view3);
3: string(STR_slope_desert_001_purchase_view4);
default: string(STR_slope_desert_001_purchase_view1);
}


item (FEAT_OBJECTS, slope_desert_001, 211) {
    property {
        class: "ALND";
        classname: string(STR_ALND);
        name: string(STR_slope_desert_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_desert_001_object;
        purchase: switch_slope_desert_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_desert_001;

     }
}

/* slope_snow */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_snow_001_a) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_a.png")
}

spriteset (spriteset_slope_snow_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_a_SNOW.png")
}

spriteset (spriteset_slope_snow_001_b) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_b.png")
}

spriteset (spriteset_slope_snow_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_b_SNOW.png")
}

spriteset (spriteset_slope_snow_001_c) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_c.png")
}

spriteset (spriteset_slope_snow_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_c_SNOW.png")
}


spriteset (spriteset_slope_snow_001_d) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_d.png")
}

spriteset (spriteset_slope_snow_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_snow_001_d_SNOW.png")
}

spriteset (spriteset_slope_snow_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/slope_snow_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_snow_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_snow_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_snow_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_snow_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_snow_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_snow_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_snow_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_snow_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_snow_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_snow_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_snow_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_snow_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_snow_001_view, view) {
    1:  spritelayout_slope_snow_001_b;
    2:  spritelayout_slope_snow_001_c;
    3:  spritelayout_slope_snow_001_d;
    spritelayout_slope_snow_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_snow_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_snow_001_view;
}


spritelayout spritelayout_slope_snow_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_snow_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_snow_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_snow_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_snow_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_snow_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_snow_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_snow_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_snow_001_purchase, view) {
    1:  spritelayout_slope_snow_001_2_purchase;
    2:  spritelayout_slope_snow_001_3_purchase;
    3:  spritelayout_slope_snow_001_4_purchase;
    spritelayout_slope_snow_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_snow_001, view) {
1: string(STR_slope_snow_001_purchase_view2);
2: string(STR_slope_snow_001_purchase_view3);
3: string(STR_slope_snow_001_purchase_view4);
default: string(STR_slope_snow_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_snow_001, 212) {
    property {
        class: "ALND";
        classname: string(STR_ALND);
        name: string(STR_slope_snow_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_snow_001_object;
        purchase: switch_slope_snow_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_snow_001;

     }
}


/* slope_desert */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_subarctic_001_a) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_a.png")
}

spriteset (spriteset_slope_subarctic_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_a_SNOW.png")
}

spriteset (spriteset_slope_subarctic_001_b) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_b.png")
}

spriteset (spriteset_slope_subarctic_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_b_SNOW.png")
}

spriteset (spriteset_slope_subarctic_001_c) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_c.png")
}

spriteset (spriteset_slope_subarctic_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_c_SNOW.png")
}


spriteset (spriteset_slope_subarctic_001_d) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_d.png")
}

spriteset (spriteset_slope_subarctic_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/slope_subarctic_001_d_SNOW.png")
}

spriteset (spriteset_slope_subarctic_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/slope_subarctic_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_subarctic_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_subarctic_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_subarctic_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_subarctic_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_subarctic_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_subarctic_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_subarctic_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_subarctic_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_subarctic_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_subarctic_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_subarctic_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_subarctic_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_subarctic_001_view, view) {
    1:  spritelayout_slope_subarctic_001_b;
    2:  spritelayout_slope_subarctic_001_c;
    3:  spritelayout_slope_subarctic_001_d;
    spritelayout_slope_subarctic_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_subarctic_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_subarctic_001_view;
}


spritelayout spritelayout_slope_subarctic_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_subarctic_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_subarctic_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_subarctic_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_subarctic_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_subarctic_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_subarctic_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_subarctic_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_subarctic_001_purchase, view) {
    1:  spritelayout_slope_subarctic_001_2_purchase;
    2:  spritelayout_slope_subarctic_001_3_purchase;
    3:  spritelayout_slope_subarctic_001_4_purchase;
    spritelayout_slope_subarctic_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_subarctic_001, view) {
1: string(STR_slope_subarctic_001_purchase_view2);
2: string(STR_slope_subarctic_001_purchase_view3);
3: string(STR_slope_subarctic_001_purchase_view4);
default: string(STR_slope_subarctic_001_purchase_view1);
}


item (FEAT_OBJECTS, slope_subarctic_001, 213) {
    property {
        class: "ALND";
        classname: string(STR_ALND);
        name: string(STR_slope_subarctic_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_subarctic_001_object;
        purchase: switch_slope_subarctic_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_subarctic_001;

     }
}


/*************************************
  NATURAL LANDSCAPE
**************************************/


/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_grass_temperate_001_a) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_a.png")
}

spriteset (spriteset_grass_temperate_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_a_SNOW.png")
}

spriteset (spriteset_grass_temperate_001_b) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_b.png")
}

spriteset (spriteset_grass_temperate_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_b_SNOW.png")
}

spriteset (spriteset_grass_temperate_001_c) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_c.png")
}

spriteset (spriteset_grass_temperate_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_c_SNOW.png")
}


spriteset (spriteset_grass_temperate_001_d) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_d.png")
}

spriteset (spriteset_grass_temperate_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/grass_temperate_001_d_SNOW.png")
}

spriteset (spriteset_grass_temperate_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/grass_temperate_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_grass_temperate_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_grass_temperate_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_grass_temperate_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_grass_temperate_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_grass_temperate_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_grass_temperate_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_grass_temperate_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_grass_temperate_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_grass_temperate_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_grass_temperate_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_grass_temperate_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_grass_temperate_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_grass_temperate_001_view, view) {
    1:  spritelayout_grass_temperate_001_b;
    2:  spritelayout_grass_temperate_001_c;
    3:  spritelayout_grass_temperate_001_d;
    spritelayout_grass_temperate_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_grass_temperate_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_grass_temperate_001_view;
}


spritelayout spritelayout_grass_temperate_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_grass_temperate_001_PURCHASE(0);
	}
}

spritelayout spritelayout_grass_temperate_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_grass_temperate_001_PURCHASE(1);
	}
}

spritelayout spritelayout_grass_temperate_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_grass_temperate_001_PURCHASE(2);
	}
}

spritelayout spritelayout_grass_temperate_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_grass_temperate_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_grass_temperate_001_purchase, view) {
    1:  spritelayout_grass_temperate_001_2_purchase;
    2:  spritelayout_grass_temperate_001_3_purchase;
    3:  spritelayout_grass_temperate_001_4_purchase;
    spritelayout_grass_temperate_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_grass_temperate_001, view) {
1: string(STR_grass_temperate_001_purchase_view2);
2: string(STR_grass_temperate_001_purchase_view3);
3: string(STR_grass_temperate_001_purchase_view4);
default: string(STR_grass_temperate_001_purchase_view1);
}


item (FEAT_OBJECTS, grass_temperate_001, 228) {
    property {
        class: "ALND";
        classname: string(STR_ALND);
        name: string(STR_grass_temperate_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_grass_temperate_001_object;
        purchase: switch_grass_temperate_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_grass_temperate_001;

     }
}

/*
 *  Copyright (C) 2022 GarryG
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

/*************************************
  NATURAL LANDSCAPE
**************************************/


/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_shoretiles_001_a) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_a.png")
}

spriteset (spriteset_shoretiles_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_a_SNOW.png")
}

spriteset (spriteset_shoretiles_001_b) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_b.png")
}

spriteset (spriteset_shoretiles_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_b_SNOW.png")
}

spriteset (spriteset_shoretiles_001_c) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_c.png")
}

spriteset (spriteset_shoretiles_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_c_SNOW.png")
}


spriteset (spriteset_shoretiles_001_d) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_d.png")
}

spriteset (spriteset_shoretiles_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/land/shoretiles_001_d_SNOW.png")
}

spriteset (spriteset_shoretiles_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/land/shoretiles_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_shoretiles_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_shoretiles_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_shoretiles_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_shoretiles_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_shoretiles_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_shoretiles_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_shoretiles_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_shoretiles_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_shoretiles_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_shoretiles_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_shoretiles_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_shoretiles_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_shoretiles_001_view, view) {
    1:  spritelayout_shoretiles_001_b;
    2:  spritelayout_shoretiles_001_c;
    3:  spritelayout_shoretiles_001_d;
    spritelayout_shoretiles_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_shoretiles_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_shoretiles_001_view;
}


spritelayout spritelayout_shoretiles_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_shoretiles_001_PURCHASE(0);
	}
}

spritelayout spritelayout_shoretiles_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_shoretiles_001_PURCHASE(1);
	}
}

spritelayout spritelayout_shoretiles_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_shoretiles_001_PURCHASE(2);
	}
}

spritelayout spritelayout_shoretiles_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_shoretiles_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_shoretiles_001_purchase, view) {
    1:  spritelayout_shoretiles_001_2_purchase;
    2:  spritelayout_shoretiles_001_3_purchase;
    3:  spritelayout_shoretiles_001_4_purchase;
    spritelayout_shoretiles_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_shoretiles_001, view) {
1: string(STR_shoretiles_001_purchase_view2);
2: string(STR_shoretiles_001_purchase_view3);
3: string(STR_shoretiles_001_purchase_view4);
default: string(STR_shoretiles_001_purchase_view1);
}


item (FEAT_OBJECTS, shoretiles_001, 229) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_shoretiles_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_shoretiles_001_object;
        purchase: switch_shoretiles_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_shoretiles_001;

     }
}

/******************************
LANDSCAPING
*******************************/


/* slope_aware_grass_001 */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_aware_grass_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_a.png")
}

spriteset (spriteset_slope_aware_grass_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_a_SNOW.png")
}

spriteset (spriteset_slope_aware_grass_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_b.png")
}

spriteset (spriteset_slope_aware_grass_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_b_SNOW.png")
}

spriteset (spriteset_slope_aware_grass_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_c.png")
}

spriteset (spriteset_slope_aware_grass_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_c_SNOW.png")
}


spriteset (spriteset_slope_aware_grass_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_d.png")
}

spriteset (spriteset_slope_aware_grass_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_aware_grass_001_d_SNOW.png")
}

spriteset (spriteset_slope_aware_grass_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_aware_grass_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_aware_grass_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_aware_grass_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_aware_grass_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_aware_grass_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_aware_grass_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_aware_grass_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_aware_grass_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_aware_grass_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_aware_grass_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_aware_grass_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_aware_grass_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_aware_grass_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_aware_grass_001_view, view) {
    1:  spritelayout_slope_aware_grass_001_b;
    2:  spritelayout_slope_aware_grass_001_c;
    3:  spritelayout_slope_aware_grass_001_d;
    spritelayout_slope_aware_grass_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_aware_grass_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_aware_grass_001_view;
}


spritelayout spritelayout_slope_aware_grass_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_aware_grass_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_aware_grass_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_aware_grass_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_aware_grass_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_aware_grass_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_aware_grass_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_aware_grass_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_aware_grass_001_purchase, view) {
    1:  spritelayout_slope_aware_grass_001_2_purchase;
    2:  spritelayout_slope_aware_grass_001_3_purchase;
    3:  spritelayout_slope_aware_grass_001_4_purchase;
    spritelayout_slope_aware_grass_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_aware_grass_001, view) {
1: string(STR_slope_aware_grass_001_purchase_view2);
2: string(STR_slope_aware_grass_001_purchase_view3);
3: string(STR_slope_aware_grass_001_purchase_view4);
default: string(STR_slope_aware_grass_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_aware_grass_001, 201) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_slope_aware_grass_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_aware_grass_001_object;
        purchase: switch_slope_aware_grass_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_aware_grass_001;

     }
}

/* slope_greyrock */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_greyrock_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_a.png")
}

spriteset (spriteset_slope_greyrock_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_a_SNOW.png")
}

spriteset (spriteset_slope_greyrock_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_b.png")
}

spriteset (spriteset_slope_greyrock_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_b_SNOW.png")
}

spriteset (spriteset_slope_greyrock_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_c.png")
}

spriteset (spriteset_slope_greyrock_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_c_SNOW.png")
}


spriteset (spriteset_slope_greyrock_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_d.png")
}

spriteset (spriteset_slope_greyrock_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_greyrock_001_d_SNOW.png")
}

spriteset (spriteset_slope_greyrock_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_greyrock_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_greyrock_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_greyrock_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_greyrock_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_greyrock_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_greyrock_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_greyrock_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_greyrock_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_greyrock_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_greyrock_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_greyrock_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_greyrock_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_greyrock_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_greyrock_001_view, view) {
    1:  spritelayout_slope_greyrock_001_b;
    2:  spritelayout_slope_greyrock_001_c;
    3:  spritelayout_slope_greyrock_001_d;
    spritelayout_slope_greyrock_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_greyrock_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_greyrock_001_view;
}


spritelayout spritelayout_slope_greyrock_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_greyrock_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_greyrock_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_greyrock_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_greyrock_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_greyrock_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_greyrock_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_greyrock_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_greyrock_001_purchase, view) {
    1:  spritelayout_slope_greyrock_001_2_purchase;
    2:  spritelayout_slope_greyrock_001_3_purchase;
    3:  spritelayout_slope_greyrock_001_4_purchase;
    spritelayout_slope_greyrock_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_greyrock_001, view) {
1: string(STR_slope_greyrock_001_purchase_view2);
2: string(STR_slope_greyrock_001_purchase_view3);
3: string(STR_slope_greyrock_001_purchase_view4);
default: string(STR_slope_greyrock_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_greyrock_001, 202) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_slope_greyrock_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_greyrock_001_object;
        purchase: switch_slope_greyrock_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_greyrock_001;

     }
}

/* slope_grassyrock */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_grassyrock_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_a.png")
}

spriteset (spriteset_slope_grassyrock_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_a_SNOW.png")
}

spriteset (spriteset_slope_grassyrock_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_b.png")
}

spriteset (spriteset_slope_grassyrock_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_b_SNOW.png")
}

spriteset (spriteset_slope_grassyrock_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_c.png")
}

spriteset (spriteset_slope_grassyrock_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_c_SNOW.png")
}


spriteset (spriteset_slope_grassyrock_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_d.png")
}

spriteset (spriteset_slope_grassyrock_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_grassyrock_001_d_SNOW.png")
}

spriteset (spriteset_slope_grassyrock_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_grassyrock_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_grassyrock_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_grassyrock_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_grassyrock_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_grassyrock_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_grassyrock_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_grassyrock_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_grassyrock_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_grassyrock_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_grassyrock_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_grassyrock_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_grassyrock_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_grassyrock_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_grassyrock_001_view, view) {
    1:  spritelayout_slope_grassyrock_001_b;
    2:  spritelayout_slope_grassyrock_001_c;
    3:  spritelayout_slope_grassyrock_001_d;
    spritelayout_slope_grassyrock_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_grassyrock_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_grassyrock_001_view;
}


spritelayout spritelayout_slope_grassyrock_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_grassyrock_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_grassyrock_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_grassyrock_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_grassyrock_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_grassyrock_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_grassyrock_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_grassyrock_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_grassyrock_001_purchase, view) {
    1:  spritelayout_slope_grassyrock_001_2_purchase;
    2:  spritelayout_slope_grassyrock_001_3_purchase;
    3:  spritelayout_slope_grassyrock_001_4_purchase;
    spritelayout_slope_grassyrock_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_grassyrock_001, view) {
1: string(STR_slope_grassyrock_001_purchase_view2);
2: string(STR_slope_grassyrock_001_purchase_view3);
3: string(STR_slope_grassyrock_001_purchase_view4);
default: string(STR_slope_grassyrock_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_grassyrock_001, 203) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_slope_grassyrock_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_grassyrock_001_object;
        purchase: switch_slope_grassyrock_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_grassyrock_001;

     }
}



/* slope_redrock */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_redrock_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_a.png")
}

spriteset (spriteset_slope_redrock_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_a_SNOW.png")
}

spriteset (spriteset_slope_redrock_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_b.png")
}

spriteset (spriteset_slope_redrock_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_b_SNOW.png")
}

spriteset (spriteset_slope_redrock_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_c.png")
}

spriteset (spriteset_slope_redrock_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_c_SNOW.png")
}


spriteset (spriteset_slope_redrock_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_d.png")
}

spriteset (spriteset_slope_redrock_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_redrock_001_d_SNOW.png")
}

spriteset (spriteset_slope_redrock_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_redrock_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_redrock_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_redrock_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_redrock_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_redrock_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_redrock_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_redrock_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_redrock_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_redrock_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_redrock_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_redrock_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_redrock_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_redrock_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_redrock_001_view, view) {
    1:  spritelayout_slope_redrock_001_b;
    2:  spritelayout_slope_redrock_001_c;
    3:  spritelayout_slope_redrock_001_d;
    spritelayout_slope_redrock_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_redrock_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_redrock_001_view;
}


spritelayout spritelayout_slope_redrock_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_redrock_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_redrock_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_redrock_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_redrock_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_redrock_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_redrock_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_redrock_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_redrock_001_purchase, view) {
    1:  spritelayout_slope_redrock_001_2_purchase;
    2:  spritelayout_slope_redrock_001_3_purchase;
    3:  spritelayout_slope_redrock_001_4_purchase;
    spritelayout_slope_redrock_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_redrock_001, view) {
1: string(STR_slope_redrock_001_purchase_view2);
2: string(STR_slope_redrock_001_purchase_view3);
3: string(STR_slope_redrock_001_purchase_view4);
default: string(STR_slope_redrock_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_redrock_001, 204) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_slope_redrock_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_redrock_001_object;
        purchase: switch_slope_redrock_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_redrock_001;

     }
}



/* slope_transition */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_transition_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_a.png")
}

spriteset (spriteset_slope_transition_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_a_SNOW.png")
}

spriteset (spriteset_slope_transition_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_b.png")
}

spriteset (spriteset_slope_transition_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_b_SNOW.png")
}

spriteset (spriteset_slope_transition_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_c.png")
}

spriteset (spriteset_slope_transition_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_c_SNOW.png")
}


spriteset (spriteset_slope_transition_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_d.png")
}

spriteset (spriteset_slope_transition_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transition_001_d_SNOW.png")
}

spriteset (spriteset_slope_transition_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_transition_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_transition_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transition_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transition_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_transition_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transition_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transition_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_transition_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transition_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transition_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_transition_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transition_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transition_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_transition_001_view, view) {
    1:  spritelayout_slope_transition_001_b;
    2:  spritelayout_slope_transition_001_c;
    3:  spritelayout_slope_transition_001_d;
    spritelayout_slope_transition_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_transition_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_transition_001_view;
}


spritelayout spritelayout_slope_transition_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transition_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_transition_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transition_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_transition_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transition_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_transition_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transition_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_transition_001_purchase, view) {
    1:  spritelayout_slope_transition_001_2_purchase;
    2:  spritelayout_slope_transition_001_3_purchase;
    3:  spritelayout_slope_transition_001_4_purchase;
    spritelayout_slope_transition_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_transition_001, view) {
1: string(STR_slope_transition_001_purchase_view2);
2: string(STR_slope_transition_001_purchase_view3);
3: string(STR_slope_transition_001_purchase_view4);
default: string(STR_slope_transition_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_transition_001, 205) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_slope_transition_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_transition_001_object;
        purchase: switch_slope_transition_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_transition_001;

     }
}


/* slope_transitiongrass */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_transitiongrass_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_a.png")
}

spriteset (spriteset_slope_transitiongrass_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_a_SNOW.png")
}

spriteset (spriteset_slope_transitiongrass_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_b.png")
}

spriteset (spriteset_slope_transitiongrass_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_b_SNOW.png")
}

spriteset (spriteset_slope_transitiongrass_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_c.png")
}

spriteset (spriteset_slope_transitiongrass_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_c_SNOW.png")
}


spriteset (spriteset_slope_transitiongrass_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_d.png")
}

spriteset (spriteset_slope_transitiongrass_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_transitiongrass_001_d_SNOW.png")
}

spriteset (spriteset_slope_transitiongrass_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_transitiongrass_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_transitiongrass_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transitiongrass_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transitiongrass_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_transitiongrass_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transitiongrass_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transitiongrass_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_transitiongrass_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transitiongrass_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transitiongrass_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_transitiongrass_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_transitiongrass_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_transitiongrass_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_transitiongrass_001_view, view) {
    1:  spritelayout_slope_transitiongrass_001_b;
    2:  spritelayout_slope_transitiongrass_001_c;
    3:  spritelayout_slope_transitiongrass_001_d;
    spritelayout_slope_transitiongrass_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_transitiongrass_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_transitiongrass_001_view;
}


spritelayout spritelayout_slope_transitiongrass_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transitiongrass_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_transitiongrass_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transitiongrass_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_transitiongrass_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transitiongrass_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_transitiongrass_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_transitiongrass_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_transitiongrass_001_purchase, view) {
    1:  spritelayout_slope_transitiongrass_001_2_purchase;
    2:  spritelayout_slope_transitiongrass_001_3_purchase;
    3:  spritelayout_slope_transitiongrass_001_4_purchase;
    spritelayout_slope_transitiongrass_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_transitiongrass_001, view) {
1: string(STR_slope_transitiongrass_001_purchase_view2);
2: string(STR_slope_transitiongrass_001_purchase_view3);
3: string(STR_slope_transitiongrass_001_purchase_view4);
default: string(STR_slope_transitiongrass_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_transitiongrass_001, 207) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_slope_transitiongrass_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_transitiongrass_001_object;
        purchase: switch_slope_transitiongrass_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_transitiongrass_001;

     }
}


/* Red Rock Canyon Walls */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_canyonwallsred_001_a) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_a.png")
}

spriteset (spriteset_canyonwallsred_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_a_SNOW.png")
}

spriteset (spriteset_canyonwallsred_001_b) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_b.png")
}

spriteset (spriteset_canyonwallsred_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_b_SNOW.png")
}

spriteset (spriteset_canyonwallsred_001_c) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_c.png")
}

spriteset (spriteset_canyonwallsred_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_c_SNOW.png")
}


spriteset (spriteset_canyonwallsred_001_d) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_d.png")
}

spriteset (spriteset_canyonwallsred_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsred_001_d_SNOW.png")
}

spriteset (spriteset_canyonwallsred_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/canyonwallsred_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_canyonwallsred_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsred_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsred_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_canyonwallsred_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsred_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsred_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_canyonwallsred_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsred_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsred_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_canyonwallsred_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsred_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsred_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_canyonwallsred_001_view, view) {
    1:  spritelayout_canyonwallsred_001_b;
    2:  spritelayout_canyonwallsred_001_c;
    3:  spritelayout_canyonwallsred_001_d;
    spritelayout_canyonwallsred_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_canyonwallsred_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_canyonwallsred_001_view;
}


spritelayout spritelayout_canyonwallsred_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsred_001_PURCHASE(0);
	}
}

spritelayout spritelayout_canyonwallsred_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsred_001_PURCHASE(1);
	}
}

spritelayout spritelayout_canyonwallsred_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsred_001_PURCHASE(2);
	}
}

spritelayout spritelayout_canyonwallsred_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsred_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_canyonwallsred_001_purchase, view) {
    1:  spritelayout_canyonwallsred_001_2_purchase;
    2:  spritelayout_canyonwallsred_001_3_purchase;
    3:  spritelayout_canyonwallsred_001_4_purchase;
    spritelayout_canyonwallsred_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_canyonwallsred_001, view) {
1: string(STR_canyonwallsred_001_purchase_view2);
2: string(STR_canyonwallsred_001_purchase_view3);
3: string(STR_canyonwallsred_001_purchase_view4);
default: string(STR_canyonwallsred_001_purchase_view1);
}

item (FEAT_OBJECTS, canyonwallsred_001, 214) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_canyonwallsred_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1100,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_canyonwallsred_001_object;
        purchase: switch_canyonwallsred_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_canyonwallsred_001;

     }
}

/* End Red Rock Canyon Walls */

/* Grey Rock Canyon Walls */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_canyonwallsgrey_001_a) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_a.png")
}

spriteset (spriteset_canyonwallsgrey_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_a_SNOW.png")
}

spriteset (spriteset_canyonwallsgrey_001_b) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_b.png")
}

spriteset (spriteset_canyonwallsgrey_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_b_SNOW.png")
}

spriteset (spriteset_canyonwallsgrey_001_c) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_c.png")
}

spriteset (spriteset_canyonwallsgrey_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_c_SNOW.png")
}


spriteset (spriteset_canyonwallsgrey_001_d) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_d.png")
}

spriteset (spriteset_canyonwallsgrey_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/canyonwallsgrey_001_d_SNOW.png")
}

spriteset (spriteset_canyonwallsgrey_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/canyonwallsgrey_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_canyonwallsgrey_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsgrey_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsgrey_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_canyonwallsgrey_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsgrey_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsgrey_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_canyonwallsgrey_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsgrey_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsgrey_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_canyonwallsgrey_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_canyonwallsgrey_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_canyonwallsgrey_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_canyonwallsgrey_001_view, view) {
    1:  spritelayout_canyonwallsgrey_001_b;
    2:  spritelayout_canyonwallsgrey_001_c;
    3:  spritelayout_canyonwallsgrey_001_d;
    spritelayout_canyonwallsgrey_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_canyonwallsgrey_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_canyonwallsgrey_001_view;
}


spritelayout spritelayout_canyonwallsgrey_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsgrey_001_PURCHASE(0);
	}
}

spritelayout spritelayout_canyonwallsgrey_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsgrey_001_PURCHASE(1);
	}
}

spritelayout spritelayout_canyonwallsgrey_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsgrey_001_PURCHASE(2);
	}
}

spritelayout spritelayout_canyonwallsgrey_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_canyonwallsgrey_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_canyonwallsgrey_001_purchase, view) {
    1:  spritelayout_canyonwallsgrey_001_2_purchase;
    2:  spritelayout_canyonwallsgrey_001_3_purchase;
    3:  spritelayout_canyonwallsgrey_001_4_purchase;
    spritelayout_canyonwallsgrey_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_canyonwallsgrey_001, view) {
1: string(STR_canyonwallsgrey_001_purchase_view2);
2: string(STR_canyonwallsgrey_001_purchase_view3);
3: string(STR_canyonwallsgrey_001_purchase_view4);
default: string(STR_canyonwallsgrey_001_purchase_view1);
}

item (FEAT_OBJECTS, canyonwallsgrey_001, 215) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_canyonwallsgrey_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1100,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_canyonwallsgrey_001_object;
        purchase: switch_canyonwallsgrey_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_canyonwallsgrey_001;

     }
}

/* End Grey Rock Canyon Walls */

/* slope_wateredge */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_wateredge_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_a.png")
}

spriteset (spriteset_slope_wateredge_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_a_SNOW.png")
}

spriteset (spriteset_slope_wateredge_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_b.png")
}

spriteset (spriteset_slope_wateredge_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_b_SNOW.png")
}

spriteset (spriteset_slope_wateredge_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_c.png")
}

spriteset (spriteset_slope_wateredge_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_c_SNOW.png")
}


spriteset (spriteset_slope_wateredge_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_d.png")
}

spriteset (spriteset_slope_wateredge_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredge_001_d_SNOW.png")
}

spriteset (spriteset_slope_wateredge_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_wateredge_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_wateredge_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredge_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredge_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_wateredge_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredge_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredge_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_wateredge_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredge_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredge_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_wateredge_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredge_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredge_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_wateredge_001_view, view) {
    1:  spritelayout_slope_wateredge_001_b;
    2:  spritelayout_slope_wateredge_001_c;
    3:  spritelayout_slope_wateredge_001_d;
    spritelayout_slope_wateredge_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_wateredge_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_wateredge_001_view;
}


spritelayout spritelayout_slope_wateredge_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredge_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_wateredge_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredge_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_wateredge_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredge_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_wateredge_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredge_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_wateredge_001_purchase, view) {
    1:  spritelayout_slope_wateredge_001_2_purchase;
    2:  spritelayout_slope_wateredge_001_3_purchase;
    3:  spritelayout_slope_wateredge_001_4_purchase;
    spritelayout_slope_wateredge_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_wateredge_001, view) {
1: string(STR_slope_wateredge_001_purchase_view2);
2: string(STR_slope_wateredge_001_purchase_view3);
3: string(STR_slope_wateredge_001_purchase_view4);
default: string(STR_slope_wateredge_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_wateredge_001, 216) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_slope_wateredge_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_wateredge_001_object;
        purchase: switch_slope_wateredge_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_wateredge_001;

     }
}

/* slope_wateredgegrass */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_wateredgegrass_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_a.png")
}

spriteset (spriteset_slope_wateredgegrass_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_a_SNOW.png")
}

spriteset (spriteset_slope_wateredgegrass_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_b.png")
}

spriteset (spriteset_slope_wateredgegrass_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_b_SNOW.png")
}

spriteset (spriteset_slope_wateredgegrass_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_c.png")
}

spriteset (spriteset_slope_wateredgegrass_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_c_SNOW.png")
}


spriteset (spriteset_slope_wateredgegrass_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_d.png")
}

spriteset (spriteset_slope_wateredgegrass_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_wateredgegrass_001_d_SNOW.png")
}

spriteset (spriteset_slope_wateredgegrass_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_wateredgegrass_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_wateredgegrass_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredgegrass_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredgegrass_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_wateredgegrass_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredgegrass_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredgegrass_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_wateredgegrass_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredgegrass_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredgegrass_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_wateredgegrass_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_wateredgegrass_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_wateredgegrass_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_wateredgegrass_001_view, view) {
    1:  spritelayout_slope_wateredgegrass_001_b;
    2:  spritelayout_slope_wateredgegrass_001_c;
    3:  spritelayout_slope_wateredgegrass_001_d;
    spritelayout_slope_wateredgegrass_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_wateredgegrass_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_wateredgegrass_001_view;
}


spritelayout spritelayout_slope_wateredgegrass_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredgegrass_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_wateredgegrass_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredgegrass_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_wateredgegrass_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredgegrass_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_wateredgegrass_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_wateredgegrass_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_wateredgegrass_001_purchase, view) {
    1:  spritelayout_slope_wateredgegrass_001_2_purchase;
    2:  spritelayout_slope_wateredgegrass_001_3_purchase;
    3:  spritelayout_slope_wateredgegrass_001_4_purchase;
    spritelayout_slope_wateredgegrass_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_wateredgegrass_001, view) {
1: string(STR_slope_wateredgegrass_001_purchase_view2);
2: string(STR_slope_wateredgegrass_001_purchase_view3);
3: string(STR_slope_wateredgegrass_001_purchase_view4);
default: string(STR_slope_wateredgegrass_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_wateredgegrass_001, 217) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_slope_wateredgegrass_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_wateredgegrass_001_object;
        purchase: switch_slope_wateredgegrass_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_wateredgegrass_001;

     }
}

/* redrock_wateredge */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_redrock_wateredge_001_a) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_a.png")
}

spriteset (spriteset_redrock_wateredge_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_a_SNOW.png")
}

spriteset (spriteset_redrock_wateredge_001_b) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_b.png")
}

spriteset (spriteset_redrock_wateredge_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_b_SNOW.png")
}

spriteset (spriteset_redrock_wateredge_001_c) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_c.png")
}

spriteset (spriteset_redrock_wateredge_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_c_SNOW.png")
}


spriteset (spriteset_redrock_wateredge_001_d) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_d.png")
}

spriteset (spriteset_redrock_wateredge_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/redrock_wateredge_001_d_SNOW.png")
}

spriteset (spriteset_redrock_wateredge_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/redrock_wateredge_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_redrock_wateredge_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_redrock_wateredge_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_redrock_wateredge_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_redrock_wateredge_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_redrock_wateredge_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_redrock_wateredge_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_redrock_wateredge_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_redrock_wateredge_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_redrock_wateredge_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_redrock_wateredge_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_redrock_wateredge_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_redrock_wateredge_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_redrock_wateredge_001_view, view) {
    1:  spritelayout_redrock_wateredge_001_b;
    2:  spritelayout_redrock_wateredge_001_c;
    3:  spritelayout_redrock_wateredge_001_d;
    spritelayout_redrock_wateredge_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_redrock_wateredge_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_redrock_wateredge_001_view;
}


spritelayout spritelayout_redrock_wateredge_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_redrock_wateredge_001_PURCHASE(0);
	}
}

spritelayout spritelayout_redrock_wateredge_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_redrock_wateredge_001_PURCHASE(1);
	}
}

spritelayout spritelayout_redrock_wateredge_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_redrock_wateredge_001_PURCHASE(2);
	}
}

spritelayout spritelayout_redrock_wateredge_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_redrock_wateredge_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_redrock_wateredge_001_purchase, view) {
    1:  spritelayout_redrock_wateredge_001_2_purchase;
    2:  spritelayout_redrock_wateredge_001_3_purchase;
    3:  spritelayout_redrock_wateredge_001_4_purchase;
    spritelayout_redrock_wateredge_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_redrock_wateredge_001, view) {
1: string(STR_redrock_wateredge_001_purchase_view2);
2: string(STR_redrock_wateredge_001_purchase_view3);
3: string(STR_redrock_wateredge_001_purchase_view4);
default: string(STR_redrock_wateredge_001_purchase_view1);
}

item (FEAT_OBJECTS, redrock_wateredge_001, 218) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_redrock_wateredge_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_redrock_wateredge_001_object;
        purchase: switch_redrock_wateredge_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_redrock_wateredge_001;

     }
}



/* Concrete slopes */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_concrete_slopes_001_a) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_a.png")
}

spriteset (spriteset_concrete_slopes_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_a_SNOW.png")
}

spriteset (spriteset_concrete_slopes_001_b) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_b.png")
}

spriteset (spriteset_concrete_slopes_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_b_SNOW.png")
}

spriteset (spriteset_concrete_slopes_001_c) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_c.png")
}

spriteset (spriteset_concrete_slopes_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_c_SNOW.png")
}


spriteset (spriteset_concrete_slopes_001_d) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_d.png")
}

spriteset (spriteset_concrete_slopes_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/concrete_slopes_001_d_SNOW.png")
}

spriteset (spriteset_concrete_slopes_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/concrete_slopes_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_concrete_slopes_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_concrete_slopes_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_concrete_slopes_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_concrete_slopes_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_concrete_slopes_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_concrete_slopes_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_concrete_slopes_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_concrete_slopes_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_concrete_slopes_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_concrete_slopes_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_concrete_slopes_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_concrete_slopes_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_concrete_slopes_001_view, view) {
    1:  spritelayout_concrete_slopes_001_b;
    2:  spritelayout_concrete_slopes_001_c;
    3:  spritelayout_concrete_slopes_001_d;
    spritelayout_concrete_slopes_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_concrete_slopes_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_concrete_slopes_001_view;
}


spritelayout spritelayout_concrete_slopes_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_concrete_slopes_001_PURCHASE(0);
	}
}

spritelayout spritelayout_concrete_slopes_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_concrete_slopes_001_PURCHASE(1);
	}
}

spritelayout spritelayout_concrete_slopes_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_concrete_slopes_001_PURCHASE(2);
	}
}

spritelayout spritelayout_concrete_slopes_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_concrete_slopes_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_concrete_slopes_001_purchase, view) {
    1:  spritelayout_concrete_slopes_001_2_purchase;
    2:  spritelayout_concrete_slopes_001_3_purchase;
    3:  spritelayout_concrete_slopes_001_4_purchase;
    spritelayout_concrete_slopes_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_concrete_slopes_001, view) {
1: string(STR_concrete_slopes_001_purchase_view2);
2: string(STR_concrete_slopes_001_purchase_view3);
3: string(STR_concrete_slopes_001_purchase_view4);
default: string(STR_concrete_slopes_001_purchase_view1);
}

item (FEAT_OBJECTS, concrete_slopes_001, 219) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_concrete_slopes_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 2;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_concrete_slopes_001_object;
        purchase: switch_concrete_slopes_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_concrete_slopes_001;

     }
}

/* slope_rocks */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_slope_embankments_001_a) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_a.png")
}

spriteset (spriteset_slope_embankments_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_a_SNOW.png")
}

spriteset (spriteset_slope_embankments_001_b) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_b.png")
}

spriteset (spriteset_slope_embankments_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_b_SNOW.png")
}

spriteset (spriteset_slope_embankments_001_c) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_c.png")
}

spriteset (spriteset_slope_embankments_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_c_SNOW.png")
}


spriteset (spriteset_slope_embankments_001_d) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_d.png")
}

spriteset (spriteset_slope_embankments_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/rock/slope_embankments_001_d_SNOW.png")
}

spriteset (spriteset_slope_embankments_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/rock/slope_embankments_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_slope_embankments_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_embankments_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_embankments_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_slope_embankments_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_embankments_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_embankments_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_slope_embankments_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_embankments_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_embankments_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_slope_embankments_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_slope_embankments_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_slope_embankments_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_slope_embankments_001_view, view) {
    1:  spritelayout_slope_embankments_001_b;
    2:  spritelayout_slope_embankments_001_c;
    3:  spritelayout_slope_embankments_001_d;
    spritelayout_slope_embankments_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_slope_embankments_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_slope_embankments_001_view;
}


spritelayout spritelayout_slope_embankments_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_embankments_001_PURCHASE(0);
	}
}

spritelayout spritelayout_slope_embankments_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_embankments_001_PURCHASE(1);
	}
}

spritelayout spritelayout_slope_embankments_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_embankments_001_PURCHASE(2);
	}
}

spritelayout spritelayout_slope_embankments_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_slope_embankments_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_slope_embankments_001_purchase, view) {
    1:  spritelayout_slope_embankments_001_2_purchase;
    2:  spritelayout_slope_embankments_001_3_purchase;
    3:  spritelayout_slope_embankments_001_4_purchase;
    spritelayout_slope_embankments_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_slope_embankments_001, view) {
1: string(STR_slope_embankments_001_purchase_view2);
2: string(STR_slope_embankments_001_purchase_view3);
3: string(STR_slope_embankments_001_purchase_view4);
default: string(STR_slope_embankments_001_purchase_view1);
}

item (FEAT_OBJECTS, slope_embankments_001, 220) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_slope_embankments_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_slope_embankments_001_object;
        purchase: switch_slope_embankments_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_slope_embankments_001;

     }
}

/* EMBANKMENT */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ballast_slopes) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes.png")
}

spriteset (spriteset_ballast_slopes_SNOW) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes_SNOW.png")
}

spriteset (spriteset_ballast_slopes_PURCHASE) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ballast_slopes_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_ballast_slopes_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_ballast_slopes_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_ballast_slopes_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes_view, view) {
    1:  spritelayout_ballast_slopes_2;
    2:  spritelayout_ballast_slopes_3;
    3:  spritelayout_ballast_slopes_4;
    spritelayout_ballast_slopes_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ballast_slopes_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes_purchase, view) {
    1:  spritelayout_ballast_slopes_2_purchase;
    2:  spritelayout_ballast_slopes_3_purchase;
    3:  spritelayout_ballast_slopes_4_purchase;
    spritelayout_ballast_slopes_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ballast_slopes, view) {
1: string(STR_ballast_slopes_purchase_view2);
2: string(STR_ballast_slopes_purchase_view3);
3: string(STR_ballast_slopes_purchase_view4);
default: string(STR_ballast_slopes_purchase_view1);
}


item (FEAT_OBJECTS, ballast_slopes, 232) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_ballast_slopes);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ballast_slopes_object;
        purchase: switch_ballast_slopes_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_ballast_slopes;

      }
}

/* EMBANKMENT 1 */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ballast_slopes1) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes1.png")
}

spriteset (spriteset_ballast_slopes1_SNOW) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes1_SNOW.png")
}

spriteset (spriteset_ballast_slopes1_PURCHASE) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes1.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ballast_slopes1_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes1(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes1_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes1_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes1_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_ballast_slopes1_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes1(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes1_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes1_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes1_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_ballast_slopes1_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes1(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes1_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes1_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes1_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_ballast_slopes1_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes1(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes1_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes1_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes1_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes1_view, view) {
    1:  spritelayout_ballast_slopes1_2;
    2:  spritelayout_ballast_slopes1_3;
    3:  spritelayout_ballast_slopes1_4;
    spritelayout_ballast_slopes1_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes1_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ballast_slopes1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes1_purchase, view) {
    1:  spritelayout_ballast_slopes1_2_purchase;
    2:  spritelayout_ballast_slopes1_3_purchase;
    3:  spritelayout_ballast_slopes1_4_purchase;
    spritelayout_ballast_slopes1_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ballast_slopes1, view) {
1: string(STR_ballast_slopes1_purchase_view2);
2: string(STR_ballast_slopes1_purchase_view3);
3: string(STR_ballast_slopes1_purchase_view4);
default: string(STR_ballast_slopes1_purchase_view1);
}


item (FEAT_OBJECTS, ballast_slopes1, 233) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_ballast_slopes1);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ballast_slopes1_object;
        purchase: switch_ballast_slopes1_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_ballast_slopes1;
      }
}

/* EMBANKMENT 2 */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ballast_slopes2) {
    template_footbridge(0,0,"gfx/rock/ballast_slopes2.png")
}

spriteset (spriteset_ballast_slopes2_SNOW) {
    template_footbridge(0,0,"gfx/rock/ballast_slopes2_SNOW.png")
}

spriteset (spriteset_ballast_slopes2_PURCHASE) {
    template_footbridge(0,0,"gfx/rock/ballast_slopes2.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ballast_slopes2_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes2(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes2_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes2_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes2_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_ballast_slopes2_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes2(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes2_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes2_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes2_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_ballast_slopes2_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes2(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes2_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes2_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes2_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_ballast_slopes2_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes2(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes2_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes2_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes2_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes2_view, view) {
    1:  spritelayout_ballast_slopes2_2;
    2:  spritelayout_ballast_slopes2_3;
    3:  spritelayout_ballast_slopes2_4;
    spritelayout_ballast_slopes2_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes2_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ballast_slopes2_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes2_purchase, view) {
    1:  spritelayout_ballast_slopes2_2_purchase;
    2:  spritelayout_ballast_slopes2_3_purchase;
    3:  spritelayout_ballast_slopes2_4_purchase;
    spritelayout_ballast_slopes2_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ballast_slopes2, view) {
1: string(STR_ballast_slopes2_purchase_view2);
2: string(STR_ballast_slopes2_purchase_view3);
3: string(STR_ballast_slopes2_purchase_view4);
default: string(STR_ballast_slopes2_purchase_view1);
}


item (FEAT_OBJECTS, ballast_slopes2, 234) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_ballast_slopes2);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ballast_slopes2_object;
        purchase: switch_ballast_slopes2_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_ballast_slopes2;

      }
}

/* SANDSTONE BLOCKS EMBANKMENT 2 */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_embankmentssanstoneblocks_slopes1) {
    template_footbridge(0,0,"gfx/rock/embankmentssanstoneblocks_slopes1.png")
}

spriteset (spriteset_embankmentssanstoneblocks_slopes1_SNOW) {
    template_footbridge(0,0,"gfx/rock/embankmentssanstoneblocks_slopes1_SNOW.png")
}

spriteset (spriteset_embankmentssanstoneblocks_slopes1_PURCHASE) {
    template_building_slope(0,0,"gfx/rock/embankmentssanstoneblocks_slopes1_PURCHASE.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_embankmentssanstoneblocks_slopes1_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes1_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes1_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_embankmentssanstoneblocks_slopes1_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes1_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes1_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_embankmentssanstoneblocks_slopes1_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes1_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes1_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_embankmentssanstoneblocks_slopes1_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes1_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes1_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes1_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_embankmentssanstoneblocks_slopes1_view, view) {
    1:  spritelayout_embankmentssanstoneblocks_slopes1_2;
    2:  spritelayout_embankmentssanstoneblocks_slopes1_3;
    3:  spritelayout_embankmentssanstoneblocks_slopes1_4;
    spritelayout_embankmentssanstoneblocks_slopes1_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_embankmentssanstoneblocks_slopes1_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_embankmentssanstoneblocks_slopes1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_embankmentssanstoneblocks_slopes1_purchase, view) {
    1:  spritelayout_embankmentssanstoneblocks_slopes1_2_purchase;
    2:  spritelayout_embankmentssanstoneblocks_slopes1_3_purchase;
    3:  spritelayout_embankmentssanstoneblocks_slopes1_4_purchase;
    spritelayout_embankmentssanstoneblocks_slopes1_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_embankmentssanstoneblocks_slopes1, view) {
1: string(STR_embankmentssanstoneblocks_slopes1_purchase_view2);
2: string(STR_embankmentssanstoneblocks_slopes1_purchase_view3);
3: string(STR_embankmentssanstoneblocks_slopes1_purchase_view4);
default: string(STR_embankmentssanstoneblocks_slopes1_purchase_view1);
}

item (FEAT_OBJECTS, embankmentssanstoneblocks_slopes1, 230) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_embankmentssanstoneblocks_slopes1);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_embankmentssanstoneblocks_slopes1_object;
        purchase: switch_embankmentssanstoneblocks_slopes1_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_embankmentssanstoneblocks_slopes1;

      }
}

/* SANDSTONE BLOCKS EMBANKMENT 1 */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_embankmentssanstoneblocks_slopes2) {
    template_building_slope(0,0,"gfx/rock/embankmentssanstoneblocks_slopes2.png")
}

spriteset (spriteset_embankmentssanstoneblocks_slopes2_SNOW) {
    template_building_slope(0,0,"gfx/rock/embankmentssanstoneblocks_slopes2_SNOW.png")
}

spriteset (spriteset_embankmentssanstoneblocks_slopes2_PURCHASE) {
    template_building_slope(0,0,"gfx/rock/embankmentssanstoneblocks_slopes2_PURCHASE.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_embankmentssanstoneblocks_slopes2_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes2_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes2_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_embankmentssanstoneblocks_slopes2_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes2_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes2_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_embankmentssanstoneblocks_slopes2_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes2_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes2_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_embankmentssanstoneblocks_slopes2_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_embankmentssanstoneblocks_slopes2_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_embankmentssanstoneblocks_slopes2_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_embankmentssanstoneblocks_slopes2_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_embankmentssanstoneblocks_slopes2_view, view) {
    1:  spritelayout_embankmentssanstoneblocks_slopes2_2;
    2:  spritelayout_embankmentssanstoneblocks_slopes2_3;
    3:  spritelayout_embankmentssanstoneblocks_slopes2_4;
    spritelayout_embankmentssanstoneblocks_slopes2_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_embankmentssanstoneblocks_slopes2_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_embankmentssanstoneblocks_slopes2_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_embankmentssanstoneblocks_slopes2_purchase, view) {
    1:  spritelayout_embankmentssanstoneblocks_slopes2_2_purchase;
    2:  spritelayout_embankmentssanstoneblocks_slopes2_3_purchase;
    3:  spritelayout_embankmentssanstoneblocks_slopes2_4_purchase;
    spritelayout_embankmentssanstoneblocks_slopes2_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_embankmentssanstoneblocks_slopes2, view) {
1: string(STR_embankmentssanstoneblocks_slopes2_purchase_view2);
2: string(STR_embankmentssanstoneblocks_slopes2_purchase_view3);
3: string(STR_embankmentssanstoneblocks_slopes2_purchase_view4);
default: string(STR_embankmentssanstoneblocks_slopes2_purchase_view1);
}

item (FEAT_OBJECTS, embankmentssanstoneblocks_slopes2, 231) {
    property {
        class: "ROCK";
        classname: string(STR_ROCK);
        name: string(STR_embankmentssanstoneblocks_slopes2);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_embankmentssanstoneblocks_slopes2_object;
        purchase: switch_embankmentssanstoneblocks_slopes2_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_STR_embankmentssanstoneblocks_slopes2;

      }
}

/* EMBANKMENT 3 */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ballast_slopes3) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes3.png")
}

spriteset (spriteset_ballast_slopes3_SNOW) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes3_SNOW.png")
}

spriteset (spriteset_ballast_slopes3_PURCHASE) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes3.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ballast_slopes3_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes3(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes3_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes3_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes3_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_ballast_slopes3_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes3(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes3_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes3_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes3_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_ballast_slopes3_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes3(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes3_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes3_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes3_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_ballast_slopes3_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes3(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes3_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes3_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes3_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes3_view, view) {
    1:  spritelayout_ballast_slopes3_2;
    2:  spritelayout_ballast_slopes3_3;
    3:  spritelayout_ballast_slopes3_4;
    spritelayout_ballast_slopes3_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes3_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ballast_slopes3_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes3_purchase, view) {
    1:  spritelayout_ballast_slopes3_2_purchase;
    2:  spritelayout_ballast_slopes3_3_purchase;
    3:  spritelayout_ballast_slopes3_4_purchase;
    spritelayout_ballast_slopes3_1_purchase;
}


switch (FEAT_OBJECTS, SELF, switch_add_text_ballast_slopes3, view) {
1: string(STR_ballast_slopes3_purchase_view2);
2: string(STR_ballast_slopes3_purchase_view3);
3: string(STR_ballast_slopes3_purchase_view4);
default: string(STR_ballast_slopes3_purchase_view1);
}


item (FEAT_OBJECTS, ballast_slopes3, 235) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_ballast_slopes3);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ballast_slopes3_object;
        purchase: switch_ballast_slopes3_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_ballast_slopes3;

      }
}



/* EMBANKMENT 4 */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ballast_slopes4) {
    template_footbridge(0,0,"gfx/rock/ballast_slopes4.png")
}

spriteset (spriteset_ballast_slopes4_SNOW) {
    template_footbridge(0,0,"gfx/rock/ballast_slopes4_SNOW.png")
}

spriteset (spriteset_ballast_slopes4_PURCHASE) {
    template_footbridge(0,0,"gfx/rock/ballast_slopes4.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ballast_slopes4_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes4(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes4_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes4_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes4_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_ballast_slopes4_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes4(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes4_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes4_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes4_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_ballast_slopes4_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes4(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes4_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes4_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes4_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_ballast_slopes4_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes4(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes4_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes4_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes4_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes4_view, view) {
    1:  spritelayout_ballast_slopes4_2;
    2:  spritelayout_ballast_slopes4_3;
    3:  spritelayout_ballast_slopes4_4;
    spritelayout_ballast_slopes4_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes4_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ballast_slopes4_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes4_purchase, view) {
    1:  spritelayout_ballast_slopes4_2_purchase;
    2:  spritelayout_ballast_slopes4_3_purchase;
    3:  spritelayout_ballast_slopes4_4_purchase;
    spritelayout_ballast_slopes4_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_ballast_slopes4, view) {
1: string(STR_ballast_slopes4_purchase_view2);
2: string(STR_ballast_slopes4_purchase_view3);
3: string(STR_ballast_slopes4_purchase_view4);
default: string(STR_ballast_slopes4_purchase_view1);
}


item (FEAT_OBJECTS, ballast_slopes4, 236) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_ballast_slopes4);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_DRAW_WATER);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ballast_slopes4_object;
        purchase: switch_ballast_slopes4_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_STR_ballast_slopes4;

      }
}

/* BALLAST SLOPE WATER EDGE 6 */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ballast_slopes6) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes6.png")
}

spriteset (spriteset_ballast_slopes6_SNOW) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes6_SNOW.png")
}

spriteset (spriteset_ballast_slopes6_PURCHASE) {
    template_building_slope(0,0,"gfx/rock/ballast_slopes6.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ballast_slopes6_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes6(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes6_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes6_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes6_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_ballast_slopes6_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes6(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes6_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes6_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes6_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_ballast_slopes6_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes6(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes6_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes6_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes6_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_ballast_slopes6_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ballast_slopes6(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ballast_slopes6_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ballast_slopes6_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ballast_slopes6_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes6_view, view) {
    1:  spritelayout_ballast_slopes6_2;
    2:  spritelayout_ballast_slopes6_3;
    3:  spritelayout_ballast_slopes6_4;
    spritelayout_ballast_slopes6_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes6_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ballast_slopes6_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ballast_slopes6_purchase, view) {
    1:  spritelayout_ballast_slopes6_2_purchase;
    2:  spritelayout_ballast_slopes6_3_purchase;
    3:  spritelayout_ballast_slopes6_4_purchase;
    spritelayout_ballast_slopes6_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_ballast_slopes6, view) {
1: string(STR_ballast_slopes6_purchase_view2);
2: string(STR_ballast_slopes6_purchase_view3);
3: string(STR_ballast_slopes6_purchase_view4);
default: string(STR_ballast_slopes6_purchase_view1);
}


item (FEAT_OBJECTS, ballast_slopes6, 237) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_ballast_slopes6);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ballast_slopes6_object;
        purchase: switch_ballast_slopes6_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_STR_ballast_slopes6;

      }
}

/************************************************
*************************************************
                    START  TREES
*************************************************
*************************************************/

/***************************************************
*   rangerstower
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_rangerstower) {
    template_very_tall(0,0, "gfx/tallpieces01_8.png")
}
alternative_sprites (spriteset_rangerstower, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_very_tall_MASK(0,0, "gfx/rangerstower_32.png", "gfx/rangerstower_32_MASK.png")
}

spriteset (spriteset_rangerstower_SNOW) {
    template_very_tall(0,0, "gfx/tallpieces01_8.png")
}
alternative_sprites (spriteset_rangerstower_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
   template_very_tall_MASK(0,0, "gfx/rangerstower_32.png", "gfx/rangerstower_32_MASK.png")
}

spriteset (spriteset_rangerstower_PURCHASE) {
    template_flat_high(0,0, "gfx/tallpieces01_8.png")
}
alternative_sprites (spriteset_rangerstower_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP) {
    template_flat_high(0,0, "gfx/rangerstower_32_PURCHASE.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_rangerstower_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_rangerstower(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 240;
    }

building {
        sprite: spriteset_rangerstower_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 240;
    }

}

spritelayout spritelayout_rangerstower_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_rangerstower_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 240;
   }
}



//Direction_2
spritelayout spritelayout_rangerstower_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_rangerstower(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 240;
    }

building {
        sprite: spriteset_rangerstower_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 240;
    }

}

spritelayout spritelayout_rangerstower_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_rangerstower_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 240;
   }
}

//Direction_3
spritelayout spritelayout_rangerstower_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_rangerstower(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 125;
    }

building {
        sprite: spriteset_rangerstower_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 125;
    }

}

spritelayout spritelayout_rangerstower_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_rangerstower_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 125;
   }
}


//Direction_4
spritelayout spritelayout_rangerstower_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_rangerstower(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 125;
    }

building {
        sprite: spriteset_rangerstower_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 125;
    }

}

spritelayout spritelayout_rangerstower_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_rangerstower_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 125;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_rangerstower_view, view) {
    1:  spritelayout_rangerstower_2;
    2:  spritelayout_rangerstower_3;
    3:  spritelayout_rangerstower_4;
    spritelayout_rangerstower_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_rangerstower_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_rangerstower_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_rangerstower_purchase, view) {
    1:  spritelayout_rangerstower_2_purchase;
    2:  spritelayout_rangerstower_3_purchase;
    3:  spritelayout_rangerstower_4_purchase;
    spritelayout_rangerstower_1_purchase;
}

item (FEAT_OBJECTS, rangerstower, 027) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_rangerstower);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_rangerstower_object;
        purchase: switch_rangerstower_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}




/* GOAT TRACKS */

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_goattracks_001_a) {
    template_slopeaware(0,0,"gfx/goattracks_001_a.png")
}

spriteset (spriteset_goattracks_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/goattracks_001_a_SNOW.png")
}

spriteset (spriteset_goattracks_001_b) {
    template_slopeaware(0,0,"gfx/goattracks_001_b.png")
}

spriteset (spriteset_goattracks_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/goattracks_001_b_SNOW.png")
}

spriteset (spriteset_goattracks_001_c) {
    template_slopeaware(0,0,"gfx/goattracks_001_c.png")
}

spriteset (spriteset_goattracks_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/goattracks_001_c_SNOW.png")
}


spriteset (spriteset_goattracks_001_d) {
    template_slopeaware(0,0,"gfx/goattracks_001_d.png")
}

spriteset (spriteset_goattracks_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/goattracks_001_d_SNOW.png")
}

spriteset (spriteset_goattracks_001_PURCHASE) {
    template_flat_low(0,0,"gfx/goattracks_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_goattracks_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_goattracks_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_goattracks_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
        childsprite {
                sprite: spriteset_goattracks_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_goattracks_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
}


//View_b

spritelayout spritelayout_goattracks_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_goattracks_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_goattracks_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
        childsprite {
                sprite: spriteset_goattracks_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
         sprite: spriteset_goattracks_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
}

//View_c

spritelayout spritelayout_goattracks_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_goattracks_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_goattracks_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
        childsprite {
                sprite: spriteset_goattracks_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_goattracks_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
}

//View_d

spritelayout spritelayout_goattracks_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	
	}
	childsprite {
		sprite: spriteset_goattracks_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_goattracks_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
        childsprite {
                sprite: spriteset_goattracks_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_goattracks_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_goattracks_001_view, view) {
    1:  spritelayout_goattracks_001_b;
    2:  spritelayout_goattracks_001_c;
    3:  spritelayout_goattracks_001_d;
    spritelayout_goattracks_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_goattracks_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_goattracks_001_view;
}


spritelayout spritelayout_goattracks_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_goattracks_001_PURCHASE(0);
	}
}

spritelayout spritelayout_goattracks_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_goattracks_001_PURCHASE(1);
	}
}

spritelayout spritelayout_goattracks_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_goattracks_001_PURCHASE(2);
	}
}

spritelayout spritelayout_goattracks_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_goattracks_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_goattracks_001_purchase, view) {
    1:  spritelayout_goattracks_001_2_purchase;
    2:  spritelayout_goattracks_001_3_purchase;
    3:  spritelayout_goattracks_001_4_purchase;
    spritelayout_goattracks_001_1_purchase;
}

item (FEAT_OBJECTS, goattracks_001, 008) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_goattracks_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_goattracks_001_object;
        purchase: switch_goattracks_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/* GOAT TRACKS */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_goattrackscurves) {
    template_building_low(0,0,"gfx/goattrackscurves.png")
}

spriteset (spriteset_goattrackscurves_SNOW) {
    template_building_low(0,0,"gfx/goattrackscurves.png")
}

spriteset (spriteset_goattrackscurves_PURCHASE) {
    template_building_low(0,0,"gfx/goattrackscurves.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_goattrackscurves_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattrackscurves(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 16;
    }

building {
        sprite: spriteset_goattrackscurves_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 16;
    }

}

spritelayout spritelayout_goattrackscurves_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattrackscurves_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 32;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_goattrackscurves_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattrackscurves(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 20;
    }

building {
        sprite: spriteset_goattrackscurves_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 20;
    }

}

spritelayout spritelayout_goattrackscurves_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattrackscurves_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 32;
                yextent: 16;
                zextent: 20;
   }
}

//Direction_3
spritelayout spritelayout_goattrackscurves_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattrackscurves(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 20;
    }

building {
        sprite: spriteset_goattrackscurves_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 20;
    }

}

spritelayout spritelayout_goattrackscurves_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattrackscurves_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 32;
                zextent: 20;
   }
}


//Direction_4
spritelayout spritelayout_goattrackscurves_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattrackscurves(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_goattrackscurves_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_goattrackscurves_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattrackscurves_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 32;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_goattrackscurves_view, view) {
    1:  spritelayout_goattrackscurves_2;
    2:  spritelayout_goattrackscurves_3;
    3:  spritelayout_goattrackscurves_4;
    spritelayout_goattrackscurves_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_goattrackscurves_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_goattrackscurves_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_goattrackscurves_purchase, view) {
    1:  spritelayout_goattrackscurves_2_purchase;
    2:  spritelayout_goattrackscurves_3_purchase;
    3:  spritelayout_goattrackscurves_4_purchase;
    spritelayout_goattrackscurves_1_purchase;
}



item (FEAT_OBJECTS, goattrackscurves, 009) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_goattrackscurves);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date: date(1800,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_goattrackscurves_object;
        purchase: switch_goattrackscurves_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        //additional_text: switch_add_text_STR_goattrackscurves;
      }
}

/* GOAT TRACKS */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_goattracksjct1) {
    template_building_low(0,0,"gfx/goattracksjct1.png")
}

spriteset (spriteset_goattracksjct1_SNOW) {
    template_building_low(0,0,"gfx/goattracksjct1.png")
}

spriteset (spriteset_goattracksjct1_PURCHASE) {
    template_building_low(0,0,"gfx/goattracksjct1.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_goattracksjct1_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct1(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 16;
    }

building {
        sprite: spriteset_goattracksjct1_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 16;
    }

}

spritelayout spritelayout_goattracksjct1_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct1_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 32;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_goattracksjct1_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct1(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 20;
    }

building {
        sprite: spriteset_goattracksjct1_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 20;
    }

}

spritelayout spritelayout_goattracksjct1_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct1_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 32;
                yextent: 16;
                zextent: 20;
   }
}

//Direction_3
spritelayout spritelayout_goattracksjct1_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct1(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 20;
    }

building {
        sprite: spriteset_goattracksjct1_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 20;
    }

}

spritelayout spritelayout_goattracksjct1_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct1_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 32;
                zextent: 20;
   }
}


//Direction_4
spritelayout spritelayout_goattracksjct1_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct1(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_goattracksjct1_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_goattracksjct1_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct1_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 32;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_goattracksjct1_view, view) {
    1:  spritelayout_goattracksjct1_2;
    2:  spritelayout_goattracksjct1_3;
    3:  spritelayout_goattracksjct1_4;
    spritelayout_goattracksjct1_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_goattracksjct1_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_goattracksjct1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_goattracksjct1_purchase, view) {
    1:  spritelayout_goattracksjct1_2_purchase;
    2:  spritelayout_goattracksjct1_3_purchase;
    3:  spritelayout_goattracksjct1_4_purchase;
    spritelayout_goattracksjct1_1_purchase;
}


item (FEAT_OBJECTS, goattracksjct1, 010) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_goattracksjct1);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date: date(1800,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_goattracksjct1_object;
        purchase: switch_goattracksjct1_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        //additional_text: switch_add_text_STR_goattracksjct1;
      }
}

/* GOAT TRACKS */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_goattracksjct2) {
    template_building_low(0,0,"gfx/goattracksjct2.png")
}

spriteset (spriteset_goattracksjct2_SNOW) {
    template_building_low(0,0,"gfx/goattracksjct2.png")
}

spriteset (spriteset_goattracksjct2_PURCHASE) {
    template_building_low(0,0,"gfx/goattracksjct2.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_goattracksjct2_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct2(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 16;
    }

building {
        sprite: spriteset_goattracksjct2_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 16;
    }

}

spritelayout spritelayout_goattracksjct2_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct2_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 32;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_goattracksjct2_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct2(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 20;
    }

building {
        sprite: spriteset_goattracksjct2_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 20;
    }

}

spritelayout spritelayout_goattracksjct2_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct2_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 32;
                yextent: 16;
                zextent: 20;
   }
}

//Direction_3
spritelayout spritelayout_goattracksjct2_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct2(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 20;
    }

building {
        sprite: spriteset_goattracksjct2_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 32;
        zextent: 20;
    }

}

spritelayout spritelayout_goattracksjct2_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct2_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 32;
                zextent: 20;
   }
}


//Direction_4
spritelayout spritelayout_goattracksjct2_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_goattracksjct2(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_goattracksjct2_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 32;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_goattracksjct2_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_goattracksjct2_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 32;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_goattracksjct2_view, view) {
    1:  spritelayout_goattracksjct2_2;
    2:  spritelayout_goattracksjct2_3;
    3:  spritelayout_goattracksjct2_4;
    spritelayout_goattracksjct2_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_goattracksjct2_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_goattracksjct2_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_goattracksjct2_purchase, view) {
    1:  spritelayout_goattracksjct2_2_purchase;
    2:  spritelayout_goattracksjct2_3_purchase;
    3:  spritelayout_goattracksjct2_4_purchase;
    spritelayout_goattracksjct2_1_purchase;
}


item (FEAT_OBJECTS, goattracksjct2, 011) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_goattracksjct2);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date: date(1800,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_goattracksjct2_object;
        purchase: switch_goattracksjct2_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        //additional_text: switch_add_text_STR_goattracksjct2;
      }
}

/********************************************
     END GOAT TRACKS
*********************************************/

/****************************************************
Start prissi_pinetrees
****************************************************/

//TEMPLATES & SPRITESETS//
template template_prissi_pinetrees(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}

template template_prissi_pinetrees_purchase(x,y,filename) {

    [x, y, 64, 64, -31, -33, filename]
    [x+70, y, 64, 64, -31, -33, filename]
    [x+140, y, 64, 64, -31, -33, filename]
    [x+210, y, 64, 64, -31, -33, filename]

}


//TOP ROW NE + SNOW//
spriteset (spriteset_prissi_pinetrees_1) {
    	template_prissi_pinetrees(0,0,"gfx/normal_8.png")
	template_prissi_pinetrees(70,0,"gfx/normal_8.png")
	template_prissi_pinetrees(140,0,"gfx/normal_8.png")
	template_prissi_pinetrees(210,0,"gfx/normal_8.png")
	template_prissi_pinetrees(280,0,"gfx/normal_8.png")
	template_prissi_pinetrees(350,0,"gfx/normal_8.png")
	template_prissi_pinetrees(420,0,"gfx/normal_8.png")
	template_prissi_pinetrees(490,0,"gfx/normal_8.png")
	template_prissi_pinetrees(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_prissi_pinetrees(0,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(70,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(140,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(210,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(280,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(350,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(420,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(490,0,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(560,0,"gfx/prissi_pinetrees_32.png")
}

spriteset (spriteset_prissi_pinetrees_1_snow) {
    	template_prissi_pinetrees(0,0,"gfx/normal_8.png")
	template_prissi_pinetrees(70,0,"gfx/normal_8.png")
	template_prissi_pinetrees(140,0,"gfx/normal_8.png")
	template_prissi_pinetrees(210,0,"gfx/normal_8.png")
	template_prissi_pinetrees(280,0,"gfx/normal_8.png")
	template_prissi_pinetrees(350,0,"gfx/normal_8.png")
	template_prissi_pinetrees(420,0,"gfx/normal_8.png")
	template_prissi_pinetrees(490,0,"gfx/normal_8.png")
	template_prissi_pinetrees(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_prissi_pinetrees(0,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(70,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(140,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(210,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(280,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(350,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(420,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(490,0,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(560,0,"gfx/prissi_pinetrees_32_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_prissi_pinetrees_2) {
    	template_prissi_pinetrees(0,70,"gfx/normal_8.png")
	template_prissi_pinetrees(70,70,"gfx/normal_8.png")
	template_prissi_pinetrees(140,70,"gfx/normal_8.png")
	template_prissi_pinetrees(210,70,"gfx/normal_8.png")
	template_prissi_pinetrees(280,70,"gfx/normal_8.png")
	template_prissi_pinetrees(350,70,"gfx/normal_8.png")
	template_prissi_pinetrees(420,70,"gfx/normal_8.png")
	template_prissi_pinetrees(490,70,"gfx/normal_8.png")
	template_prissi_pinetrees(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_prissi_pinetrees(0,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(70,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(140,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(210,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(280,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(350,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(420,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(490,70,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(560,70,"gfx/prissi_pinetrees_32.png")
}

spriteset (spriteset_prissi_pinetrees_2_snow) {
    	template_prissi_pinetrees(0,70,"gfx/normal_8.png")
	template_prissi_pinetrees(70,70,"gfx/normal_8.png")
	template_prissi_pinetrees(140,70,"gfx/normal_8.png")
	template_prissi_pinetrees(210,70,"gfx/normal_8.png")
	template_prissi_pinetrees(280,70,"gfx/normal_8.png")
	template_prissi_pinetrees(350,70,"gfx/normal_8.png")
	template_prissi_pinetrees(420,70,"gfx/normal_8.png")
	template_prissi_pinetrees(490,70,"gfx/normal_8.png")
	template_prissi_pinetrees(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_prissi_pinetrees(0,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(70,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(140,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(210,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(280,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(350,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(420,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(490,70,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(560,70,"gfx/prissi_pinetrees_32_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_prissi_pinetrees_3) {
    	template_prissi_pinetrees(0,140,"gfx/normal_8.png")
	template_prissi_pinetrees(70,140,"gfx/normal_8.png")
	template_prissi_pinetrees(140,140,"gfx/normal_8.png")
	template_prissi_pinetrees(210,140,"gfx/normal_8.png")
	template_prissi_pinetrees(280,140,"gfx/normal_8.png")
	template_prissi_pinetrees(350,140,"gfx/normal_8.png")
	template_prissi_pinetrees(420,140,"gfx/normal_8.png")
	template_prissi_pinetrees(490,140,"gfx/normal_8.png")
	template_prissi_pinetrees(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_prissi_pinetrees(0,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(70,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(140,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(210,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(280,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(350,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(420,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(490,140,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(560,140,"gfx/prissi_pinetrees_32.png")
}


spriteset (spriteset_prissi_pinetrees_3_snow) {
    	template_prissi_pinetrees(0,140,"gfx/normal_8.png")
	template_prissi_pinetrees(70,140,"gfx/normal_8.png")
	template_prissi_pinetrees(140,140,"gfx/normal_8.png")
	template_prissi_pinetrees(210,140,"gfx/normal_8.png")
	template_prissi_pinetrees(280,140,"gfx/normal_8.png")
	template_prissi_pinetrees(350,140,"gfx/normal_8.png")
	template_prissi_pinetrees(420,140,"gfx/normal_8.png")
	template_prissi_pinetrees(490,140,"gfx/normal_8.png")
	template_prissi_pinetrees(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_prissi_pinetrees_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_prissi_pinetrees(0,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(70,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(140,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(210,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(280,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(350,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(420,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(490,140,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(560,140,"gfx/prissi_pinetrees_32_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_prissi_pinetrees_4) {
    	template_prissi_pinetrees(0,210,"gfx/normal_8.png")
	template_prissi_pinetrees(70,210,"gfx/normal_8.png")
	template_prissi_pinetrees(140,210,"gfx/normal_8.png")
	template_prissi_pinetrees(210,210,"gfx/normal_8.png")	
	template_prissi_pinetrees(280,210,"gfx/normal_8.png")
	template_prissi_pinetrees(350,210,"gfx/normal_8.png")
	template_prissi_pinetrees(420,210,"gfx/normal_8.png")
	template_prissi_pinetrees(490,210,"gfx/normal_8.png")
	template_prissi_pinetrees(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_prissi_pinetrees(0,210,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(70,210,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(140,210,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(210,210,"gfx/prissi_pinetrees_32.png")	
	template_prissi_pinetrees(280,210,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(350,210,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(420,210,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(490,210,"gfx/prissi_pinetrees_32.png")
	template_prissi_pinetrees(560,210,"gfx/prissi_pinetrees_32.png")
}

spriteset (spriteset_prissi_pinetrees_4_snow) {
    	template_prissi_pinetrees(0,210,"gfx/normal_8.png")
	template_prissi_pinetrees(70,210,"gfx/normal_8.png")
	template_prissi_pinetrees(140,210,"gfx/normal_8.png")
	template_prissi_pinetrees(210,210,"gfx/normal_8.png")	
	template_prissi_pinetrees(280,210,"gfx/normal_8.png")
	template_prissi_pinetrees(350,210,"gfx/normal_8.png")
	template_prissi_pinetrees(420,210,"gfx/normal_8.png")
	template_prissi_pinetrees(490,210,"gfx/normal_8.png")
	template_prissi_pinetrees(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_prissi_pinetrees(0,210,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(70,210,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(140,210,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(210,210,"gfx/prissi_pinetrees_32_snow.png")	
	template_prissi_pinetrees(280,210,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(350,210,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(420,210,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(490,210,"gfx/prissi_pinetrees_32_snow.png")
	template_prissi_pinetrees(560,210,"gfx/prissi_pinetrees_32_snow.png")
}

spriteset (spriteset_prissi_pinetrees_PURCHASE) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}

alternative_sprites (spriteset_prissi_pinetrees_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/prissi_pinetrees_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE prissi_pinetrees//
//SPRITELAYOUTS//

//RURAL prissi_pinetrees LOT NE + PURCHASE//
spritelayout spritelayout_prissi_pinetrees_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_prissi_pinetrees_1((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_prissi_pinetrees_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_prissi_pinetrees_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_prissi_pinetrees_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL prissi_pinetrees LOT SE + PURCHASE//
spritelayout spritelayout_prissi_pinetrees_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_prissi_pinetrees_2((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_prissi_pinetrees_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_prissi_pinetrees_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_prissi_pinetrees_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE prissi_pinetrees//
//prissi_pinetrees LOT NE + PURCHASE//
spritelayout spritelayout_prissi_pinetrees_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_prissi_pinetrees_3((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_prissi_pinetrees_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_prissi_pinetrees_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_prissi_pinetrees_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//prissi_pinetrees LOT SE + PURCHASE//
spritelayout spritelayout_prissi_pinetrees_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_prissi_pinetrees_4((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_prissi_pinetrees_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_prissi_pinetrees_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_prissi_pinetrees_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_prissi_pinetrees_1_view, view) {
    1:  spritelayout_prissi_pinetrees_02;
    2:  spritelayout_prissi_pinetrees_03;
    3:  spritelayout_prissi_pinetrees_04;
    spritelayout_prissi_pinetrees_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_prissi_pinetrees_1_object, [
        //tile slope offset in storage register 0
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_prissi_pinetrees_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_prissi_pinetrees_1_purchase, view) {
    1:  spritelayout_prissi_pinetrees_02_purchase;
    2:  spritelayout_prissi_pinetrees_03_purchase;
    3:  spritelayout_prissi_pinetrees_04_purchase;
    spritelayout_prissi_pinetrees_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_prissi_pinetrees, view) {
1: string(STR_prissi_pinetrees_purchase_view2);
2: string(STR_prissi_pinetrees_purchase_view3);
3: string(STR_prissi_pinetrees_purchase_view4);
default: string(STR_prissi_pinetrees_purchase_view1);
}

item (FEAT_OBJECTS, item_prissi_pinetrees_1, 001) {
    property {
        class:                  "FRST";
	classname:		string(STR_FRST);
        name:                   string(STR_prissi_pinetrees_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//	animation_info:			[ANIMATION_LOOPING, 9];
//	animation_speed:		7;
//	animation_triggers:		3;
        height:                 0;
        num_views:              4;
    }
    graphics {
        default:            switch_prissi_pinetrees_1_object;
        purchase:           switch_prissi_pinetrees_1_purchase;
        autoslope:          return CB_RESULT_AUTOSLOPE;

        additional_text:    switch_add_text_STR_prissi_pinetrees;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  prissi_pinetrees
*****************************************/

/***************************************************
*  START gardentrees01
***************************************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_gardentrees01) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_gardentrees01, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/gardentrees01_32.png")
}

spriteset (spriteset_gardentrees01_SNOW) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_gardentrees01_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/gardentrees01_32.png")
}

spriteset (spriteset_gardentrees01_PURCHASE) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_gardentrees01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/gardentrees01_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_gardentrees01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_gardentrees01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_gardentrees01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_gardentrees01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_gardentrees01_view, view) {
    1:  spritelayout_gardentrees01_2;
    2:  spritelayout_gardentrees01_3;
    3:  spritelayout_gardentrees01_4;
    spritelayout_gardentrees01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_gardentrees01_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
//    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_gardentrees01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_gardentrees01_purchase, view) {
    1:  spritelayout_gardentrees01_2_purchase;
    2:  spritelayout_gardentrees01_3_purchase;
    3:  spritelayout_gardentrees01_4_purchase;
    spritelayout_gardentrees01_1_purchase;
}

item (FEAT_OBJECTS, gardentrees01, 002) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_gardentrees01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 1;
        num_views: 4;
     }
    graphics {
        default: switch_gardentrees01_object;
        purchase: switch_gardentrees01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  gardentrees01
***********************************/


/***************************************************
*  START gardentrees02
***************************************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_gardentrees02) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_gardentrees02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/gardentrees02_32.png")
}

spriteset (spriteset_gardentrees02_SNOW) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_gardentrees02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/gardentrees02_32.png")
}

spriteset (spriteset_gardentrees02_PURCHASE) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_gardentrees02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/gardentrees02_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_gardentrees02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_gardentrees02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_gardentrees02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_gardentrees02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_gardentrees02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_gardentrees02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_gardentrees02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_gardentrees02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_gardentrees02_view, view) {
    1:  spritelayout_gardentrees02_2;
    2:  spritelayout_gardentrees02_3;
    3:  spritelayout_gardentrees02_4;
    spritelayout_gardentrees02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_gardentrees02_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
//    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_gardentrees02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_gardentrees02_purchase, view) {
    1:  spritelayout_gardentrees02_2_purchase;
    2:  spritelayout_gardentrees02_3_purchase;
    3:  spritelayout_gardentrees02_4_purchase;
    spritelayout_gardentrees02_1_purchase;
}

item (FEAT_OBJECTS, gardentrees02, 003) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_gardentrees02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 1;
        num_views: 4;
     }
    graphics {
        default: switch_gardentrees02_object;
        purchase: switch_gardentrees02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  gardentrees02
***********************************/

/********************************
   START  VASTTrees01
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_VASTTrees01_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/VASTTrees01_32.png")
}

spriteset (spriteset_VASTTrees01_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/VASTTrees01_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/VASTTrees01_32.png")
}

spriteset (spriteset_VASTTrees01_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/VASTTrees01_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/VASTTrees01_32.png")
}

spriteset (spriteset_VASTTrees01_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/VASTTrees01_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/VASTTrees01_32.png")
}

spriteset (spriteset_VASTTrees01_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/VASTTrees01_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01_PURCHASE) {
    template_slopeobjects_purchase(0,0,"gfx/slopeawareobjects_8_PURCHASE.png")
}

alternative_sprites (spriteset_VASTTrees01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeobjects_purchase(0,0,"gfx/VASTTrees01_32_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_VASTTrees01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_VASTTrees01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_VASTTrees01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_VASTTrees01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_VASTTrees01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_VASTTrees01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_VASTTrees01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_VASTTrees01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_VASTTrees01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_VASTTrees01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_VASTTrees01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_VASTTrees01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_VASTTrees01_view, view) {
    1:  spritelayout_VASTTrees01_b;
    2:  spritelayout_VASTTrees01_c;
    3:  spritelayout_VASTTrees01_d;
    spritelayout_VASTTrees01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_VASTTrees01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_VASTTrees01_view;
}


spritelayout spritelayout_VASTTrees01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01_PURCHASE(0);
	}
}

spritelayout spritelayout_VASTTrees01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01_PURCHASE(1);
	}
}

spritelayout spritelayout_VASTTrees01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01_PURCHASE(2);
	}
}

spritelayout spritelayout_VASTTrees01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_VASTTrees01_purchase, view) {
    1:  spritelayout_VASTTrees01_2_purchase;
    2:  spritelayout_VASTTrees01_3_purchase;
    3:  spritelayout_VASTTrees01_4_purchase;
    spritelayout_VASTTrees01_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_VASTTrees01, view) {
1: string(STR_VASTTrees01_purchase_view2);
2: string(STR_VASTTrees01_purchase_view3);
3: string(STR_VASTTrees01_purchase_view4);
default: string(STR_VASTTrees01_purchase_view1);
}


item (FEAT_OBJECTS, VASTTrees01, 004) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_VASTTrees01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_VASTTrees01_object;
        purchase: switch_VASTTrees01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text:    switch_add_text_STR_VASTTrees01;
        autoslope:          return CB_RESULT_AUTOSLOPE;


     }
}

/********************************
   END  VASTTrees01
*********************************/

/********************************
   START  VASTTrees01a
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_VASTTrees01a_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/VASTTrees01a_32.png")
}

spriteset (spriteset_VASTTrees01a_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/VASTTrees01a_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01a_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/VASTTrees01a_32.png")
}

spriteset (spriteset_VASTTrees01a_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/VASTTrees01a_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01a_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/VASTTrees01a_32.png")
}

spriteset (spriteset_VASTTrees01a_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/VASTTrees01a_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01a_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/VASTTrees01a_32.png")
}

spriteset (spriteset_VASTTrees01a_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_VASTTrees01a_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/VASTTrees01a_32_SNOW.png")
}

spriteset (spriteset_VASTTrees01a_PURCHASE) {
    template_slopeobjects_purchase(0,0,"gfx/slopeawareobjects_8_PURCHASE.png")
}

alternative_sprites (spriteset_VASTTrees01a_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeobjects_purchase(0,0,"gfx/VASTTrees01a_32_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_VASTTrees01a_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_VASTTrees01a_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_VASTTrees01a_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01a_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01a_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_VASTTrees01a_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_VASTTrees01a_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_VASTTrees01a_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01a_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01a_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_VASTTrees01a_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_VASTTrees01a_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_VASTTrees01a_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01a_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01a_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_VASTTrees01a_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_VASTTrees01a_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_VASTTrees01a_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_VASTTrees01a_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_VASTTrees01a_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_VASTTrees01a_view, view) {
    1:  spritelayout_VASTTrees01a_b;
    2:  spritelayout_VASTTrees01a_c;
    3:  spritelayout_VASTTrees01a_d;
    spritelayout_VASTTrees01a_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_VASTTrees01a_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_VASTTrees01a_view;
}


spritelayout spritelayout_VASTTrees01a_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01a_PURCHASE(0);
	}
}

spritelayout spritelayout_VASTTrees01a_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01a_PURCHASE(1);
	}
}

spritelayout spritelayout_VASTTrees01a_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01a_PURCHASE(2);
	}
}

spritelayout spritelayout_VASTTrees01a_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_VASTTrees01a_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_VASTTrees01a_purchase, view) {
    1:  spritelayout_VASTTrees01a_2_purchase;
    2:  spritelayout_VASTTrees01a_3_purchase;
    3:  spritelayout_VASTTrees01a_4_purchase;
    spritelayout_VASTTrees01a_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_VASTTrees01a, view) {
1: string(STR_VASTTrees01a_purchase_view2);
2: string(STR_VASTTrees01a_purchase_view3);
3: string(STR_VASTTrees01a_purchase_view4);
default: string(STR_VASTTrees01a_purchase_view1);
}


item (FEAT_OBJECTS, VASTTrees01a, 005) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_VASTTrees01a);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_VASTTrees01a_object;
        purchase: switch_VASTTrees01a_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text:    switch_add_text_STR_VASTTrees01a;
        autoslope:          return CB_RESULT_AUTOSLOPE;


     }
}

/********************************
   END  VASTTrees01a
*********************************/

/****************************************************
Start palmtrees
****************************************************/

//TEMPLATES & SPRITESETS//
template template_palmtrees(x,y,filename) {
    [x,		y,      64,     120,     -31,    -89,   filename]
}

template template_palmtrees_purchase(x,y,filename) {

    [x, y, 64, 100, -31, -69, filename]
    [x+70, y, 64, 100, -31, -69, filename]
    [x+140, y, 64, 100, -31, -69, filename]
    [x+210, y, 64, 100, -31, -69, filename]

}

//TOP ROW NE + SNOW//
spriteset (spriteset_palmtrees_1) {
    	template_palmtrees(0,0,"gfx/taller_8.png")
	template_palmtrees(70,0,"gfx/taller_8.png")
	template_palmtrees(140,0,"gfx/taller_8.png")
	template_palmtrees(210,0,"gfx/taller_8.png")
	template_palmtrees(280,0,"gfx/taller_8.png")
	template_palmtrees(350,0,"gfx/taller_8.png")
	template_palmtrees(420,0,"gfx/taller_8.png")
	template_palmtrees(490,0,"gfx/taller_8.png")
	template_palmtrees(560,0,"gfx/taller_8.png")
}

alternative_sprites (spriteset_palmtrees_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_palmtrees(0,0,"gfx/palmtrees_32.png")
	template_palmtrees(70,0,"gfx/palmtrees_32.png")
	template_palmtrees(140,0,"gfx/palmtrees_32.png")
	template_palmtrees(210,0,"gfx/palmtrees_32.png")
	template_palmtrees(280,0,"gfx/palmtrees_32.png")
	template_palmtrees(350,0,"gfx/palmtrees_32.png")
	template_palmtrees(420,0,"gfx/palmtrees_32.png")
	template_palmtrees(490,0,"gfx/palmtrees_32.png")
	template_palmtrees(560,0,"gfx/palmtrees_32.png")
}

spriteset (spriteset_palmtrees_1_snow) {
    	template_palmtrees(0,0,"gfx//taller_8.png")
	template_palmtrees(70,0,"gfx/taller_8.png")
	template_palmtrees(140,0,"gfx/taller_8.png")
	template_palmtrees(210,0,"gfx/taller_8.png")
	template_palmtrees(280,0,"gfx/taller_8.png")
	template_palmtrees(350,0,"gfx/taller_8.png")
	template_palmtrees(420,0,"gfx/taller_8.png")
	template_palmtrees(490,0,"gfx/taller_8.png")
	template_palmtrees(560,0,"gfx/taller_8.png")
}

alternative_sprites (spriteset_palmtrees_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_palmtrees(0,0,"gfx/palmtrees_32.png")
	template_palmtrees(70,0,"gfx/palmtrees_32.png")
	template_palmtrees(140,0,"gfx/palmtrees_32.png")
	template_palmtrees(210,0,"gfx/palmtrees_32.png")
	template_palmtrees(280,0,"gfx/palmtrees_32.png")
	template_palmtrees(350,0,"gfx/palmtrees_32.png")
	template_palmtrees(420,0,"gfx/palmtrees_32.png")
	template_palmtrees(490,0,"gfx/palmtrees_32.png")
	template_palmtrees(560,0,"gfx/palmtrees_32.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_palmtrees_2) {
    	template_palmtrees(0,126,"gfx/taller_8.png")
	template_palmtrees(70,126,"gfx/taller_8.png")
	template_palmtrees(140,126,"gfx/taller_8.png")
	template_palmtrees(210,126,"gfx/taller_8.png")
	template_palmtrees(280,126,"gfx/taller_8.png")
	template_palmtrees(350,126,"gfx/taller_8.png")
	template_palmtrees(420,126,"gfx/taller_8.png")
	template_palmtrees(490,126,"gfx/taller_8.png")
	template_palmtrees(560,126,"gfx/taller_8.png")
}

alternative_sprites (spriteset_palmtrees_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_palmtrees(0,126,"gfx/palmtrees_32.png")
	template_palmtrees(70,126,"gfx/palmtrees_32.png")
	template_palmtrees(140,126,"gfx/palmtrees_32.png")
	template_palmtrees(210,126,"gfx/palmtrees_32.png")
	template_palmtrees(280,126,"gfx/palmtrees_32.png")
	template_palmtrees(350,126,"gfx/palmtrees_32.png")
	template_palmtrees(420,126,"gfx/palmtrees_32.png")
	template_palmtrees(490,126,"gfx/palmtrees_32.png")
	template_palmtrees(560,126,"gfx/palmtrees_32.png")
}

spriteset (spriteset_palmtrees_2_snow) {
    	template_palmtrees(0,126,"gfx/taller_8.png")
	template_palmtrees(70,126,"gfx/taller_8.png")
	template_palmtrees(140,126,"gfx/taller_8.png")
	template_palmtrees(210,126,"gfx/taller_8.png")
	template_palmtrees(280,126,"gfx/taller_8.png")
	template_palmtrees(350,126,"gfx/taller_8.png")
	template_palmtrees(420,126,"gfx/taller_8.png")
	template_palmtrees(490,126,"gfx/taller_8.png")
	template_palmtrees(560,126,"gfx/taller_8.png")
}

alternative_sprites (spriteset_palmtrees_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_palmtrees(0,126,"gfx/palmtrees_32.png")
	template_palmtrees(70,126,"gfx/palmtrees_32.png")
	template_palmtrees(140,126,"gfx/palmtrees_32.png")
	template_palmtrees(210,126,"gfx/palmtrees_32.png")
	template_palmtrees(280,126,"gfx/palmtrees_32.png")
	template_palmtrees(350,126,"gfx/palmtrees_32.png")
	template_palmtrees(420,126,"gfx/palmtrees_32.png")
	template_palmtrees(490,126,"gfx/palmtrees_32.png")
	template_palmtrees(560,126,"gfx/palmtrees_32.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_palmtrees_3) {
    	template_palmtrees(0,252,"gfx/taller_8.png")
	template_palmtrees(70,252,"gfx/taller_8.png")
	template_palmtrees(140,252,"gfx/taller_8.png")
	template_palmtrees(210,252,"gfx/taller_8.png")
	template_palmtrees(280,252,"gfx/taller_8.png")
	template_palmtrees(350,252,"gfx/taller_8.png")
	template_palmtrees(420,252,"gfx/taller_8.png")
	template_palmtrees(490,252,"gfx/taller_8.png")
	template_palmtrees(560,252,"gfx/taller_8.png")
}

alternative_sprites (spriteset_palmtrees_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_palmtrees(0,252,"gfx/palmtrees_32.png")
	template_palmtrees(70,252,"gfx/palmtrees_32.png")
	template_palmtrees(140,252,"gfx/palmtrees_32.png")
	template_palmtrees(210,252,"gfx/palmtrees_32.png")
	template_palmtrees(280,252,"gfx/palmtrees_32.png")
	template_palmtrees(350,252,"gfx/palmtrees_32.png")
	template_palmtrees(420,252,"gfx/palmtrees_32.png")
	template_palmtrees(490,252,"gfx/palmtrees_32.png")
	template_palmtrees(560,252,"gfx/palmtrees_32.png")
}


spriteset (spriteset_palmtrees_3_snow) {
    	template_palmtrees(0,252,"gfx/taller_8.png")
	template_palmtrees(70,252,"gfx/taller_8.png")
	template_palmtrees(140,252,"gfx/taller_8.png")
	template_palmtrees(210,252,"gfx/taller_8.png")
	template_palmtrees(280,252,"gfx/taller_8.png")
	template_palmtrees(350,252,"gfx/taller_8.png")
	template_palmtrees(420,252,"gfx/taller_8.png")
	template_palmtrees(490,252,"gfx/taller_8.png")
	template_palmtrees(560,252,"gfx/taller_8.png")
}


alternative_sprites (spriteset_palmtrees_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_palmtrees(0,252,"gfx/palmtrees_32.png")
	template_palmtrees(70,252,"gfx/palmtrees_32.png")
	template_palmtrees(140,252,"gfx/palmtrees_32.png")
	template_palmtrees(210,252,"gfx/palmtrees_32.png")
	template_palmtrees(280,252,"gfx/palmtrees_32.png")
	template_palmtrees(350,252,"gfx/palmtrees_32.png")
	template_palmtrees(420,252,"gfx/palmtrees_32.png")
	template_palmtrees(490,252,"gfx/palmtrees_32.png")
	template_palmtrees(560,252,"gfx/palmtrees_32.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_palmtrees_4) {
    	template_palmtrees(0,378,"gfx/taller_8.png")
	template_palmtrees(70,378,"gfx/taller_8.png")
	template_palmtrees(140,378,"gfx/taller_8.png")
	template_palmtrees(210,378,"gfx/taller_8.png")	
	template_palmtrees(280,378,"gfx/taller_8.png")
	template_palmtrees(350,378,"gfx/taller_8.png")
	template_palmtrees(420,378,"gfx/taller_8.png")
	template_palmtrees(490,378,"gfx/taller_8.png")
	template_palmtrees(560,378,"gfx/taller_8.png")
}

alternative_sprites (spriteset_palmtrees_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_palmtrees(0,378,"gfx/palmtrees_32.png")
	template_palmtrees(70,378,"gfx/palmtrees_32.png")
	template_palmtrees(140,378,"gfx/palmtrees_32.png")
	template_palmtrees(210,378,"gfx/palmtrees_32.png")	
	template_palmtrees(280,378,"gfx/palmtrees_32.png")
	template_palmtrees(350,378,"gfx/palmtrees_32.png")
	template_palmtrees(420,378,"gfx/palmtrees_32.png")
	template_palmtrees(490,378,"gfx/palmtrees_32.png")
	template_palmtrees(560,378,"gfx/palmtrees_32.png")
}

spriteset (spriteset_palmtrees_4_snow) {
    	template_palmtrees(0,378,"gfx/taller_8.png")
	template_palmtrees(70,378,"gfx/taller_8.png")
	template_palmtrees(140,378,"gfx/taller_8.png")
	template_palmtrees(210,378,"gfx/taller_8.png")	
	template_palmtrees(280,378,"gfx/taller_8.png")
	template_palmtrees(350,378,"gfx/taller_8.png")
	template_palmtrees(420,378,"gfx/taller_8.png")
	template_palmtrees(490,378,"gfx/taller_8.png")
	template_palmtrees(560,378,"gfx/taller_8.png")
}

alternative_sprites (spriteset_palmtrees_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_palmtrees(0,378,"gfx/palmtrees_32.png")
	template_palmtrees(70,378,"gfx/palmtrees_32.png")
	template_palmtrees(140,378,"gfx/palmtrees_32.png")
	template_palmtrees(210,378,"gfx/palmtrees_32.png")	
	template_palmtrees(280,378,"gfx/palmtrees_32.png")
	template_palmtrees(350,378,"gfx/palmtrees_32.png")
	template_palmtrees(420,378,"gfx/palmtrees_32.png")
	template_palmtrees(490,378,"gfx/palmtrees_32.png")
	template_palmtrees(560,378,"gfx/palmtrees_32.png")
}

spriteset (spriteset_palmtrees_PURCHASE) {
    template_palmtrees_purchase(0,0,"gfx/taller_8_PURCHASE.png")
}

alternative_sprites (spriteset_palmtrees_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_palmtrees_purchase(0,0,"gfx/palmtrees_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE palmtrees//
//SPRITELAYOUTS//

//RURAL palmtrees LOT NE + PURCHASE//
spritelayout spritelayout_palmtrees_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_palmtrees_1((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 54;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_palmtrees_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 54;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_palmtrees_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_palmtrees_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 54;
    }

}

//RURAL palmtrees LOT SE + PURCHASE//
spritelayout spritelayout_palmtrees_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_palmtrees_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 84;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_palmtrees_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 84;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_palmtrees_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_palmtrees_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 84;
    }

}

//OBJECT 2 SIMPLE palmtrees//
//palmtrees LOT NE + PURCHASE//
spritelayout spritelayout_palmtrees_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_palmtrees_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 10;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_palmtrees_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 10;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_palmtrees_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_palmtrees_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 10;
    }

}

//palmtrees LOT SE + PURCHASE//
spritelayout spritelayout_palmtrees_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_palmtrees_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 10;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_palmtrees_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 10;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_palmtrees_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_palmtrees_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 10;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_palmtrees_1_view, view) {
    1:  spritelayout_palmtrees_02;
    2:  spritelayout_palmtrees_03;
    3:  spritelayout_palmtrees_04;
    spritelayout_palmtrees_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_palmtrees_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_palmtrees_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_palmtrees_1_purchase, view) {
    1:  spritelayout_palmtrees_02_purchase;
    2:  spritelayout_palmtrees_03_purchase;
    3:  spritelayout_palmtrees_04_purchase;
    spritelayout_palmtrees_01_purchase;
}


item (FEAT_OBJECTS, item_palmtrees_1, 006) {
    property {
        class:                  "FRST";
	classname:		string(STR_FRST);
        name:                   string(STR_palmtrees_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_ON_WATER,  OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//	animation_info:			[ANIMATION_LOOPING, 9];
//	animation_speed:		7;
//	animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_palmtrees_1_object;
        purchase:           switch_palmtrees_1_purchase;
        autoslope:          return CB_RESULT_AUTOSLOPE;

	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  palmtrees
*****************************************/

/********************************
 SLOPE AWARE
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_scrub_001_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/scrub_32_001.png")
}

spriteset (spriteset_scrub_001_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/scrub_32_001_SNOW.png")
}

spriteset (spriteset_scrub_001_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/scrub_32_001.png")
}

spriteset (spriteset_scrub_001_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/scrub_32_001_SNOW.png")
}

spriteset (spriteset_scrub_001_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/scrub_32_001.png")
}

spriteset (spriteset_scrub_001_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/scrub_32_001_SNOW.png")
}

spriteset (spriteset_scrub_001_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/scrub_32_001.png")
}

spriteset (spriteset_scrub_001_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_scrub_001_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/scrub_32_001_SNOW.png")
}

spriteset (spriteset_scrub_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/slopeawarehigh_8_PURCHASE.png")
}

alternative_sprites (spriteset_scrub_001_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeaware_purchase(0,0,"gfx/scrub_32_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_scrub_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_scrub_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_scrub_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_scrub_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_scrub_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_scrub_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_scrub_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_scrub_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_scrub_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_scrub_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_scrub_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_scrub_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_scrub_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_scrub_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_scrub_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_scrub_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_scrub_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_scrub_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_scrub_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_scrub_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_scrub_001_view, view) {
    1:  spritelayout_scrub_001_b;
    2:  spritelayout_scrub_001_c;
    3:  spritelayout_scrub_001_d;
    spritelayout_scrub_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_scrub_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_scrub_001_view;
}


spritelayout spritelayout_scrub_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_scrub_001_PURCHASE(0);
	}
}

spritelayout spritelayout_scrub_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_scrub_001_PURCHASE(1);
	}
}

spritelayout spritelayout_scrub_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_scrub_001_PURCHASE(2);
	}
}

spritelayout spritelayout_scrub_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_scrub_001_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_scrub_001_purchase, view) {
    1:  spritelayout_scrub_001_2_purchase;
    2:  spritelayout_scrub_001_3_purchase;
    3:  spritelayout_scrub_001_4_purchase;
    spritelayout_scrub_001_1_purchase;
}


item (FEAT_OBJECTS, scrub_001, 246) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_scrub_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_scrub_001_object;
        purchase: switch_scrub_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/********************************
 SLOPE AWARE
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_skrub_002_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/skrub_32_002.png")
}

spriteset (spriteset_skrub_002_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/skrub_32_002_SNOW.png")
}

spriteset (spriteset_skrub_002_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/skrub_32_002.png")
}

spriteset (spriteset_skrub_002_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/skrub_32_002_SNOW.png")
}

spriteset (spriteset_skrub_002_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/skrub_32_002.png")
}

spriteset (spriteset_skrub_002_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/skrub_32_002_SNOW.png")
}

spriteset (spriteset_skrub_002_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/skrub_32_002.png")
}

spriteset (spriteset_skrub_002_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_002_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/skrub_32_002_SNOW.png")
}

spriteset (spriteset_skrub_002_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/slopeawarehigh_8_PURCHASE.png")
}

alternative_sprites (spriteset_skrub_002_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeaware_purchase(0,0,"gfx/skrub_32_002_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_skrub_002_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_002_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_skrub_002_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_002_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_002_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_skrub_002_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_002_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_skrub_002_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_002_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_002_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub_002_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_002_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_skrub_002_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_002_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_002_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_skrub_002_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_skrub_002_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_skrub_002_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_002_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_002_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_skrub_002_view, view) {
    1:  spritelayout_skrub_002_b;
    2:  spritelayout_skrub_002_c;
    3:  spritelayout_skrub_002_d;
    spritelayout_skrub_002_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_skrub_002_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_skrub_002_view;
}


spritelayout spritelayout_skrub_002_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_002_PURCHASE(0);
	}
}

spritelayout spritelayout_skrub_002_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_002_PURCHASE(1);
	}
}

spritelayout spritelayout_skrub_002_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_002_PURCHASE(2);
	}
}

spritelayout spritelayout_skrub_002_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_002_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_skrub_002_purchase, view) {
    1:  spritelayout_skrub_002_2_purchase;
    2:  spritelayout_skrub_002_3_purchase;
    3:  spritelayout_skrub_002_4_purchase;
    spritelayout_skrub_002_1_purchase;
}


item (FEAT_OBJECTS, skrub_002, 251) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_skrub_002);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_skrub_002_object;
        purchase: switch_skrub_002_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return CB_RESULT_AUTOSLOPE;


     }
}

/********************************
 SLOPE AWARE
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_skrub_003_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/skrub_32_003.png")
}

spriteset (spriteset_skrub_003_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/skrub_32_003_SNOW.png")
}

spriteset (spriteset_skrub_003_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/skrub_32_003.png")
}

spriteset (spriteset_skrub_003_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/skrub_32_003_SNOW.png")
}

spriteset (spriteset_skrub_003_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/skrub_32_003.png")
}

spriteset (spriteset_skrub_003_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/skrub_32_003_SNOW.png")
}

spriteset (spriteset_skrub_003_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/skrub_32_003.png")
}

spriteset (spriteset_skrub_003_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_003_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/skrub_32_003_SNOW.png")
}

spriteset (spriteset_skrub_003_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/slopeawarehigh_8_PURCHASE.png")
}

alternative_sprites (spriteset_skrub_003_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeaware_purchase(0,0,"gfx/skrub_32_003_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_skrub_003_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_003_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_skrub_003_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_003_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_003_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_skrub_003_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_003_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_skrub_003_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_003_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_003_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub_003_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_003_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_skrub_003_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_003_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_003_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_skrub_003_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_skrub_003_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_skrub_003_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_003_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_003_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_skrub_003_view, view) {
    1:  spritelayout_skrub_003_b;
    2:  spritelayout_skrub_003_c;
    3:  spritelayout_skrub_003_d;
    spritelayout_skrub_003_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_skrub_003_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_skrub_003_view;
}


spritelayout spritelayout_skrub_003_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_003_PURCHASE(0);
	}
}

spritelayout spritelayout_skrub_003_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_003_PURCHASE(1);
	}
}

spritelayout spritelayout_skrub_003_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_003_PURCHASE(2);
	}
}

spritelayout spritelayout_skrub_003_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_003_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_skrub_003_purchase, view) {
    1:  spritelayout_skrub_003_2_purchase;
    2:  spritelayout_skrub_003_3_purchase;
    3:  spritelayout_skrub_003_4_purchase;
    spritelayout_skrub_003_1_purchase;
}


item (FEAT_OBJECTS, skrub_003, 244) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_skrub_003);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_skrub_003_object;
        purchase: switch_skrub_003_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return CB_RESULT_AUTOSLOPE;


     }
}

/********************************
 SLOPE AWARE
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_skrub_004_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/skrub_32_004.png")
}

spriteset (spriteset_skrub_004_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/skrub_32_004_SNOW.png")
}

spriteset (spriteset_skrub_004_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/skrub_32_004.png")
}

spriteset (spriteset_skrub_004_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/skrub_32_004_SNOW.png")
}

spriteset (spriteset_skrub_004_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/skrub_32_004.png")
}

spriteset (spriteset_skrub_004_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/skrub_32_004_SNOW.png")
}

spriteset (spriteset_skrub_004_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/skrub_32_004.png")
}

spriteset (spriteset_skrub_004_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_skrub_004_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/skrub_32_004_SNOW.png")
}

spriteset (spriteset_skrub_004_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/slopeawarehigh_8_PURCHASE.png")
}

alternative_sprites (spriteset_skrub_004_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeaware_purchase(0,0,"gfx/skrub_32_004_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_skrub_004_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_004_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_skrub_004_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_004_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_004_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_skrub_004_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_004_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_skrub_004_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_004_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_004_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub_004_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_skrub_004_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_skrub_004_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_004_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_004_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_skrub_004_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_skrub_004_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_skrub_004_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_skrub_004_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_skrub_004_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_skrub_004_view, view) {
    1:  spritelayout_skrub_004_b;
    2:  spritelayout_skrub_004_c;
    3:  spritelayout_skrub_004_d;
    spritelayout_skrub_004_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_skrub_004_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_skrub_004_view;
}


spritelayout spritelayout_skrub_004_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_004_PURCHASE(0);
	}
}

spritelayout spritelayout_skrub_004_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_004_PURCHASE(1);
	}
}

spritelayout spritelayout_skrub_004_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_004_PURCHASE(2);
	}
}

spritelayout spritelayout_skrub_004_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_skrub_004_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_skrub_004_purchase, view) {
    1:  spritelayout_skrub_004_2_purchase;
    2:  spritelayout_skrub_004_3_purchase;
    3:  spritelayout_skrub_004_4_purchase;
    spritelayout_skrub_004_1_purchase;
}


item (FEAT_OBJECTS, skrub_004, 245) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_skrub_004);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_skrub_004_object;
        purchase: switch_skrub_004_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return CB_RESULT_AUTOSLOPE;


     }
}

/***************************************************
*   SKRUB TRACKS
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_skrub01) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub01, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub01_32.png")
}

spriteset (spriteset_skrub01_SNOW) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub01_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub01_32.png")
}

spriteset (spriteset_skrub01_PURCHASE) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub01_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_skrub01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}



//Direction_2
spritelayout spritelayout_skrub01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//Direction_3
spritelayout spritelayout_skrub01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}


//Direction_4
spritelayout spritelayout_skrub01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_skrub01_view, view) {
    1:  spritelayout_skrub01_2;
    2:  spritelayout_skrub01_3;
    3:  spritelayout_skrub01_4;
    spritelayout_skrub01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_skrub01_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_skrub01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_skrub01_purchase, view) {
    1:  spritelayout_skrub01_2_purchase;
    2:  spritelayout_skrub01_3_purchase;
    3:  spritelayout_skrub01_4_purchase;
    spritelayout_skrub01_1_purchase;
}

item (FEAT_OBJECTS, skrub01, 252) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_skrub01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_skrub01_object;
        purchase: switch_skrub01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   SKRUB TRACKS
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_skrub02) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub02_32.png")
}

spriteset (spriteset_skrub02_SNOW) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub02_32.png")
}

spriteset (spriteset_skrub02_PURCHASE) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub02_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_skrub02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}



//Direction_2
spritelayout spritelayout_skrub02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//Direction_3
spritelayout spritelayout_skrub02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}


//Direction_4
spritelayout spritelayout_skrub02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_skrub02_view, view) {
    1:  spritelayout_skrub02_2;
    2:  spritelayout_skrub02_3;
    3:  spritelayout_skrub02_4;
    spritelayout_skrub02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_skrub02_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_skrub02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_skrub02_purchase, view) {
    1:  spritelayout_skrub02_2_purchase;
    2:  spritelayout_skrub02_3_purchase;
    3:  spritelayout_skrub02_4_purchase;
    spritelayout_skrub02_1_purchase;
}

item (FEAT_OBJECTS, skrub02, 253) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_skrub02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_skrub02_object;
        purchase: switch_skrub02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   SKRUB TRACKS
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_skrub03) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub03, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub03_32.png")
}

spriteset (spriteset_skrub03_SNOW) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub03_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub03_32.png")
}

spriteset (spriteset_skrub03_PURCHASE) {
    template_flat_high(0,0,"gfx/flathigh_8.png")
}
alternative_sprites (spriteset_skrub03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_high(0,0,"gfx/skrub03_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_skrub03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}



//Direction_2
spritelayout spritelayout_skrub03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//Direction_3
spritelayout spritelayout_skrub03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}


//Direction_4
spritelayout spritelayout_skrub03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_skrub03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_skrub03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_skrub03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_skrub03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_skrub03_view, view) {
    1:  spritelayout_skrub03_2;
    2:  spritelayout_skrub03_3;
    3:  spritelayout_skrub03_4;
    spritelayout_skrub03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_skrub03_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_skrub03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_skrub03_purchase, view) {
    1:  spritelayout_skrub03_2_purchase;
    2:  spritelayout_skrub03_3_purchase;
    3:  spritelayout_skrub03_4_purchase;
    spritelayout_skrub03_1_purchase;
}

item (FEAT_OBJECTS, skrub03, 254) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_skrub03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_skrub03_object;
        purchase: switch_skrub03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}


/***********************************
END skrub03
************************************/

/********************************
 SLOPE AWARE
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_coastalscrub_001_a) {
    template_slopeawarehigh(0,0,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_b) {
    template_slopeawarehigh(0,140,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_c) {
    template_slopeawarehigh(0,280,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_d) {
    template_slopeawarehigh(0,420,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/coastalscrub_32_001.png")
}

spriteset (spriteset_coastalscrub_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/coastalscrub_32_001_PURCHASE.png")
}


/* spritelayouts */

//View_a


spritelayout spritelayout_coastalscrub_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_coastalscrub_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_coastalscrub_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_coastalscrub_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_coastalscrub_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_coastalscrub_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_coastalscrub_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_coastalscrub_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_coastalscrub_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_coastalscrub_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_coastalscrub_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_coastalscrub_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_coastalscrub_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_coastalscrub_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_coastalscrub_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_coastalscrub_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_coastalscrub_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_coastalscrub_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_coastalscrub_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_coastalscrub_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_coastalscrub_001_view, view) {
    1:  spritelayout_coastalscrub_001_b;
    2:  spritelayout_coastalscrub_001_c;
    3:  spritelayout_coastalscrub_001_d;
    spritelayout_coastalscrub_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_coastalscrub_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_coastalscrub_001_view;
}


spritelayout spritelayout_coastalscrub_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_coastalscrub_001_PURCHASE(0);
	}
}

spritelayout spritelayout_coastalscrub_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_coastalscrub_001_PURCHASE(1);
	}
}

spritelayout spritelayout_coastalscrub_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_coastalscrub_001_PURCHASE(2);
	}
}

spritelayout spritelayout_coastalscrub_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_coastalscrub_001_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_coastalscrub_001_purchase, view) {
    1:  spritelayout_coastalscrub_001_2_purchase;
    2:  spritelayout_coastalscrub_001_3_purchase;
    3:  spritelayout_coastalscrub_001_4_purchase;
    spritelayout_coastalscrub_001_1_purchase;
}


item (FEAT_OBJECTS, coastalscrub_001, 206) {
    property {
        class: "CLLE";
        classname: string(STR_CLLE);
        name: string(STR_coastalscrub_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_coastalscrub_001_object;
        purchase: switch_coastalscrub_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return CB_RESULT_AUTOSLOPE;


     }
}

/**** COASTAL SCRUB ****/


/****************************************************
Start AussieTrees01
****************************************************/


//TEMPLATES & SPRITESETS// 
template template_AussieTrees01(x,y,filename) {
    [x,		y,      64,     100,     -31,    -69,   filename]
}

template template_AussieTrees01_MASK(x,y, filename, mask) {
    [x,		y,      64,     100,     -31,    -69, filename, mask]
}

template template_AussieTrees01_purchase(x,y,filename) {

    [x, y, 64, 84, -31, -53, filename]
    [x+70, y, 64, 84, -31, -53, filename]
    [x+140, y, 64, 84, -31, -53, filename]
    [x+210, y, 64, 84, -31, -53, filename]

}

template template_AussieTrees01_purchase_MASK(x,y,filename, mask) {

    [x, y, 64, 84, -31, -53, filename, mask]
    [x+70, y, 64, 84, -31, -53, filename, mask]
    [x+140, y, 64, 84, -31, -53, filename, mask]
    [x+210, y, 64, 84, -31, -53, filename, mask]

}



//TOP ROW NE + SNOW//
spriteset (spriteset_AussieTrees01_1) {
    	template_AussieTrees01(0,0,"gfx/tall_8.png")
	template_AussieTrees01(70,0,"gfx/tall_8.png")
	template_AussieTrees01(140,0,"gfx/tall_8.png")
	template_AussieTrees01(210,0,"gfx/tall_8.png")
	template_AussieTrees01(280,0,"gfx/tall_8.png")
	template_AussieTrees01(350,0,"gfx/tall_8.png")
	template_AussieTrees01(420,0,"gfx/tall_8.png")
	template_AussieTrees01(490,0,"gfx/tall_8.png")
	template_AussieTrees01(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees01_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}

spriteset (spriteset_AussieTrees01_1_snow) {
    	template_AussieTrees01(0,0,"gfx/tall_8.png")
	template_AussieTrees01(70,0,"gfx/tall_8.png")
	template_AussieTrees01(140,0,"gfx/tall_8.png")
	template_AussieTrees01(210,0,"gfx/tall_8.png")
	template_AussieTrees01(280,0,"gfx/tall_8.png")
	template_AussieTrees01(350,0,"gfx/tall_8.png")
	template_AussieTrees01(420,0,"gfx/tall_8.png")
	template_AussieTrees01(490,0,"gfx/tall_8.png")
	template_AussieTrees01(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees01_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,0,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}


//2ND ROW NE + SNOW//
spriteset (spriteset_AussieTrees01_2) {
    	template_AussieTrees01(0,110,"gfx/tall_8.png")
	template_AussieTrees01(70,110,"gfx/tall_8.png")
	template_AussieTrees01(140,110,"gfx/tall_8.png")
	template_AussieTrees01(210,110,"gfx/tall_8.png")
	template_AussieTrees01(280,110,"gfx/tall_8.png")
	template_AussieTrees01(350,110,"gfx/tall_8.png")
	template_AussieTrees01(420,110,"gfx/tall_8.png")
	template_AussieTrees01(490,110,"gfx/tall_8.png")
	template_AussieTrees01(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees01_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}

spriteset (spriteset_AussieTrees01_2_snow) {
    	template_AussieTrees01(0,110,"gfx/tall_8.png")
	template_AussieTrees01(70,110,"gfx/tall_8.png")
	template_AussieTrees01(140,110,"gfx/tall_8.png")
	template_AussieTrees01(210,110,"gfx/tall_8.png")
	template_AussieTrees01(280,110,"gfx/tall_8.png")
	template_AussieTrees01(350,110,"gfx/tall_8.png")
	template_AussieTrees01(420,110,"gfx/tall_8.png")
	template_AussieTrees01(490,110,"gfx/tall_8.png")
	template_AussieTrees01(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees01_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,110,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_AussieTrees01_3) {
    	template_AussieTrees01(0,220,"gfx/tall_8.png")
	template_AussieTrees01(70,220,"gfx/tall_8.png")
	template_AussieTrees01(140,220,"gfx/tall_8.png")
	template_AussieTrees01(210,220,"gfx/tall_8.png")
	template_AussieTrees01(280,220,"gfx/tall_8.png")
	template_AussieTrees01(350,220,"gfx/tall_8.png")
	template_AussieTrees01(420,220,"gfx/tall_8.png")
	template_AussieTrees01(490,220,"gfx/tall_8.png")
	template_AussieTrees01(560,220,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees01_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}


spriteset (spriteset_AussieTrees01_3_snow) {
    	template_AussieTrees01(0,220,"gfx/tall_8.png")
	template_AussieTrees01(70,220,"gfx/tall_8.png")
	template_AussieTrees01(140,220,"gfx/tall_8.png")
	template_AussieTrees01(210,220,"gfx/tall_8.png")
	template_AussieTrees01(280,220,"gfx/tall_8.png")
	template_AussieTrees01(350,220,"gfx/tall_8.png")
	template_AussieTrees01(420,220,"gfx/tall_8.png")
	template_AussieTrees01(490,220,"gfx/tall_8.png")
	template_AussieTrees01(560,220,"gfx/tall_8.png")
}


alternative_sprites (spriteset_AussieTrees01_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,220,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_AussieTrees01_4) {
    	template_AussieTrees01(0,330,"gfx/tall_8.png")
	template_AussieTrees01(70,330,"gfx/tall_8.png")
	template_AussieTrees01(140,330,"gfx/tall_8.png")
	template_AussieTrees01(210,330,"gfx/tall_8.png")	
	template_AussieTrees01(280,330,"gfx/tall_8.png")
	template_AussieTrees01(350,330,"gfx/tall_8.png")
	template_AussieTrees01(420,330,"gfx/tall_8.png")
	template_AussieTrees01(490,330,"gfx/tall_8.png")
	template_AussieTrees01(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees01_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}

spriteset (spriteset_AussieTrees01_4_snow) {
    	template_AussieTrees01(0,330,"gfx/tall_8.png")
	template_AussieTrees01(70,330,"gfx/tall_8.png")
	template_AussieTrees01(140,330,"gfx/tall_8.png")
	template_AussieTrees01(210,330,"gfx/tall_8.png")	
	template_AussieTrees01(280,330,"gfx/tall_8.png")
	template_AussieTrees01(350,330,"gfx/tall_8.png")
	template_AussieTrees01(420,330,"gfx/tall_8.png")
	template_AussieTrees01(490,330,"gfx/tall_8.png")
	template_AussieTrees01(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees01_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees01_MASK(0,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(70,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(140,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(210,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(280,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(350,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(420,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(490,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
	template_AussieTrees01_MASK(560,330,"gfx/AussieTrees01_32.png", "gfx/AussieTrees01_32_MASK.png")
}

spriteset (spriteset_AussieTrees01_PURCHASE) {
    template_AussieTrees01_purchase(0,0,"gfx/tall_8_PURCHASE.png")
}

alternative_sprites (spriteset_AussieTrees01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_AussieTrees01_purchase(0,0,"gfx/AussieTrees01_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE AussieTrees01//
//SPRITELAYOUTS//

//RURAL AussieTrees01 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees01_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees01_1((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees01_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_AussieTrees01_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees01_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//RURAL AussieTrees01 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees01_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees01_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees01_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees01_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees01_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//OBJECT 2 SIMPLE AussieTrees01//
//AussieTrees01 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees01_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees01_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees01_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees01_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees01_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//AussieTrees01 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees01_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees01_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees01_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees01_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees01_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_AussieTrees01_1_view, view) {
    1:  spritelayout_AussieTrees01_02;
    2:  spritelayout_AussieTrees01_03;
    3:  spritelayout_AussieTrees01_04;
    spritelayout_AussieTrees01_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AussieTrees01_1_object, [

    		STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        	STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AussieTrees01_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_AussieTrees01_1_purchase, view) {
    1:  spritelayout_AussieTrees01_02_purchase;
    2:  spritelayout_AussieTrees01_03_purchase;
    3:  spritelayout_AussieTrees01_04_purchase;
    spritelayout_AussieTrees01_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_AussieTrees01, view) {
1: string(STR_AussieTrees01_purchase_view2);
2: string(STR_AussieTrees01_purchase_view3);
3: string(STR_AussieTrees01_purchase_view4);
default: string(STR_AussieTrees01_purchase_view1);
}

item (FEAT_OBJECTS, item_AussieTrees01_1, 196) {
    property {
        class:                  "AUZT";
	classname:		string(STR_AUZT);
        name:                   string(STR_AussieTrees01_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_AussieTrees01_1_object;
        purchase:           switch_AussieTrees01_1_purchase;
        autoslope:          return CB_RESULT_AUTOSLOPE;

        additional_text:    switch_add_text_STR_AussieTrees01;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/***************************************************
   END  AussieTrees01
****************************************************/

/****************************************************
Start AussieTrees02
****************************************************/


//TEMPLATES & SPRITESETS// 
template template_AussieTrees02(x,y,filename) {
    [x,		y,      64,     100,     -31,    -69,   filename]
}

template template_AussieTrees02_MASK(x,y, filename, mask) {
    [x,		y,      64,     100,     -31,    -69, filename, mask]
}

template template_AussieTrees02_purchase(x,y,filename) {

    [x, y, 64, 84, -31, -53, filename]
    [x+70, y, 64, 84, -31, -53, filename]
    [x+140, y, 64, 84, -31, -53, filename]
    [x+210, y, 64, 84, -31, -53, filename]

}

template template_AussieTrees02_purchase_MASK(x,y,filename, mask) {

    [x, y, 64, 84, -31, -53, filename, mask]
    [x+70, y, 64, 84, -31, -53, filename, mask]
    [x+140, y, 64, 84, -31, -53, filename, mask]
    [x+210, y, 64, 84, -31, -53, filename, mask]

}



//TOP ROW NE + SNOW//
spriteset (spriteset_AussieTrees02_1) {
    	template_AussieTrees02(0,0,"gfx/tall_8.png")
	template_AussieTrees02(70,0,"gfx/tall_8.png")
	template_AussieTrees02(140,0,"gfx/tall_8.png")
	template_AussieTrees02(210,0,"gfx/tall_8.png")
	template_AussieTrees02(280,0,"gfx/tall_8.png")
	template_AussieTrees02(350,0,"gfx/tall_8.png")
	template_AussieTrees02(420,0,"gfx/tall_8.png")
	template_AussieTrees02(490,0,"gfx/tall_8.png")
	template_AussieTrees02(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees02_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}

spriteset (spriteset_AussieTrees02_1_snow) {
    	template_AussieTrees02(0,0,"gfx/tall_8.png")
	template_AussieTrees02(70,0,"gfx/tall_8.png")
	template_AussieTrees02(140,0,"gfx/tall_8.png")
	template_AussieTrees02(210,0,"gfx/tall_8.png")
	template_AussieTrees02(280,0,"gfx/tall_8.png")
	template_AussieTrees02(350,0,"gfx/tall_8.png")
	template_AussieTrees02(420,0,"gfx/tall_8.png")
	template_AussieTrees02(490,0,"gfx/tall_8.png")
	template_AussieTrees02(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees02_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,0,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}


//2ND ROW NE + SNOW//
spriteset (spriteset_AussieTrees02_2) {
    	template_AussieTrees02(0,110,"gfx/tall_8.png")
	template_AussieTrees02(70,110,"gfx/tall_8.png")
	template_AussieTrees02(140,110,"gfx/tall_8.png")
	template_AussieTrees02(210,110,"gfx/tall_8.png")
	template_AussieTrees02(280,110,"gfx/tall_8.png")
	template_AussieTrees02(350,110,"gfx/tall_8.png")
	template_AussieTrees02(420,110,"gfx/tall_8.png")
	template_AussieTrees02(490,110,"gfx/tall_8.png")
	template_AussieTrees02(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees02_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}

spriteset (spriteset_AussieTrees02_2_snow) {
    	template_AussieTrees02(0,110,"gfx/tall_8.png")
	template_AussieTrees02(70,110,"gfx/tall_8.png")
	template_AussieTrees02(140,110,"gfx/tall_8.png")
	template_AussieTrees02(210,110,"gfx/tall_8.png")
	template_AussieTrees02(280,110,"gfx/tall_8.png")
	template_AussieTrees02(350,110,"gfx/tall_8.png")
	template_AussieTrees02(420,110,"gfx/tall_8.png")
	template_AussieTrees02(490,110,"gfx/tall_8.png")
	template_AussieTrees02(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees02_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,110,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_AussieTrees02_3) {
    	template_AussieTrees02(0,220,"gfx/tall_8.png")
	template_AussieTrees02(70,220,"gfx/tall_8.png")
	template_AussieTrees02(140,220,"gfx/tall_8.png")
	template_AussieTrees02(210,220,"gfx/tall_8.png")
	template_AussieTrees02(280,220,"gfx/tall_8.png")
	template_AussieTrees02(350,220,"gfx/tall_8.png")
	template_AussieTrees02(420,220,"gfx/tall_8.png")
	template_AussieTrees02(490,220,"gfx/tall_8.png")
	template_AussieTrees02(560,220,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees02_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}


spriteset (spriteset_AussieTrees02_3_snow) {
    	template_AussieTrees02(0,220,"gfx/tall_8.png")
	template_AussieTrees02(70,220,"gfx/tall_8.png")
	template_AussieTrees02(140,220,"gfx/tall_8.png")
	template_AussieTrees02(210,220,"gfx/tall_8.png")
	template_AussieTrees02(280,220,"gfx/tall_8.png")
	template_AussieTrees02(350,220,"gfx/tall_8.png")
	template_AussieTrees02(420,220,"gfx/tall_8.png")
	template_AussieTrees02(490,220,"gfx/tall_8.png")
	template_AussieTrees02(560,220,"gfx/tall_8.png")
}


alternative_sprites (spriteset_AussieTrees02_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,220,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_AussieTrees02_4) {
    	template_AussieTrees02(0,330,"gfx/tall_8.png")
	template_AussieTrees02(70,330,"gfx/tall_8.png")
	template_AussieTrees02(140,330,"gfx/tall_8.png")
	template_AussieTrees02(210,330,"gfx/tall_8.png")	
	template_AussieTrees02(280,330,"gfx/tall_8.png")
	template_AussieTrees02(350,330,"gfx/tall_8.png")
	template_AussieTrees02(420,330,"gfx/tall_8.png")
	template_AussieTrees02(490,330,"gfx/tall_8.png")
	template_AussieTrees02(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees02_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}

spriteset (spriteset_AussieTrees02_4_snow) {
    	template_AussieTrees02(0,330,"gfx/tall_8.png")
	template_AussieTrees02(70,330,"gfx/tall_8.png")
	template_AussieTrees02(140,330,"gfx/tall_8.png")
	template_AussieTrees02(210,330,"gfx/tall_8.png")	
	template_AussieTrees02(280,330,"gfx/tall_8.png")
	template_AussieTrees02(350,330,"gfx/tall_8.png")
	template_AussieTrees02(420,330,"gfx/tall_8.png")
	template_AussieTrees02(490,330,"gfx/tall_8.png")
	template_AussieTrees02(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees02_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees02_MASK(0,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(70,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(140,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(210,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(280,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(350,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(420,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(490,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
	template_AussieTrees02_MASK(560,330,"gfx/AussieTrees02_32.png", "gfx/AussieTrees02_32_MASK.png")
}

spriteset (spriteset_AussieTrees02_PURCHASE) {
    template_AussieTrees02_purchase(0,0,"gfx/tall_8_PURCHASE.png")
}

alternative_sprites (spriteset_AussieTrees02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_AussieTrees02_purchase(0,0,"gfx/AussieTrees02_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE AussieTrees02//
//SPRITELAYOUTS//

//RURAL AussieTrees02 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees02_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees02_1((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees02_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_AussieTrees02_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees02_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//RURAL AussieTrees02 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees02_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees02_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees02_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees02_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees02_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//OBJECT 2 SIMPLE AussieTrees02//
//AussieTrees02 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees02_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees02_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees02_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees02_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees02_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//AussieTrees02 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees02_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees02_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees02_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees02_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees02_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_AussieTrees02_1_view, view) {
    1:  spritelayout_AussieTrees02_02;
    2:  spritelayout_AussieTrees02_03;
    3:  spritelayout_AussieTrees02_04;
    spritelayout_AussieTrees02_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AussieTrees02_1_object, [
        //tile slope offset in storage register 0
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AussieTrees02_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_AussieTrees02_1_purchase, view) {
    1:  spritelayout_AussieTrees02_02_purchase;
    2:  spritelayout_AussieTrees02_03_purchase;
    3:  spritelayout_AussieTrees02_04_purchase;
    spritelayout_AussieTrees02_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_AussieTrees02, view) {
1: string(STR_AussieTrees02_purchase_view2);
2: string(STR_AussieTrees02_purchase_view3);
3: string(STR_AussieTrees02_purchase_view4);
default: string(STR_AussieTrees02_purchase_view1);
}

item (FEAT_OBJECTS, item_AussieTrees02_1, 197) {
    property {
        class:                  "AUZT";
	classname:		string(STR_AUZT);
        name:                   string(STR_AussieTrees02_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//	animation_info:			[ANIMATION_LOOPING, 9];
//	animation_speed:		7;
//	animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_AussieTrees02_1_object;
        purchase:           switch_AussieTrees02_1_purchase;
        autoslope:          return CB_RESULT_AUTOSLOPE;

//      additional_text:    string(STR_AussieTrees02_1_PURCHASE);
        additional_text:    switch_add_text_STR_AussieTrees02;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/***************************************************
   END  AussieTrees02
****************************************************/

/****************************************************
Start AussieTrees03
****************************************************/


//TEMPLATES & SPRITESETS// 
template template_AussieTrees03(x,y,filename) {
    [x,		y,      64,     100,     -31,    -69,   filename]
}

template template_AussieTrees03_MASK(x,y, filename, mask) {
    [x,		y,      64,     100,     -31,    -69, filename, mask]
}

template template_AussieTrees03_purchase(x,y,filename) {

    [x, y, 64, 84, -31, -53, filename]
    [x+70, y, 64, 84, -31, -53, filename]
    [x+140, y, 64, 84, -31, -53, filename]
    [x+210, y, 64, 84, -31, -53, filename]

}

template template_AussieTrees03_purchase_MASK(x,y,filename, mask) {

    [x, y, 64, 84, -31, -53, filename, mask]
    [x+70, y, 64, 84, -31, -53, filename, mask]
    [x+140, y, 64, 84, -31, -53, filename, mask]
    [x+210, y, 64, 84, -31, -53, filename, mask]

}



//TOP ROW NE + SNOW//
spriteset (spriteset_AussieTrees03_1) {
    	template_AussieTrees03(0,0,"gfx/tall_8.png")
	template_AussieTrees03(70,0,"gfx/tall_8.png")
	template_AussieTrees03(140,0,"gfx/tall_8.png")
	template_AussieTrees03(210,0,"gfx/tall_8.png")
	template_AussieTrees03(280,0,"gfx/tall_8.png")
	template_AussieTrees03(350,0,"gfx/tall_8.png")
	template_AussieTrees03(420,0,"gfx/tall_8.png")
	template_AussieTrees03(490,0,"gfx/tall_8.png")
	template_AussieTrees03(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees03_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}

spriteset (spriteset_AussieTrees03_1_snow) {
    	template_AussieTrees03(0,0,"gfx/tall_8.png")
	template_AussieTrees03(70,0,"gfx/tall_8.png")
	template_AussieTrees03(140,0,"gfx/tall_8.png")
	template_AussieTrees03(210,0,"gfx/tall_8.png")
	template_AussieTrees03(280,0,"gfx/tall_8.png")
	template_AussieTrees03(350,0,"gfx/tall_8.png")
	template_AussieTrees03(420,0,"gfx/tall_8.png")
	template_AussieTrees03(490,0,"gfx/tall_8.png")
	template_AussieTrees03(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees03_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,0,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}


//2ND ROW NE + SNOW//
spriteset (spriteset_AussieTrees03_2) {
    	template_AussieTrees03(0,110,"gfx/tall_8.png")
	template_AussieTrees03(70,110,"gfx/tall_8.png")
	template_AussieTrees03(140,110,"gfx/tall_8.png")
	template_AussieTrees03(210,110,"gfx/tall_8.png")
	template_AussieTrees03(280,110,"gfx/tall_8.png")
	template_AussieTrees03(350,110,"gfx/tall_8.png")
	template_AussieTrees03(420,110,"gfx/tall_8.png")
	template_AussieTrees03(490,110,"gfx/tall_8.png")
	template_AussieTrees03(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees03_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}

spriteset (spriteset_AussieTrees03_2_snow) {
    	template_AussieTrees03(0,110,"gfx/tall_8.png")
	template_AussieTrees03(70,110,"gfx/tall_8.png")
	template_AussieTrees03(140,110,"gfx/tall_8.png")
	template_AussieTrees03(210,110,"gfx/tall_8.png")
	template_AussieTrees03(280,110,"gfx/tall_8.png")
	template_AussieTrees03(350,110,"gfx/tall_8.png")
	template_AussieTrees03(420,110,"gfx/tall_8.png")
	template_AussieTrees03(490,110,"gfx/tall_8.png")
	template_AussieTrees03(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees03_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,110,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_AussieTrees03_3) {
    	template_AussieTrees03(0,220,"gfx/tall_8.png")
	template_AussieTrees03(70,220,"gfx/tall_8.png")
	template_AussieTrees03(140,220,"gfx/tall_8.png")
	template_AussieTrees03(210,220,"gfx/tall_8.png")
	template_AussieTrees03(280,220,"gfx/tall_8.png")
	template_AussieTrees03(350,220,"gfx/tall_8.png")
	template_AussieTrees03(420,220,"gfx/tall_8.png")
	template_AussieTrees03(490,220,"gfx/tall_8.png")
	template_AussieTrees03(560,220,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees03_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}


spriteset (spriteset_AussieTrees03_3_snow) {
    	template_AussieTrees03(0,220,"gfx/tall_8.png")
	template_AussieTrees03(70,220,"gfx/tall_8.png")
	template_AussieTrees03(140,220,"gfx/tall_8.png")
	template_AussieTrees03(210,220,"gfx/tall_8.png")
	template_AussieTrees03(280,220,"gfx/tall_8.png")
	template_AussieTrees03(350,220,"gfx/tall_8.png")
	template_AussieTrees03(420,220,"gfx/tall_8.png")
	template_AussieTrees03(490,220,"gfx/tall_8.png")
	template_AussieTrees03(560,220,"gfx/tall_8.png")
}


alternative_sprites (spriteset_AussieTrees03_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,220,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_AussieTrees03_4) {
    	template_AussieTrees03(0,330,"gfx/tall_8.png")
	template_AussieTrees03(70,330,"gfx/tall_8.png")
	template_AussieTrees03(140,330,"gfx/tall_8.png")
	template_AussieTrees03(210,330,"gfx/tall_8.png")	
	template_AussieTrees03(280,330,"gfx/tall_8.png")
	template_AussieTrees03(350,330,"gfx/tall_8.png")
	template_AussieTrees03(420,330,"gfx/tall_8.png")
	template_AussieTrees03(490,330,"gfx/tall_8.png")
	template_AussieTrees03(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees03_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}

spriteset (spriteset_AussieTrees03_4_snow) {
    	template_AussieTrees03(0,330,"gfx/tall_8.png")
	template_AussieTrees03(70,330,"gfx/tall_8.png")
	template_AussieTrees03(140,330,"gfx/tall_8.png")
	template_AussieTrees03(210,330,"gfx/tall_8.png")	
	template_AussieTrees03(280,330,"gfx/tall_8.png")
	template_AussieTrees03(350,330,"gfx/tall_8.png")
	template_AussieTrees03(420,330,"gfx/tall_8.png")
	template_AussieTrees03(490,330,"gfx/tall_8.png")
	template_AussieTrees03(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees03_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees03_MASK(0,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(70,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(140,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(210,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(280,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(350,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(420,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(490,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
	template_AussieTrees03_MASK(560,330,"gfx/AussieTrees03_32.png", "gfx/AussieTrees03_32_MASK.png")
}

spriteset (spriteset_AussieTrees03_PURCHASE) {
    template_AussieTrees03_purchase(0,0,"gfx/tall_8_PURCHASE.png")
}

alternative_sprites (spriteset_AussieTrees03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_AussieTrees03_purchase(0,0,"gfx/AussieTrees03_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE AussieTrees03//
//SPRITELAYOUTS//

//RURAL AussieTrees03 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees03_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees03_1((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees03_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_AussieTrees03_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees03_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//RURAL AussieTrees03 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees03_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees03_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees03_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees03_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees03_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//OBJECT 2 SIMPLE AussieTrees03//
//AussieTrees03 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees03_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees03_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees03_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees03_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees03_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//AussieTrees03 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees03_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees03_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees03_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees03_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees03_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_AussieTrees03_1_view, view) {
    1:  spritelayout_AussieTrees03_02;
    2:  spritelayout_AussieTrees03_03;
    3:  spritelayout_AussieTrees03_04;
    spritelayout_AussieTrees03_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AussieTrees03_1_object, [
        //tile slope offset in storage register 0
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AussieTrees03_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_AussieTrees03_1_purchase, view) {
    1:  spritelayout_AussieTrees03_02_purchase;
    2:  spritelayout_AussieTrees03_03_purchase;
    3:  spritelayout_AussieTrees03_04_purchase;
    spritelayout_AussieTrees03_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_AussieTrees03, view) {
1: string(STR_AussieTrees03_purchase_view2);
2: string(STR_AussieTrees03_purchase_view3);
3: string(STR_AussieTrees03_purchase_view4);
default: string(STR_AussieTrees03_purchase_view1);
}

item (FEAT_OBJECTS, item_AussieTrees03_1, 198) {
    property {
        class:                  "FRST";
	classname:		string(STR_FRST);
        name:                   string(STR_AussieTrees03_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//	animation_info:			[ANIMATION_LOOPING, 9];
//	animation_speed:		7;
//	animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_AussieTrees03_1_object;
        purchase:           switch_AussieTrees03_1_purchase;
        autoslope:          return CB_RESULT_AUTOSLOPE;

//      additional_text:    string(STR_AussieTrees03_1_PURCHASE);
        additional_text:    switch_add_text_STR_AussieTrees03;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/***************************************************
   END  AussieTrees03
****************************************************/

/****************************************************
Start AussieTrees04
****************************************************/


//TEMPLATES & SPRITESETS// 
template template_AussieTrees04(x,y,filename) {
    [x,		y,      64,     100,     -31,    -69,   filename]
}

template template_AussieTrees04_MASK(x,y, filename, mask) {
    [x,		y,      64,     100,     -31,    -69, filename, mask]
}

template template_AussieTrees04_purchase(x,y,filename) {

    [x, y, 64, 84, -31, -53, filename]
    [x+70, y, 64, 84, -31, -53, filename]
    [x+140, y, 64, 84, -31, -53, filename]
    [x+210, y, 64, 84, -31, -53, filename]

}

template template_AussieTrees04_purchase_MASK(x,y,filename, mask) {

    [x, y, 64, 84, -31, -53, filename, mask]
    [x+70, y, 64, 84, -31, -53, filename, mask]
    [x+140, y, 64, 84, -31, -53, filename, mask]
    [x+210, y, 64, 84, -31, -53, filename, mask]

}



//TOP ROW NE + SNOW//
spriteset (spriteset_AussieTrees04_1) {
    	template_AussieTrees04(0,0,"gfx/tall_8.png")
	template_AussieTrees04(70,0,"gfx/tall_8.png")
	template_AussieTrees04(140,0,"gfx/tall_8.png")
	template_AussieTrees04(210,0,"gfx/tall_8.png")
	template_AussieTrees04(280,0,"gfx/tall_8.png")
	template_AussieTrees04(350,0,"gfx/tall_8.png")
	template_AussieTrees04(420,0,"gfx/tall_8.png")
	template_AussieTrees04(490,0,"gfx/tall_8.png")
	template_AussieTrees04(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees04_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}

spriteset (spriteset_AussieTrees04_1_snow) {
    	template_AussieTrees04(0,0,"gfx/tall_8.png")
	template_AussieTrees04(70,0,"gfx/tall_8.png")
	template_AussieTrees04(140,0,"gfx/tall_8.png")
	template_AussieTrees04(210,0,"gfx/tall_8.png")
	template_AussieTrees04(280,0,"gfx/tall_8.png")
	template_AussieTrees04(350,0,"gfx/tall_8.png")
	template_AussieTrees04(420,0,"gfx/tall_8.png")
	template_AussieTrees04(490,0,"gfx/tall_8.png")
	template_AussieTrees04(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees04_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,0,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}


//2ND ROW NE + SNOW//
spriteset (spriteset_AussieTrees04_2) {
    	template_AussieTrees04(0,110,"gfx/tall_8.png")
	template_AussieTrees04(70,110,"gfx/tall_8.png")
	template_AussieTrees04(140,110,"gfx/tall_8.png")
	template_AussieTrees04(210,110,"gfx/tall_8.png")
	template_AussieTrees04(280,110,"gfx/tall_8.png")
	template_AussieTrees04(350,110,"gfx/tall_8.png")
	template_AussieTrees04(420,110,"gfx/tall_8.png")
	template_AussieTrees04(490,110,"gfx/tall_8.png")
	template_AussieTrees04(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees04_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}

spriteset (spriteset_AussieTrees04_2_snow) {
    	template_AussieTrees04(0,110,"gfx/tall_8.png")
	template_AussieTrees04(70,110,"gfx/tall_8.png")
	template_AussieTrees04(140,110,"gfx/tall_8.png")
	template_AussieTrees04(210,110,"gfx/tall_8.png")
	template_AussieTrees04(280,110,"gfx/tall_8.png")
	template_AussieTrees04(350,110,"gfx/tall_8.png")
	template_AussieTrees04(420,110,"gfx/tall_8.png")
	template_AussieTrees04(490,110,"gfx/tall_8.png")
	template_AussieTrees04(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees04_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,110,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_AussieTrees04_3) {
    	template_AussieTrees04(0,220,"gfx/tall_8.png")
	template_AussieTrees04(70,220,"gfx/tall_8.png")
	template_AussieTrees04(140,220,"gfx/tall_8.png")
	template_AussieTrees04(210,220,"gfx/tall_8.png")
	template_AussieTrees04(280,220,"gfx/tall_8.png")
	template_AussieTrees04(350,220,"gfx/tall_8.png")
	template_AussieTrees04(420,220,"gfx/tall_8.png")
	template_AussieTrees04(490,220,"gfx/tall_8.png")
	template_AussieTrees04(560,220,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees04_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}


spriteset (spriteset_AussieTrees04_3_snow) {
    	template_AussieTrees04(0,220,"gfx/tall_8.png")
	template_AussieTrees04(70,220,"gfx/tall_8.png")
	template_AussieTrees04(140,220,"gfx/tall_8.png")
	template_AussieTrees04(210,220,"gfx/tall_8.png")
	template_AussieTrees04(280,220,"gfx/tall_8.png")
	template_AussieTrees04(350,220,"gfx/tall_8.png")
	template_AussieTrees04(420,220,"gfx/tall_8.png")
	template_AussieTrees04(490,220,"gfx/tall_8.png")
	template_AussieTrees04(560,220,"gfx/tall_8.png")
}


alternative_sprites (spriteset_AussieTrees04_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,220,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_AussieTrees04_4) {
    	template_AussieTrees04(0,330,"gfx/tall_8.png")
	template_AussieTrees04(70,330,"gfx/tall_8.png")
	template_AussieTrees04(140,330,"gfx/tall_8.png")
	template_AussieTrees04(210,330,"gfx/tall_8.png")	
	template_AussieTrees04(280,330,"gfx/tall_8.png")
	template_AussieTrees04(350,330,"gfx/tall_8.png")
	template_AussieTrees04(420,330,"gfx/tall_8.png")
	template_AussieTrees04(490,330,"gfx/tall_8.png")
	template_AussieTrees04(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees04_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}

spriteset (spriteset_AussieTrees04_4_snow) {
    	template_AussieTrees04(0,330,"gfx/tall_8.png")
	template_AussieTrees04(70,330,"gfx/tall_8.png")
	template_AussieTrees04(140,330,"gfx/tall_8.png")
	template_AussieTrees04(210,330,"gfx/tall_8.png")	
	template_AussieTrees04(280,330,"gfx/tall_8.png")
	template_AussieTrees04(350,330,"gfx/tall_8.png")
	template_AussieTrees04(420,330,"gfx/tall_8.png")
	template_AussieTrees04(490,330,"gfx/tall_8.png")
	template_AussieTrees04(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees04_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees04_MASK(0,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(70,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(140,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(210,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(280,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(350,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(420,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(490,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
	template_AussieTrees04_MASK(560,330,"gfx/AussieTrees04_32.png", "gfx/AussieTrees04_32_MASK.png")
}

spriteset (spriteset_AussieTrees04_PURCHASE) {
    template_AussieTrees04_purchase(0,0,"gfx/tall_8_PURCHASE.png")
}

alternative_sprites (spriteset_AussieTrees04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_AussieTrees04_purchase(0,0,"gfx/AussieTrees04_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE AussieTrees04//
//SPRITELAYOUTS//

//RURAL AussieTrees04 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees04_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees04_1((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees04_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_AussieTrees04_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees04_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//RURAL AussieTrees04 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees04_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees04_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees04_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees04_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees04_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//OBJECT 2 SIMPLE AussieTrees04//
//AussieTrees04 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees04_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees04_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees04_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees04_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees04_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//AussieTrees04 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees04_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees04_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees04_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees04_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees04_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_AussieTrees04_1_view, view) {
    1:  spritelayout_AussieTrees04_02;
    2:  spritelayout_AussieTrees04_03;
    3:  spritelayout_AussieTrees04_04;
    spritelayout_AussieTrees04_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AussieTrees04_1_object, [
        //tile slope offset in storage register 0
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AussieTrees04_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_AussieTrees04_1_purchase, view) {
    1:  spritelayout_AussieTrees04_02_purchase;
    2:  spritelayout_AussieTrees04_03_purchase;
    3:  spritelayout_AussieTrees04_04_purchase;
    spritelayout_AussieTrees04_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_AussieTrees04, view) {
1: string(STR_AussieTrees04_purchase_view2);
2: string(STR_AussieTrees04_purchase_view3);
3: string(STR_AussieTrees04_purchase_view4);
default: string(STR_AussieTrees04_purchase_view1);
}

item (FEAT_OBJECTS, item_AussieTrees04_1, 199) {
    property {
        class:                  "FRST";
	classname:		string(STR_FRST);
        name:                   string(STR_AussieTrees04_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//	animation_info:			[ANIMATION_LOOPING, 9];
//	animation_speed:		7;
//	animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_AussieTrees04_1_object;
        purchase:           switch_AussieTrees04_1_purchase;
        autoslope:          return CB_RESULT_AUTOSLOPE;

        additional_text:    switch_add_text_STR_AussieTrees04;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/***************************************************
   END  AussieTrees04
****************************************************/

/****************************************************
Start AussieTrees05
****************************************************/


//TEMPLATES & SPRITESETS// 
template template_AussieTrees05(x,y,filename) {
    [x,		y,      64,     100,     -31,    -69,   filename]
}

template template_AussieTrees05_MASK(x,y, filename, mask) {
    [x,		y,      64,     100,     -31,    -69, filename, mask]
}

template template_AussieTrees05_purchase(x,y,filename) {

    [x, y, 64, 84, -31, -53, filename]
    [x+70, y, 64, 84, -31, -53, filename]
    [x+140, y, 64, 84, -31, -53, filename]
    [x+210, y, 64, 84, -31, -53, filename]

}

template template_AussieTrees05_purchase_MASK(x,y,filename, mask) {

    [x, y, 64, 84, -31, -53, filename, mask]
    [x+70, y, 64, 84, -31, -53, filename, mask]
    [x+140, y, 64, 84, -31, -53, filename, mask]
    [x+210, y, 64, 84, -31, -53, filename, mask]

}



//TOP ROW NE + SNOW//
spriteset (spriteset_AussieTrees05_1) {
    	template_AussieTrees05(0,0,"gfx/tall_8.png")
	template_AussieTrees05(70,0,"gfx/tall_8.png")
	template_AussieTrees05(140,0,"gfx/tall_8.png")
	template_AussieTrees05(210,0,"gfx/tall_8.png")
	template_AussieTrees05(280,0,"gfx/tall_8.png")
	template_AussieTrees05(350,0,"gfx/tall_8.png")
	template_AussieTrees05(420,0,"gfx/tall_8.png")
	template_AussieTrees05(490,0,"gfx/tall_8.png")
	template_AussieTrees05(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees05_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}

spriteset (spriteset_AussieTrees05_1_snow) {
    	template_AussieTrees05(0,0,"gfx/tall_8.png")
	template_AussieTrees05(70,0,"gfx/tall_8.png")
	template_AussieTrees05(140,0,"gfx/tall_8.png")
	template_AussieTrees05(210,0,"gfx/tall_8.png")
	template_AussieTrees05(280,0,"gfx/tall_8.png")
	template_AussieTrees05(350,0,"gfx/tall_8.png")
	template_AussieTrees05(420,0,"gfx/tall_8.png")
	template_AussieTrees05(490,0,"gfx/tall_8.png")
	template_AussieTrees05(560,0,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees05_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,0,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}


//2ND ROW NE + SNOW//
spriteset (spriteset_AussieTrees05_2) {
    	template_AussieTrees05(0,110,"gfx/tall_8.png")
	template_AussieTrees05(70,110,"gfx/tall_8.png")
	template_AussieTrees05(140,110,"gfx/tall_8.png")
	template_AussieTrees05(210,110,"gfx/tall_8.png")
	template_AussieTrees05(280,110,"gfx/tall_8.png")
	template_AussieTrees05(350,110,"gfx/tall_8.png")
	template_AussieTrees05(420,110,"gfx/tall_8.png")
	template_AussieTrees05(490,110,"gfx/tall_8.png")
	template_AussieTrees05(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees05_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}

spriteset (spriteset_AussieTrees05_2_snow) {
    	template_AussieTrees05(0,110,"gfx/tall_8.png")
	template_AussieTrees05(70,110,"gfx/tall_8.png")
	template_AussieTrees05(140,110,"gfx/tall_8.png")
	template_AussieTrees05(210,110,"gfx/tall_8.png")
	template_AussieTrees05(280,110,"gfx/tall_8.png")
	template_AussieTrees05(350,110,"gfx/tall_8.png")
	template_AussieTrees05(420,110,"gfx/tall_8.png")
	template_AussieTrees05(490,110,"gfx/tall_8.png")
	template_AussieTrees05(560,110,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees05_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,110,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_AussieTrees05_3) {
    	template_AussieTrees05(0,220,"gfx/tall_8.png")
	template_AussieTrees05(70,220,"gfx/tall_8.png")
	template_AussieTrees05(140,220,"gfx/tall_8.png")
	template_AussieTrees05(210,220,"gfx/tall_8.png")
	template_AussieTrees05(280,220,"gfx/tall_8.png")
	template_AussieTrees05(350,220,"gfx/tall_8.png")
	template_AussieTrees05(420,220,"gfx/tall_8.png")
	template_AussieTrees05(490,220,"gfx/tall_8.png")
	template_AussieTrees05(560,220,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees05_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}


spriteset (spriteset_AussieTrees05_3_snow) {
    	template_AussieTrees05(0,220,"gfx/tall_8.png")
	template_AussieTrees05(70,220,"gfx/tall_8.png")
	template_AussieTrees05(140,220,"gfx/tall_8.png")
	template_AussieTrees05(210,220,"gfx/tall_8.png")
	template_AussieTrees05(280,220,"gfx/tall_8.png")
	template_AussieTrees05(350,220,"gfx/tall_8.png")
	template_AussieTrees05(420,220,"gfx/tall_8.png")
	template_AussieTrees05(490,220,"gfx/tall_8.png")
	template_AussieTrees05(560,220,"gfx/tall_8.png")
}


alternative_sprites (spriteset_AussieTrees05_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,220,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_AussieTrees05_4) {
    	template_AussieTrees05(0,330,"gfx/tall_8.png")
	template_AussieTrees05(70,330,"gfx/tall_8.png")
	template_AussieTrees05(140,330,"gfx/tall_8.png")
	template_AussieTrees05(210,330,"gfx/tall_8.png")	
	template_AussieTrees05(280,330,"gfx/tall_8.png")
	template_AussieTrees05(350,330,"gfx/tall_8.png")
	template_AussieTrees05(420,330,"gfx/tall_8.png")
	template_AussieTrees05(490,330,"gfx/tall_8.png")
	template_AussieTrees05(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees05_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}

spriteset (spriteset_AussieTrees05_4_snow) {
    	template_AussieTrees05(0,330,"gfx/tall_8.png")
	template_AussieTrees05(70,330,"gfx/tall_8.png")
	template_AussieTrees05(140,330,"gfx/tall_8.png")
	template_AussieTrees05(210,330,"gfx/tall_8.png")	
	template_AussieTrees05(280,330,"gfx/tall_8.png")
	template_AussieTrees05(350,330,"gfx/tall_8.png")
	template_AussieTrees05(420,330,"gfx/tall_8.png")
	template_AussieTrees05(490,330,"gfx/tall_8.png")
	template_AussieTrees05(560,330,"gfx/tall_8.png")
}

alternative_sprites (spriteset_AussieTrees05_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_AussieTrees05_MASK(0,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(70,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(140,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(210,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(280,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(350,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(420,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(490,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
	template_AussieTrees05_MASK(560,330,"gfx/AussieTrees05_32.png", "gfx/AussieTrees05_32_MASK.png")
}

spriteset (spriteset_AussieTrees05_PURCHASE) {
    template_AussieTrees05_purchase(0,0,"gfx/tall_8_PURCHASE.png")
}

alternative_sprites (spriteset_AussieTrees05_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_AussieTrees05_purchase(0,0,"gfx/AussieTrees05_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE AussieTrees05//
//SPRITELAYOUTS//

//RURAL AussieTrees05 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees05_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees05_1((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees05_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_AussieTrees05_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees05_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//RURAL AussieTrees05 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees05_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees05_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees05_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees05_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees05_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//OBJECT 2 SIMPLE AussieTrees05//
//AussieTrees05 LOT NE + PURCHASE//
spritelayout spritelayout_AussieTrees05_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees05_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees05_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees05_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees05_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//AussieTrees05 LOT SE + PURCHASE//
spritelayout spritelayout_AussieTrees05_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_AussieTrees05_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
    }
	building {
        sprite: spriteset_AussieTrees05_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 32;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_AussieTrees05_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_AussieTrees05_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 32;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_AussieTrees05_1_view, view) {
    1:  spritelayout_AussieTrees05_02;
    2:  spritelayout_AussieTrees05_03;
    3:  spritelayout_AussieTrees05_04;
    spritelayout_AussieTrees05_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AussieTrees05_1_object, [
        //tile slope offset in storage register 0
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AussieTrees05_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_AussieTrees05_1_purchase, view) {
    1:  spritelayout_AussieTrees05_02_purchase;
    2:  spritelayout_AussieTrees05_03_purchase;
    3:  spritelayout_AussieTrees05_04_purchase;
    spritelayout_AussieTrees05_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_AussieTrees05, view) {
1: string(STR_AussieTrees05_purchase_view2);
2: string(STR_AussieTrees05_purchase_view3);
3: string(STR_AussieTrees05_purchase_view4);
default: string(STR_AussieTrees05_purchase_view1);
}

item (FEAT_OBJECTS, item_AussieTrees05_1, 200) {
    property {
        class:                  "FRST";
	classname:		string(STR_FRST);
        name:                   string(STR_AussieTrees05_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//	animation_info:			[ANIMATION_LOOPING, 9];
//	animation_speed:		7;
//	animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_AussieTrees05_1_object;
        purchase:           switch_AussieTrees05_1_purchase;
        autoslope:          return CB_RESULT_AUTOSLOPE;

        additional_text:    switch_add_text_STR_AussieTrees05;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/***************************************************
   END  AussieTrees05
****************************************************/


//PINE FOREST TILES ONE/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//templates
template template_emptytile(x,y,filename) {
    [x,     y,      20,     32,      -8,     -5,    filename]
    [x+30,  y,      20,     32,      -8,     -2,    filename]
    [x+60,  y,      20,     32,      -8,     -2,    filename]
    [x+90,  y,      20,     32,      -8,     -2,    filename]
}

//spriteset with four directions
spriteset (spriteset_emptytile) {
    template_emptytile(0,0,"gfx/emptytile.png")
}

/* spritelayouts */

//PINE FOREST TILES ONE/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

spritelayout spritelayout_pforest_11 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
	}
    building {
		sprite: 1586;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
    }
    building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
    
}

spritelayout spritelayout_pforest_12 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
   building {
		sprite: 1586;
		xoffset: 3;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1593;
		xoffset: 7;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_pforest_13 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
    building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
    }
    building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_pforest_14 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
    building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1586;
		xoffset: 2;
		yoffset: 4;
		xextent: 7;
		yextent: 8;
    }
}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_pforest_1_view, view) {
    1:  spritelayout_pforest_12;
    2:  spritelayout_pforest_13;
    3:  spritelayout_pforest_14;
    spritelayout_pforest_11;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_pforest_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_pforest_1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_pforest_1_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_pforest_1_view;
}

item (FEAT_OBJECTS, item_pforest_1, 221) {
    property {
        class:                  "FRST";
        classname:              string(STR_FRST);
        name:                   string(STR_PFOREST_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS);
        height:                 0;
        num_views:              4;
    }
    graphics {
        default:            switch_pforest_1_object;
        purchase:           switch_pforest_1_purchase;
		tile_check:			return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return(CB_RESULT_AUTOSLOPE);
        additional_text:    string(STR_PFOREST_1_PURCHASE);
    }
}

//PINE FOREST ITEM TWO//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
spritelayout spritelayout_pforest_21 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
	}
    building {
		sprite: 1586;
		xoffset: 4;
		yoffset: 5;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1607;
		xoffset: 7;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1593;
		yoffset: 2;
		yextent: 2;
    }
    building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
    
}

spritelayout spritelayout_pforest_22 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
   building {
		sprite: 1607;
		xoffset: 2;
		yoffset: 4;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1593;
		xoffset: 6;
		yoffset: 3;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_pforest_23 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
    building {
		sprite: 1593;
		xoffset: 9;
		yoffset: 8;
    }
    building {
		sprite: 1593;
		xoffset: 1;
		yoffset: 2;
    }
	building {
		sprite: 1593;
		xoffset: 4;
		yoffset: 5;
		xextent: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_pforest_24 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
    building {
		sprite: 1592;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1593;
		xoffset: 3;
		yoffset: 5;
		xextent: 7;
		yextent: 8;
    }
}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_pforest_2_view, view) {
    1:  spritelayout_pforest_22;
    2:  spritelayout_pforest_23;
    3:  spritelayout_pforest_24;
    spritelayout_pforest_21;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_pforest_2_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_pforest_2_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_pforest_2_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_pforest_2_view;
}

item (FEAT_OBJECTS, nitem_forest_2, 222) {
    property {
        class:                  "FRST";
        name:                   string(STR_PFOREST_2);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS);
        height:                 0;
        num_views:              4;
    }
    graphics {
        default:            switch_pforest_2_object;
        purchase:           switch_pforest_2_purchase;
		tile_check:			return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return(CB_RESULT_AUTOSLOPE);
        additional_text:    string(STR_PFOREST_2_PURCHASE);
    }
}

//MIXED FOREST TILES ONE/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

spritelayout spritelayout_mforest_11 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}
    building {
		sprite: 1663;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1594;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1656;
		yoffset: 7;
		yextent: 8;
    }
    building {
		sprite: 1607;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
    
}

spritelayout spritelayout_mforest_12 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
   building {
		sprite: 1586;
		xoffset: 3;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1704;
		xoffset: 7;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1698;
		yoffset: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_mforest_13 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
		sprite: 1698;
		xoffset: -3;		
		yoffset: 7;
		yextent: 8;
		xextent: 7;
    }
    building {
		sprite: 1656;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_mforest_14 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
		sprite: 1704;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1691;
		xoffset: 2;
		yoffset: 4;
		xextent: 7;
		yextent: 8;
    }
}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_mforest_1_view, view) {
    1:  spritelayout_mforest_12;
    2:  spritelayout_mforest_13;
    3:  spritelayout_mforest_14;
    spritelayout_mforest_11;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_mforest_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_mforest_1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_mforest_1_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_mforest_1_view;
}

item (FEAT_OBJECTS, item_mforest_1, 223) {
    property {
        class:                  "FRST";
        name:                   string(STR_MFOREST_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS);
        height:                 0;
        num_views:              4;
    }
    graphics {
		default:            switch_mforest_1_object;
        purchase:           switch_mforest_1_purchase;
		tile_check:			return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return(CB_RESULT_AUTOSLOPE);
		additional_text:    string(STR_MFOREST_1_PURCHASE);						
    }
}

//RAIN FOREST TILES ONE/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

spritelayout spritelayout_rforest_11 {
    ground {
        sprite: 2355;
	}
    building {
		sprite: 1845;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1845;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1859;
		yoffset: 2;
		yextent: 8;
    }
    building {
		sprite: 1937;
		xoffset: 8;
		yoffset: 8;
		xextent: 7;
		yextent: 8;
    }
    
}

spritelayout spritelayout_rforest_12 {
    ground {
        sprite: 2355;
    }
   building {
		sprite: 1937;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1859;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
	building {
		sprite: 1845;
		xoffset: 2;
		yoffset: 8;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1846;
		yoffset: 8;
		yextent: 8;
    }
}

spritelayout spritelayout_rforest_13 {
    ground {
        sprite: 2355;
    }
	building {
		sprite: 1937;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1846;
		xoffset: 2;		
		yoffset: 7;
		yextent: 8;
		xextent: 7;
    }
    building {
		sprite: 1845;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1859;
		yoffset: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_rforest_14 {
    ground {
        sprite: 2355;
    }
	building {
		sprite: 1929;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1846;
		xoffset: 2;
		yoffset: 8;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1936;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1846;
		yoffset: 7;
		yextent: 8;
    }
}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_rforest_1_view, view) {
    1:  spritelayout_rforest_12;
    2:  spritelayout_rforest_13;
    3:  spritelayout_rforest_14;
    spritelayout_rforest_11;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_rforest_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_rforest_1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_rforest_1_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_rforest_1_view;
}

item (FEAT_OBJECTS, item_rforest_1, 224) {
    property {
        class:                  "FRST";
        name:                   string(STR_RFOREST_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height:                 0;
        num_views:              4;
    }
    graphics {
		default:            switch_rforest_1_object;
        purchase:           switch_rforest_1_purchase;
		tile_check:			return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return(CB_RESULT_AUTOSLOPE);
		additional_text:    string(STR_RFOREST_1_PURCHASE);						
    }
}

//RAIN FOREST TILES TWO/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

spritelayout spritelayout_rforest_21 {
    ground {
        sprite: 2355;
	}
    building {
		sprite: 1901;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1859;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1845;
		yoffset: 2;
		yextent: 8;
    }
    building {
		sprite: 1929;
		xoffset: 8;
		yoffset: 8;
		xextent: 7;
		yextent: 8;
    }
    
}

spritelayout spritelayout_rforest_22 {
    ground {
        sprite: 2355;
    }
   building {
		sprite: 1937;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1845;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
    }
	building {
		sprite: 1901;
		xoffset: 2;
		yoffset: 8;
		xextent: 7;
		yextent: 13;
    }
    building {
		sprite: 1846;
		yoffset: 8;
		yextent: 8;
    }
}

spritelayout spritelayout_rforest_23 {
    ground {
        sprite: 2355;
    }
	building {
		sprite: 1936;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1928;
		xoffset: 2;		
		yoffset: 7;
		yextent: 8;
		xextent: 7;
    }
    building {
		sprite: 1845;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1859;
		yoffset: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_rforest_24 {
    ground {
        sprite: 2355;
    }
	building {
		sprite: 1928;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
    }
    building {
		sprite: 1846;
		xoffset: 2;
		yoffset: 8;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1901;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 8;
    }
	building {
		sprite: 1845;
		yoffset: 7;
		yextent: 8;
    }
}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_rforest_2_view, view) {
    1:  spritelayout_rforest_22;
    2:  spritelayout_rforest_23;
    3:  spritelayout_rforest_24;
    spritelayout_rforest_21;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_rforest_2_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_rforest_2_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_rforest_2_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_rforest_2_view;
}

item (FEAT_OBJECTS, item_rforest_2, 225) {
    property {
        class:                  "FRST";
        name:                   string(STR_RFOREST_2);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height:                 0;
        num_views:              4;
    }
    graphics {
		default:            switch_rforest_2_object;
        purchase:           switch_rforest_2_purchase;
		tile_check:			return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return(CB_RESULT_AUTOSLOPE);
		additional_text:    string(STR_RFOREST_2_PURCHASE);						
    }
}


//PALM ALLEY TILES THREE/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

spritelayout spritelayout_alley_11 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}
    building {
		sprite: 1823;
		xoffset: 7;
		yoffset: 1;
    }
    building {
		sprite: 1825;
		xoffset: 7;
		yoffset: 8;
    }
}

spritelayout spritelayout_alley_12 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
   building {
		sprite: 1824;
		xoffset: 6;
		yoffset: 7;
    }
}

spritelayout spritelayout_alley_13 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
		sprite: 1824;
		xoffset: 1;		
		yoffset: 7;
    }
    building {
		sprite: 1825;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
    }
}

spritelayout spritelayout_alley_14 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
		sprite: 1823;
		xoffset: 6;
		yoffset: 7;
    }
}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_alley_1_view, view) {
    1:  spritelayout_alley_12;
    2:  spritelayout_alley_13;
    3:  spritelayout_alley_14;
    spritelayout_alley_11;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_alley_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_alley_1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_alley_1_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_alley_1_view;
}

item (FEAT_OBJECTS, item_alley_1, 226) {
    property {
        class:                  "FRST";
        name:                   string(STR_ALLEY_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS);
        height:                 0;
        num_views:              4;
    }
    graphics {
		default:            switch_alley_1_object;
        purchase:           switch_alley_1_purchase;
		tile_check:			return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return(CB_RESULT_AUTOSLOPE);
		additional_text:    string(STR_ALLEY_1_PURCHASE);						
    }
}

//TREE FARM TILES /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

spritelayout spritelayout_tfarm_11 {
	ground {
        sprite: LOAD_TEMP(0) + 3962;
	}
	building {
		sprite: 1586;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}

	building {
		sprite: 1817;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1817;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}

	building {
		sprite: 1760;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1760;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}

	building {
		sprite: 1915;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1923;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1923;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1915;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}

	building {
		sprite: 1845;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1866;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1845;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1866;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
}

spritelayout spritelayout_tfarm_11_purchase {
	ground {
        sprite: 3962;
	}
	building {
		sprite: 1586;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
	}
	building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
	}
}

spritelayout spritelayout_tfarm_12 {
	ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
	building {
		sprite: 1586;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}

	building {
		sprite: 1817;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1817;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}

	building {
		sprite: 1760;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1760;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}

	building {
		sprite: 1915;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1923;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1923;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1915;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}

	building {
		sprite: 1845;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1866;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1845;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1866;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
}

spritelayout spritelayout_tfarm_12_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
    }
	building {
		sprite: 1586;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
	}
	building {
		sprite: 1593;
		yoffset: 7;
		yextent: 8;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
	}
}

spritelayout spritelayout_tfarm_13 {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
    building {
		sprite: 1593;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1586;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}

	building {
		sprite: 1817;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1817;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}

	building {
		sprite: 1760;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1760;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}

	building {
		sprite: 1923;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1923;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1915;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1915;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}

	building {
		sprite: 1866;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1866;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1845;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1845;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
}

spritelayout spritelayout_tfarm_13_purchase {
    ground {
        sprite: LOAD_TEMP(0) + 3962;
    }
    building {
		sprite: 1593;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
	}
	building {
		sprite: 1586;
		yoffset: 7;
		yextent: 8;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
	}
}

spritelayout spritelayout_tfarm_14 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
		sprite: 1593;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1586;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TEMPERATE;
	}

	building {
		sprite: 1817;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1817;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}
	building {
		sprite: 1775;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
	}

	building {
		sprite: 1760;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1760;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}
	building {
		sprite: 1719;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
	}

	building {
		sprite: 1923;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1923;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1915;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}
	building {
		sprite: 1915;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
	}

	building {
		sprite: 1866;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1866;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1845;
		yoffset: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
	building {
		sprite: 1845;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
		hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
	}
}

spritelayout spritelayout_tfarm_14_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
    }
    building {
		sprite: 1593;
		xoffset: 2;
		yoffset: 2;
		xextent: 13;
		yextent: 13;
	}
	building {
		sprite: 1593;
		xoffset: 8;
		yoffset: 2;
		xextent: 7;
		yextent: 13;
	}
	building {
		sprite: 1586;
		yoffset: 7;
		yextent: 8;
	}
	building {
		sprite: 1586;
		xoffset: 8;
		yoffset: 7;
		xextent: 7;
		yextent: 8;
	}
}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_tfarm_1_view, view) {
    1:  spritelayout_tfarm_12;
    2:  spritelayout_tfarm_13;
    3:  spritelayout_tfarm_14;
    spritelayout_tfarm_11;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_tfarm_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_tfarm_1_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_tfarm_1_purchase, view) {
	1:  spritelayout_tfarm_12_purchase;
	2:  spritelayout_tfarm_13_purchase;
	3:  spritelayout_tfarm_14_purchase;
	spritelayout_tfarm_11_purchase;
}

item (FEAT_OBJECTS, item_tfarm_1, 227) {
    property {
        class:                  "FRST";
        name:                   string(STR_TFARM_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS);
        height:                 0;
        num_views:              4;
    }
    graphics {
        default:            switch_tfarm_1_object;
        purchase:           switch_tfarm_1_purchase;
		tile_check:			return(CB_RESULT_LOCATION_ALLOW);
        autoslope:          return(CB_RESULT_AUTOSLOPE);
        additional_text:    string(STR_TFARM_1_PURCHASE);
    }
}




/* EMBANKMENTS & BALLAST SLOPES */



/***************************************************
*   FALLEN TREES
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fallentrees01) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees01, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees01_32.png")
}

spriteset (spriteset_fallentrees01_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees01_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees01_32_SNOW.png")
}

spriteset (spriteset_fallentrees01_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees01_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fallentrees01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_fallentrees01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_fallentrees01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_fallentrees01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fallentrees01_view, view) {
    1:  spritelayout_fallentrees01_2;
    2:  spritelayout_fallentrees01_3;
    3:  spritelayout_fallentrees01_4;
    spritelayout_fallentrees01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fallentrees01_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fallentrees01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fallentrees01_purchase, view) {
    1:  spritelayout_fallentrees01_2_purchase;
    2:  spritelayout_fallentrees01_3_purchase;
    3:  spritelayout_fallentrees01_4_purchase;
    spritelayout_fallentrees01_1_purchase;
}

item (FEAT_OBJECTS, fallentrees01, 238) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_fallentrees01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fallentrees01_object;
        purchase: switch_fallentrees01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   FLAT HIGH SPRITE
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fallentrees02) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees02_32.png")
}

spriteset (spriteset_fallentrees02_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees02_32_SNOW.png")
}

spriteset (spriteset_fallentrees02_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees02_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fallentrees02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_fallentrees02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_fallentrees02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_fallentrees02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fallentrees02_view, view) {
    1:  spritelayout_fallentrees02_2;
    2:  spritelayout_fallentrees02_3;
    3:  spritelayout_fallentrees02_4;
    spritelayout_fallentrees02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fallentrees02_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fallentrees02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fallentrees02_purchase, view) {
    1:  spritelayout_fallentrees02_2_purchase;
    2:  spritelayout_fallentrees02_3_purchase;
    3:  spritelayout_fallentrees02_4_purchase;
    spritelayout_fallentrees02_1_purchase;
}

item (FEAT_OBJECTS, fallentrees02, 239) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_fallentrees02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fallentrees02_object;
        purchase: switch_fallentrees02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   FLAT HIGH SPRITE
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fallentrees03) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees03, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees03_32.png")
}

spriteset (spriteset_fallentrees03_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees03_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees03_32_SNOW.png")
}

spriteset (spriteset_fallentrees03_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees03_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fallentrees03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_fallentrees03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_fallentrees03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_fallentrees03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fallentrees03_view, view) {
    1:  spritelayout_fallentrees03_2;
    2:  spritelayout_fallentrees03_3;
    3:  spritelayout_fallentrees03_4;
    spritelayout_fallentrees03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fallentrees03_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fallentrees03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fallentrees03_purchase, view) {
    1:  spritelayout_fallentrees03_2_purchase;
    2:  spritelayout_fallentrees03_3_purchase;
    3:  spritelayout_fallentrees03_4_purchase;
    spritelayout_fallentrees03_1_purchase;
}

item (FEAT_OBJECTS, fallentrees03, 240) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_fallentrees03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fallentrees03_object;
        purchase: switch_fallentrees03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   FLAT HIGH SPRITE
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fallentrees04) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees04, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees04_32.png")
}

spriteset (spriteset_fallentrees04_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees04_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees04_32_SNOW.png")
}

spriteset (spriteset_fallentrees04_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees04_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fallentrees04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_fallentrees04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_fallentrees04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_fallentrees04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fallentrees04_view, view) {
    1:  spritelayout_fallentrees04_2;
    2:  spritelayout_fallentrees04_3;
    3:  spritelayout_fallentrees04_4;
    spritelayout_fallentrees04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fallentrees04_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fallentrees04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fallentrees04_purchase, view) {
    1:  spritelayout_fallentrees04_2_purchase;
    2:  spritelayout_fallentrees04_3_purchase;
    3:  spritelayout_fallentrees04_4_purchase;
    spritelayout_fallentrees04_1_purchase;
}

item (FEAT_OBJECTS, fallentrees04, 241) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_fallentrees04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fallentrees04_object;
        purchase: switch_fallentrees04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   FLAT HIGH SPRITE
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fallentrees05) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees05, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees05_32.png")
}

spriteset (spriteset_fallentrees05_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees05_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees05_32_SNOW.png")
}

spriteset (spriteset_fallentrees05_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees05_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees05_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fallentrees05_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees05(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees05_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees05_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees05_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_fallentrees05_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees05(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees05_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees05_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees05_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_fallentrees05_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees05(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees05_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees05_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees05_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_fallentrees05_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees05(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees05_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees05_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees05_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fallentrees05_view, view) {
    1:  spritelayout_fallentrees05_2;
    2:  spritelayout_fallentrees05_3;
    3:  spritelayout_fallentrees05_4;
    spritelayout_fallentrees05_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fallentrees05_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fallentrees05_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fallentrees05_purchase, view) {
    1:  spritelayout_fallentrees05_2_purchase;
    2:  spritelayout_fallentrees05_3_purchase;
    3:  spritelayout_fallentrees05_4_purchase;
    spritelayout_fallentrees05_1_purchase;
}

item (FEAT_OBJECTS, fallentrees05, 242) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_fallentrees05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fallentrees05_object;
        purchase: switch_fallentrees05_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   FLAT HIGH SPRITE
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fallentrees06) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees06, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees06_32.png")
}

spriteset (spriteset_fallentrees06_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees06_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees06_32_SNOW.png")
}

spriteset (spriteset_fallentrees06_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_fallentrees06_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fallentrees06_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fallentrees06_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees06(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees06_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees06_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees06_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_fallentrees06_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees06(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees06_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees06_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees06_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_fallentrees06_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees06(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees06_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees06_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees06_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_fallentrees06_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fallentrees06(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_fallentrees06_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_fallentrees06_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fallentrees06_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fallentrees06_view, view) {
    1:  spritelayout_fallentrees06_2;
    2:  spritelayout_fallentrees06_3;
    3:  spritelayout_fallentrees06_4;
    spritelayout_fallentrees06_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fallentrees06_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fallentrees06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fallentrees06_purchase, view) {
    1:  spritelayout_fallentrees06_2_purchase;
    2:  spritelayout_fallentrees06_3_purchase;
    3:  spritelayout_fallentrees06_4_purchase;
    spritelayout_fallentrees06_1_purchase;
}

item (FEAT_OBJECTS, fallentrees06, 243) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_fallentrees06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fallentrees06_object;
        purchase: switch_fallentrees06_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* BURNING LOGS */


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_burnlogs) {
    template_building_low(0,0,"gfx/burnlogs.png")
}

spriteset (spriteset_burnlogs_SNOW) {
    template_building_low(0,0,"gfx/burnlogs.png")
}

spriteset (spriteset_burnlogs_PURCHASE) {
    template_building_low(0,0,"gfx/burnlogs.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_burnlogs_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_burnlogs(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_burnlogs_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_burnlogs_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_burnlogs_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_burnlogs_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_burnlogs(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_burnlogs_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_burnlogs_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_burnlogs_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_burnlogs_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_burnlogs(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_burnlogs_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_burnlogs_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_burnlogs_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_burnlogs_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_burnlogs(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_burnlogs_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_burnlogs_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_burnlogs_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_burnlogs_view, view) {
    1:  spritelayout_burnlogs_2;
    2:  spritelayout_burnlogs_3;
    3:  spritelayout_burnlogs_4;
    spritelayout_burnlogs_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_burnlogs_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
//  STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_burnlogs_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_burnlogs_purchase, view) {
    1:  spritelayout_burnlogs_2_purchase;
    2:  spritelayout_burnlogs_3_purchase;
    3:  spritelayout_burnlogs_4_purchase;
    spritelayout_burnlogs_1_purchase;
}


item (FEAT_OBJECTS, burnlogs, 007) {
    property {
        class: "FRST";
        classname: string(STR_FRST);
        name: string(STR_burnlogs);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_burnlogs_object;
        purchase: switch_burnlogs_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}


/***************************************************
 BURNING LOGS
****************************************************/

/***************************************************
*   SLOPED LOGS
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_logs01) {
    template_fence_slope(0,0,"gfx/fenceslope_8.png")
}
alternative_sprites (spriteset_logs01, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_fence_slope(0,0,"gfx/logs01_32.png")
}

spriteset (spriteset_logs01_SNOW) {
    template_fence_slope(0,0,"gfx/fenceslope_8.png")
}
alternative_sprites (spriteset_logs01_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_fence_slope(0,0,"gfx/logs01_32_SNOW.png")
}

spriteset (spriteset_logs01_PURCHASE) {
    template_fence_slope(0,0,"gfx/fenceslope_8.png")
}
alternative_sprites (spriteset_logs01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/logs01_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_logs01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}



//Direction_2
spritelayout spritelayout_logs01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}

//Direction_3
spritelayout spritelayout_logs01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}


//Direction_4
spritelayout spritelayout_logs01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_logs01_view, view) {
    1:  spritelayout_logs01_2;
    2:  spritelayout_logs01_3;
    3:  spritelayout_logs01_4;
    spritelayout_logs01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_logs01_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_logs01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_logs01_purchase, view) {
    1:  spritelayout_logs01_2_purchase;
    2:  spritelayout_logs01_3_purchase;
    3:  spritelayout_logs01_4_purchase;
    spritelayout_logs01_1_purchase;
}

item (FEAT_OBJECTS, logs01, 012) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_logs01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_logs01_object;
        purchase: switch_logs01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   SLOPED LOGS
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_logs02) {
    template_fence_slope(0,0,"gfx/fenceslope_8.png")
}
alternative_sprites (spriteset_logs02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_fence_slope(0,0,"gfx/logs02_32.png")
}

spriteset (spriteset_logs02_SNOW) {
    template_fence_slope(0,0,"gfx/fenceslope_8.png")
}
alternative_sprites (spriteset_logs02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_fence_slope(0,0,"gfx/logs02_32_SNOW.png")
}

spriteset (spriteset_logs02_PURCHASE) {
    template_fence_slope(0,0,"gfx/fenceslope_8.png")
}
alternative_sprites (spriteset_logs02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_fence_slope(0,0,"gfx/logs02_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_logs02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}



//Direction_2
spritelayout spritelayout_logs02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}

//Direction_3
spritelayout spritelayout_logs02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}


//Direction_4
spritelayout spritelayout_logs02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

building {
        sprite: spriteset_logs02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 4;
    }

}

spritelayout spritelayout_logs02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 4;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_logs02_view, view) {
    1:  spritelayout_logs02_2;
    2:  spritelayout_logs02_3;
    3:  spritelayout_logs02_4;
    spritelayout_logs02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_logs02_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
//  STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_logs02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_logs02_purchase, view) {
    1:  spritelayout_logs02_2_purchase;
    2:  spritelayout_logs02_3_purchase;
    3:  spritelayout_logs02_4_purchase;
    spritelayout_logs02_1_purchase;
}

item (FEAT_OBJECTS, logs02, 013) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_logs02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_logs02_object;
        purchase: switch_logs02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
START  Overlaps
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_logs03) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_logs03, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/logs03_32.png")
}

spriteset (spriteset_logs03_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_logs03_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/logs03_32_SNOW.png")
}

spriteset (spriteset_logs03_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_logs03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/logs03_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_logs03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_logs03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_logs03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_logs03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_logs03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_logs03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_logs03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_logs03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_logs03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_logs03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_logs03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_logs03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_logs03_view, view) {
    1:  spritelayout_logs03_2;
    2:  spritelayout_logs03_3;
    3:  spritelayout_logs03_4;
    spritelayout_logs03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_logs03_object, [
     STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
//  STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_logs03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_logs03_purchase, view) {
    1:  spritelayout_logs03_2_purchase;
    2:  spritelayout_logs03_3_purchase;
    3:  spritelayout_logs03_4_purchase;
    spritelayout_logs03_1_purchase;
}

item (FEAT_OBJECTS, logs03, 014) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_logs03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_logs03_object;
        purchase: switch_logs03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  logs03
********************************/

/*******************************
START  Overlaps
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_logs04) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_logs04, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/logs04_32.png")
}

spriteset (spriteset_logs04_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_logs04_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/logs04_32_SNOW.png")
}

spriteset (spriteset_logs04_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_logs04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/logs04_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_logs04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_logs04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_logs04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_logs04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_logs04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_logs04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_logs04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_logs04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_logs04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_logs04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_logs04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_logs04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_logs04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_logs04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_logs04_view, view) {
    1:  spritelayout_logs04_2;
    2:  spritelayout_logs04_3;
    3:  spritelayout_logs04_4;
    spritelayout_logs04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_logs04_object, [
     STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
//  STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_logs04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_logs04_purchase, view) {
    1:  spritelayout_logs04_2_purchase;
    2:  spritelayout_logs04_3_purchase;
    3:  spritelayout_logs04_4_purchase;
    spritelayout_logs04_1_purchase;
}

item (FEAT_OBJECTS, logs04, 015) {
    property {
        class: "BHTK";
        classname: string(STR_BHTK);
        name: string(STR_logs04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_logs04_object;
        purchase: switch_logs04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  logs04
********************************/


/* AUZ TREES */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_AuzTrees_01) {
    template_building_high(0,0,"gfx/AuzTrees_01.png")
}

spriteset (spriteset_AuzTrees_01_SNOW) {
    template_building_high(0,0,"gfx/AuzTrees_01.png")
}

spriteset (spriteset_AuzTrees_01_PURCHASE) {
    template_building_high(0,0,"gfx/AuzTrees_01.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_AuzTrees_01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_01_PURCHASE(0);
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_AuzTrees_01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_AuzTrees_01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_AuzTrees_01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_01_view, view) {
    1:  spritelayout_AuzTrees_01_2;
    2:  spritelayout_AuzTrees_01_3;
    3:  spritelayout_AuzTrees_01_4;
    spritelayout_AuzTrees_01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_01_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
//    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AuzTrees_01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_01_purchase, view) {
    1:  spritelayout_AuzTrees_01_2_purchase;
    2:  spritelayout_AuzTrees_01_3_purchase;
    3:  spritelayout_AuzTrees_01_4_purchase;
    spritelayout_AuzTrees_01_1_purchase;
}


item (FEAT_OBJECTS, AuzTrees_01, 247) {
    property {
        class: "AUZT";
        classname: string(STR_AUZT);
        name: string(STR_AuzTrees_01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_AuzTrees_01_object;
        purchase: switch_AuzTrees_01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
      }
}

/* TREES */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_AuzTrees_02) {
    template_building_extrahigh(0,0,"gfx/AuzTrees_02.png")
}

spriteset (spriteset_AuzTrees_02_SNOW) {
    template_building_extrahigh(0,0,"gfx/AuzTrees_02.png")
}

spriteset (spriteset_AuzTrees_02_PURCHASE) {
    template_building_extrahigh(0,0,"gfx/AuzTrees_02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_AuzTrees_02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_AuzTrees_02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_AuzTrees_02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_AuzTrees_02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_02_view, view) {
    1:  spritelayout_AuzTrees_02_2;
    2:  spritelayout_AuzTrees_02_3;
    3:  spritelayout_AuzTrees_02_4;
    spritelayout_AuzTrees_02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_02_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
//    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AuzTrees_02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_02_purchase, view) {
    1:  spritelayout_AuzTrees_02_2_purchase;
    2:  spritelayout_AuzTrees_02_3_purchase;
    3:  spritelayout_AuzTrees_02_4_purchase;
    spritelayout_AuzTrees_02_1_purchase;
}


item (FEAT_OBJECTS, AuzTrees_02, 248) {
    property {
        class: "AUZT";
        classname: string(STR_AUZT);
        name: string(STR_AuzTrees_02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE,  OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_AuzTrees_02_object;
        purchase: switch_AuzTrees_02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
      }
}

/* AUZ TREES */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_AuzTrees_03) {
    template_building_high(0,0,"gfx/AuzTrees_03.png")
}

spriteset (spriteset_AuzTrees_03_SNOW) {
    template_building_high(0,0,"gfx/AuzTrees_03.png")
}

spriteset (spriteset_AuzTrees_03_PURCHASE) {
    template_building_high(0,0,"gfx/AuzTrees_03.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_AuzTrees_03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_AuzTrees_03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_AuzTrees_03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_AuzTrees_03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_03_view, view) {
    1:  spritelayout_AuzTrees_03_2;
    2:  spritelayout_AuzTrees_03_3;
    3:  spritelayout_AuzTrees_03_4;
    spritelayout_AuzTrees_03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_03_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
//    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AuzTrees_03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_03_purchase, view) {
    1:  spritelayout_AuzTrees_03_2_purchase;
    2:  spritelayout_AuzTrees_03_3_purchase;
    3:  spritelayout_AuzTrees_03_4_purchase;
    spritelayout_AuzTrees_03_1_purchase;
}


item (FEAT_OBJECTS, AuzTrees_03, 249) {
    property {
        class: "AUZT";
        classname: string(STR_AUZT);
        name: string(STR_AuzTrees_03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_AuzTrees_03_object;
        purchase: switch_AuzTrees_03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
      }
}

/* AUZ TREES */

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_AuzTrees_04) {
    template_building_extrahigh(0,0,"gfx/AuzTrees_04.png")
}

spriteset (spriteset_AuzTrees_04_SNOW) {
    template_building_extrahigh(0,0,"gfx/AuzTrees_04.png")
}

spriteset (spriteset_AuzTrees_04_PURCHASE) {
    template_building_extrahigh(0,0,"gfx/AuzTrees_04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_AuzTrees_04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_AuzTrees_04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_AuzTrees_04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_AuzTrees_04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_AuzTrees_04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_AuzTrees_04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_AuzTrees_04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_AuzTrees_04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_04_view, view) {
    1:  spritelayout_AuzTrees_04_2;
    2:  spritelayout_AuzTrees_04_3;
    3:  spritelayout_AuzTrees_04_4;
    spritelayout_AuzTrees_04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_04_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
//    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_AuzTrees_04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_AuzTrees_04_purchase, view) {
    1:  spritelayout_AuzTrees_04_2_purchase;
    2:  spritelayout_AuzTrees_04_3_purchase;
    3:  spritelayout_AuzTrees_04_4_purchase;
    spritelayout_AuzTrees_04_1_purchase;
}


item (FEAT_OBJECTS, AuzTrees_04, 250) {
    property {
        class: "AUZT";
        classname: string(STR_AUZT);
        name: string(STR_AuzTrees_04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE,  OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_AuzTrees_04_object;
        purchase: switch_AuzTrees_04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
      }
}

/**************************************************
AuzTrees_04
***************************************************/


/*******************************
START  clouds01
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_clouds01) {
    template_talloverlaps(0,0,"gfx/talloverlaps_8.png")
}
alternative_sprites (spriteset_clouds01, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_talloverlaps(0,0,"gfx/clouds01_32.png")
}

spriteset (spriteset_clouds01_SNOW) {
    template_talloverlaps(0,0,"gfx/talloverlaps_8.png")
}
alternative_sprites (spriteset_clouds01_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_talloverlaps(0,0,"gfx/clouds01_32.png")
}

spriteset (spriteset_clouds01_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_clouds01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/clouds01_32_PURCHASE.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_clouds01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_clouds01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_clouds01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_clouds01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_clouds01_view, view) {
    1:  spritelayout_clouds01_2;
    2:  spritelayout_clouds01_3;
    3:  spritelayout_clouds01_4;
    spritelayout_clouds01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_clouds01_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_clouds01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_clouds01_purchase, view) {
    1:  spritelayout_clouds01_2_purchase;
    2:  spritelayout_clouds01_3_purchase;
    3:  spritelayout_clouds01_4_purchase;
    spritelayout_clouds01_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_clouds01, view) {
1: string(STR_clouds01_purchase_view2);
2: string(STR_clouds01_purchase_view3);
3: string(STR_clouds01_purchase_view4);
default: string(STR_clouds01_purchase_view1);
}

item (FEAT_OBJECTS, clouds01, 016) {
    property {
        class: "ASKY";
        classname: string(STR_ASKY);
        name: string(STR_clouds01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 4;
        num_views: 4;
     }
    graphics {
        default: switch_clouds01_object;
        purchase: switch_clouds01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_clouds01;

      }
}

/*******************************
END  clouds01
********************************/

/*******************************
START  clouds04
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_clouds04) {
    template_talloverlaps(0,0,"gfx/talloverlaps_8.png")
}
alternative_sprites (spriteset_clouds04, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_talloverlaps(0,0,"gfx/clouds04_32.png")
}

spriteset (spriteset_clouds04_SNOW) {
    template_talloverlaps(0,0,"gfx/talloverlaps_8.png")
}
alternative_sprites (spriteset_clouds04_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_talloverlaps(0,0,"gfx/clouds04_32.png")
}

spriteset (spriteset_clouds04_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_clouds04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/clouds04_32_PURCHASE.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_clouds04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_clouds04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_clouds04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_clouds04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_clouds04_view, view) {
    1:  spritelayout_clouds04_2;
    2:  spritelayout_clouds04_3;
    3:  spritelayout_clouds04_4;
    spritelayout_clouds04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_clouds04_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_clouds04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_clouds04_purchase, view) {
    1:  spritelayout_clouds04_2_purchase;
    2:  spritelayout_clouds04_3_purchase;
    3:  spritelayout_clouds04_4_purchase;
    spritelayout_clouds04_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_clouds04, view) {
1: string(STR_clouds04_purchase_view2);
2: string(STR_clouds04_purchase_view3);
3: string(STR_clouds04_purchase_view4);
default: string(STR_clouds04_purchase_view1);
}

item (FEAT_OBJECTS, clouds04, 019) {
    property {
        class: "ASKY";
        classname: string(STR_ASKY);
        name: string(STR_clouds04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 4;
        num_views: 4;
     }
    graphics {
        default: switch_clouds04_object;
        purchase: switch_clouds04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_clouds04;

      }
}

/*******************************
END  clouds04
********************************/

/*******************************
START  Overlaps
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_clouds02) {
    template_talloverlaps(0,0,"gfx/talloverlaps_8.png")
}
alternative_sprites (spriteset_clouds02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_talloverlaps(0,0,"gfx/clouds02_32.png")
}

spriteset (spriteset_clouds02_SNOW) {
    template_talloverlaps(0,0,"gfx/talloverlaps_8.png")
}
alternative_sprites (spriteset_clouds02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_talloverlaps(0,0,"gfx/clouds02_32.png")
}

spriteset (spriteset_clouds02_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_clouds02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/clouds02_32_PURCHASE.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_clouds02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_clouds02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_clouds02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_clouds02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_clouds02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_clouds02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_clouds02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_clouds02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_clouds02_view, view) {
    1:  spritelayout_clouds02_2;
    2:  spritelayout_clouds02_3;
    3:  spritelayout_clouds02_4;
    spritelayout_clouds02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_clouds02_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_clouds02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_clouds02_purchase, view) {
    1:  spritelayout_clouds02_2_purchase;
    2:  spritelayout_clouds02_3_purchase;
    3:  spritelayout_clouds02_4_purchase;
    spritelayout_clouds02_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_clouds02, view) {
1: string(STR_clouds02_purchase_view2);
2: string(STR_clouds02_purchase_view3);
3: string(STR_clouds02_purchase_view4);
default: string(STR_clouds02_purchase_view1);
}

item (FEAT_OBJECTS, clouds02, 017) {
    property {
        class: "ASKY";
        classname: string(STR_ASKY);
        name: string(STR_clouds02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 4;
        num_views: 4;
     }
    graphics {
        default: switch_clouds02_object;
        purchase: switch_clouds02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;
        additional_text: switch_add_text_clouds02;

      }
}

/*******************************
END  clouds02
********************************/

/****************************************************
Start clouds03Anim
****************************************************/

//TEMPLATES & SPRITESETS//
template template_clouds03Anim(x,y,filename) {
    [x,	   y,      130,     270,     -64,    -223,   filename]
}


template template_clouds03Anim_purchase(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

//TOP ROW NE + SNOW//
spriteset (spriteset_clouds03Anim) {

    	template_clouds03Anim(0,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(560,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,0,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds03Anim, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds03Anim(0,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(140,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(280,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(420,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(560,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(700,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(840,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(980,0,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(1120,0,"gfx/clouds03Anim_32.png")

}

spriteset (spriteset_clouds03Anim_snow) {

    	template_clouds03Anim(0,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(560,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,0,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,0,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds03Anim_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds03Anim(0,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(140,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(280,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(420,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(560,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(700,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(840,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(980,0,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(1120,0,"gfx/clouds03Anim_32_SNOW.png")

}

//2ND ROW NE + SNOW//
spriteset (spriteset_clouds03Anim_2) {

    	template_clouds03Anim(0,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(560,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,280,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds03Anim_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds03Anim(0,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(140,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(280,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(420,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(560,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(700,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(840,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(980,280,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(1120,280,"gfx/clouds03Anim_32.png")

}

spriteset (spriteset_clouds03Anim_2_snow) {

    	template_clouds03Anim(0,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(560,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,280,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,280,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds03Anim_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds03Anim(0,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(140,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(280,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(420,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(560,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(700,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(840,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(980,280,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(1120,280,"gfx/clouds03Anim_32_SNOW.png")

}

//3RD ROW SE + SNOW//
spriteset (spriteset_clouds03Anim_3) {

    	template_clouds03Anim(0,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(560,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,560,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds03Anim_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds03Anim(0,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(140,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(280,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(420,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(560,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(700,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(840,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(980,560,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(1120,560,"gfx/clouds03Anim_32.png")
}

spriteset (spriteset_clouds03Anim_3_snow) {
 
    	template_clouds03Anim(0,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(560,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,560,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,560,"gfx/tallmultioverlaps_8.png")

}

alternative_sprites (spriteset_clouds03Anim_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds03Anim(0,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(140,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(280,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(420,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(560,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(700,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(840,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(980,560,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(1120,560,"gfx/clouds03Anim_32_SNOW.png")

}

//4TH ROW + SNOW//
spriteset (spriteset_clouds03Anim_4) {

    	template_clouds03Anim(0,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,840,"gfx/tallmultioverlaps_8.png")	
	template_clouds03Anim(560,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,840,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds03Anim_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_clouds03Anim(0,840,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(140,840,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(280,840,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(420,840,"gfx/clouds03Anim_32.png")	
	template_clouds03Anim(560,840,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(700,840,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(840,840,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(980,840,"gfx/clouds03Anim_32.png")
	template_clouds03Anim(1120,840,"gfx/clouds03Anim_32.png")
}

spriteset (spriteset_clouds03Anim_4_snow) {

    	template_clouds03Anim(0,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(140,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(280,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(420,840,"gfx/tallmultioverlaps_8.png")	
	template_clouds03Anim(560,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(700,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(840,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(980,840,"gfx/tallmultioverlaps_8.png")
	template_clouds03Anim(1120,840,"gfx/tallmultioverlaps_8.png")

}

alternative_sprites (spriteset_clouds03Anim_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {


    	template_clouds03Anim(0,840,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(140,840,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(280,840,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(420,840,"gfx/clouds03Anim_32_SNOW.png")	
	template_clouds03Anim(560,840,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(700,840,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(840,840,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(980,840,"gfx/clouds03Anim_32_SNOW.png")
	template_clouds03Anim(1120,840,"gfx/clouds03Anim_32_SNOW.png")

}

spriteset (spriteset_clouds03Anim_PURCHASE) {
    template_clouds03Anim_purchase(0,0,"gfx/tallmultioverlaps_8_PURCHASE.png")
}

alternative_sprites (spriteset_clouds03Anim_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_clouds03Anim_purchase(0,0,"gfx/clouds03Anim_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE clouds03Anim//
//SPRITELAYOUTS//

//RURAL clouds03Anim LOT NE + PURCHASE//
spritelayout spritelayout_clouds03Anim_01 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds03Anim((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 54;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds03Anim_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 54;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_clouds03Anim_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds03Anim_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 54;
    }

}

//RURAL clouds03Anim LOT SE + PURCHASE//
spritelayout spritelayout_clouds03Anim_02 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds03Anim_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 84;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds03Anim_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 84;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds03Anim_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds03Anim_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 84;
    }

}

//OBJECT 2 SIMPLE clouds03Anim//
//clouds03Anim LOT NE + PURCHASE//
spritelayout spritelayout_clouds03Anim_03 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds03Anim_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds03Anim_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds03Anim_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds03Anim_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//clouds03Anim LOT SE + PURCHASE//
spritelayout spritelayout_clouds03Anim_04 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds03Anim_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds03Anim_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds03Anim_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds03Anim_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_clouds03Anim_view, view) {
    1:  spritelayout_clouds03Anim_02;
    2:  spritelayout_clouds03Anim_03;
    3:  spritelayout_clouds03Anim_04;
    spritelayout_clouds03Anim_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_clouds03Anim_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_clouds03Anim_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_clouds03Anim_purchase, view) {
    1:  spritelayout_clouds03Anim_02_purchase;
    2:  spritelayout_clouds03Anim_03_purchase;
    3:  spritelayout_clouds03Anim_04_purchase;
    spritelayout_clouds03Anim_01_purchase;
}


item (FEAT_OBJECTS, item_clouds03Anim, 018) {
    property {
        class:                  "ASKY";
	classname:		string(STR_ASKY);
        name:                   string(STR_clouds03Anim);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANIMATED, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
         animation_info:			[ANIMATION_LOOPING, 9];
         animation_speed:		5;
         animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_clouds03Anim_object;
        purchase:           switch_clouds03Anim_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
//      additional_text:    string(STR_clouds03Anim_PURCHASE);
//      additional_text:    switch_add_text_STR_clouds03Anim;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  clouds03Anim
*****************************************/


/****************************************************
Start clouds05
****************************************************/

//TEMPLATES & SPRITESETS//
template template_clouds05(x,y,filename) {
    [x,	   y,      130,     270,     -64,    -223,   filename]
}


template template_clouds05_purchase(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

//TOP ROW NE + SNOW//
spriteset (spriteset_clouds05) {

    	template_clouds05(0,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(560,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,0,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds05, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds05(0,0,"gfx/clouds05_32.png")
	template_clouds05(140,0,"gfx/clouds05_32.png")
	template_clouds05(280,0,"gfx/clouds05_32.png")
	template_clouds05(420,0,"gfx/clouds05_32.png")
	template_clouds05(560,0,"gfx/clouds05_32.png")
	template_clouds05(700,0,"gfx/clouds05_32.png")
	template_clouds05(840,0,"gfx/clouds05_32.png")
	template_clouds05(980,0,"gfx/clouds05_32.png")
	template_clouds05(1120,0,"gfx/clouds05_32.png")

}

spriteset (spriteset_clouds05_snow) {

    	template_clouds05(0,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(560,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,0,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,0,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds05_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds05(0,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(140,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(280,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(420,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(560,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(700,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(840,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(980,0,"gfx/clouds05_32_SNOW.png")
	template_clouds05(1120,0,"gfx/clouds05_32_SNOW.png")

}

//2ND ROW NE + SNOW//
spriteset (spriteset_clouds05_2) {

    	template_clouds05(0,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(560,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,280,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds05_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds05(0,280,"gfx/clouds05_32.png")
	template_clouds05(140,280,"gfx/clouds05_32.png")
	template_clouds05(280,280,"gfx/clouds05_32.png")
	template_clouds05(420,280,"gfx/clouds05_32.png")
	template_clouds05(560,280,"gfx/clouds05_32.png")
	template_clouds05(700,280,"gfx/clouds05_32.png")
	template_clouds05(840,280,"gfx/clouds05_32.png")
	template_clouds05(980,280,"gfx/clouds05_32.png")
	template_clouds05(1120,280,"gfx/clouds05_32.png")

}

spriteset (spriteset_clouds05_2_snow) {

    	template_clouds05(0,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(560,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,280,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,280,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds05_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds05(0,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(140,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(280,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(420,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(560,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(700,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(840,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(980,280,"gfx/clouds05_32_SNOW.png")
	template_clouds05(1120,280,"gfx/clouds05_32_SNOW.png")

}

//3RD ROW SE + SNOW//
spriteset (spriteset_clouds05_3) {

    	template_clouds05(0,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(560,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,560,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds05_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds05(0,560,"gfx/clouds05_32.png")
	template_clouds05(140,560,"gfx/clouds05_32.png")
	template_clouds05(280,560,"gfx/clouds05_32.png")
	template_clouds05(420,560,"gfx/clouds05_32.png")
	template_clouds05(560,560,"gfx/clouds05_32.png")
	template_clouds05(700,560,"gfx/clouds05_32.png")
	template_clouds05(840,560,"gfx/clouds05_32.png")
	template_clouds05(980,560,"gfx/clouds05_32.png")
	template_clouds05(1120,560,"gfx/clouds05_32.png")
}

spriteset (spriteset_clouds05_3_snow) {
 
    	template_clouds05(0,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(560,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,560,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,560,"gfx/tallmultioverlaps_8.png")

}

alternative_sprites (spriteset_clouds05_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds05(0,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(140,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(280,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(420,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(560,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(700,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(840,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(980,560,"gfx/clouds05_32_SNOW.png")
	template_clouds05(1120,560,"gfx/clouds05_32_SNOW.png")

}

//4TH ROW + SNOW//
spriteset (spriteset_clouds05_4) {

    	template_clouds05(0,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,840,"gfx/tallmultioverlaps_8.png")	
	template_clouds05(560,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,840,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds05_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_clouds05(0,840,"gfx/clouds05_32.png")
	template_clouds05(140,840,"gfx/clouds05_32.png")
	template_clouds05(280,840,"gfx/clouds05_32.png")
	template_clouds05(420,840,"gfx/clouds05_32.png")	
	template_clouds05(560,840,"gfx/clouds05_32.png")
	template_clouds05(700,840,"gfx/clouds05_32.png")
	template_clouds05(840,840,"gfx/clouds05_32.png")
	template_clouds05(980,840,"gfx/clouds05_32.png")
	template_clouds05(1120,840,"gfx/clouds05_32.png")
}

spriteset (spriteset_clouds05_4_snow) {

    	template_clouds05(0,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(140,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(280,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(420,840,"gfx/tallmultioverlaps_8.png")	
	template_clouds05(560,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(700,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(840,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(980,840,"gfx/tallmultioverlaps_8.png")
	template_clouds05(1120,840,"gfx/tallmultioverlaps_8.png")

}

alternative_sprites (spriteset_clouds05_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {


    	template_clouds05(0,840,"gfx/clouds05_32_SNOW.png")
	template_clouds05(140,840,"gfx/clouds05_32_SNOW.png")
	template_clouds05(280,840,"gfx/clouds05_32_SNOW.png")
	template_clouds05(420,840,"gfx/clouds05_32_SNOW.png")	
	template_clouds05(560,840,"gfx/clouds05_32_SNOW.png")
	template_clouds05(700,840,"gfx/clouds05_32_SNOW.png")
	template_clouds05(840,840,"gfx/clouds05_32_SNOW.png")
	template_clouds05(980,840,"gfx/clouds05_32_SNOW.png")
	template_clouds05(1120,840,"gfx/clouds05_32_SNOW.png")

}

spriteset (spriteset_clouds05_PURCHASE) {
    template_clouds05_purchase(0,0,"gfx/tallmultioverlaps_8_PURCHASE.png")
}

alternative_sprites (spriteset_clouds05_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_clouds05_purchase(0,0,"gfx/clouds05_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE clouds05//
//SPRITELAYOUTS//

//RURAL clouds05 LOT NE + PURCHASE//
spritelayout spritelayout_clouds05_01 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds05((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds05_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_clouds05_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds05_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 100;
    }

}

//RURAL clouds05 LOT SE + PURCHASE//
spritelayout spritelayout_clouds05_02 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds05_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds05_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds05_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds05_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 100;
    }

}

//OBJECT 2 SIMPLE clouds05//
//clouds05 LOT NE + PURCHASE//
spritelayout spritelayout_clouds05_03 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds05_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds05_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds05_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds05_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 100;
    }

}

//clouds05 LOT SE + PURCHASE//
spritelayout spritelayout_clouds05_04 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds05_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds05_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 100;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds05_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds05_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 100;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_clouds05_view, view) {
    1:  spritelayout_clouds05_02;
    2:  spritelayout_clouds05_03;
    3:  spritelayout_clouds05_04;
    spritelayout_clouds05_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_clouds05_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_clouds05_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_clouds05_purchase, view) {
    1:  spritelayout_clouds05_02_purchase;
    2:  spritelayout_clouds05_03_purchase;
    3:  spritelayout_clouds05_04_purchase;
    spritelayout_clouds05_01_purchase;
}


item (FEAT_OBJECTS, item_clouds05, 020) {
    property {
        class:                  "ASKY";
	classname:		string(STR_ASKY);
        name:                   string(STR_clouds05);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANIMATED, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//         animation_info:			[ANIMATION_LOOPING, 9];
//         animation_speed:		5;
//         animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_clouds05_object;
        purchase:           switch_clouds05_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
//      additional_text:    string(STR_clouds05_PURCHASE);
//      additional_text:    switch_add_text_STR_clouds05;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  clouds05
*****************************************/

/****************************************************
Start clouds06
****************************************************/

//TEMPLATES & SPRITESETS//
template template_clouds06(x,y,filename) {
    [x,	   y,      130,     270,     -64,    -223,   filename]
}


template template_clouds06_purchase(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

//TOP ROW NE + SNOW//
spriteset (spriteset_clouds06) {

    	template_clouds06(0,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(560,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,0,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds06, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds06(0,0,"gfx/clouds06_32.png")
	template_clouds06(140,0,"gfx/clouds06_32.png")
	template_clouds06(280,0,"gfx/clouds06_32.png")
	template_clouds06(420,0,"gfx/clouds06_32.png")
	template_clouds06(560,0,"gfx/clouds06_32.png")
	template_clouds06(700,0,"gfx/clouds06_32.png")
	template_clouds06(840,0,"gfx/clouds06_32.png")
	template_clouds06(980,0,"gfx/clouds06_32.png")
	template_clouds06(1120,0,"gfx/clouds06_32.png")

}

spriteset (spriteset_clouds06_snow) {

    	template_clouds06(0,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(560,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,0,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,0,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds06_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds06(0,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(140,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(280,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(420,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(560,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(700,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(840,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(980,0,"gfx/clouds06_32_SNOW.png")
	template_clouds06(1120,0,"gfx/clouds06_32_SNOW.png")

}

//2ND ROW NE + SNOW//
spriteset (spriteset_clouds06_2) {

    	template_clouds06(0,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(560,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,280,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds06_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds06(0,280,"gfx/clouds06_32.png")
	template_clouds06(140,280,"gfx/clouds06_32.png")
	template_clouds06(280,280,"gfx/clouds06_32.png")
	template_clouds06(420,280,"gfx/clouds06_32.png")
	template_clouds06(560,280,"gfx/clouds06_32.png")
	template_clouds06(700,280,"gfx/clouds06_32.png")
	template_clouds06(840,280,"gfx/clouds06_32.png")
	template_clouds06(980,280,"gfx/clouds06_32.png")
	template_clouds06(1120,280,"gfx/clouds06_32.png")

}

spriteset (spriteset_clouds06_2_snow) {

    	template_clouds06(0,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(560,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,280,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,280,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds06_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds06(0,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(140,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(280,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(420,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(560,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(700,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(840,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(980,280,"gfx/clouds06_32_SNOW.png")
	template_clouds06(1120,280,"gfx/clouds06_32_SNOW.png")

}

//3RD ROW SE + SNOW//
spriteset (spriteset_clouds06_3) {

    	template_clouds06(0,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(560,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,560,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds06_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds06(0,560,"gfx/clouds06_32.png")
	template_clouds06(140,560,"gfx/clouds06_32.png")
	template_clouds06(280,560,"gfx/clouds06_32.png")
	template_clouds06(420,560,"gfx/clouds06_32.png")
	template_clouds06(560,560,"gfx/clouds06_32.png")
	template_clouds06(700,560,"gfx/clouds06_32.png")
	template_clouds06(840,560,"gfx/clouds06_32.png")
	template_clouds06(980,560,"gfx/clouds06_32.png")
	template_clouds06(1120,560,"gfx/clouds06_32.png")
}

spriteset (spriteset_clouds06_3_snow) {
 
    	template_clouds06(0,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(560,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,560,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,560,"gfx/tallmultioverlaps_8.png")

}

alternative_sprites (spriteset_clouds06_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_clouds06(0,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(140,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(280,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(420,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(560,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(700,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(840,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(980,560,"gfx/clouds06_32_SNOW.png")
	template_clouds06(1120,560,"gfx/clouds06_32_SNOW.png")

}

//4TH ROW + SNOW//
spriteset (spriteset_clouds06_4) {

    	template_clouds06(0,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,840,"gfx/tallmultioverlaps_8.png")	
	template_clouds06(560,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,840,"gfx/tallmultioverlaps_8.png")
}

alternative_sprites (spriteset_clouds06_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_clouds06(0,840,"gfx/clouds06_32.png")
	template_clouds06(140,840,"gfx/clouds06_32.png")
	template_clouds06(280,840,"gfx/clouds06_32.png")
	template_clouds06(420,840,"gfx/clouds06_32.png")	
	template_clouds06(560,840,"gfx/clouds06_32.png")
	template_clouds06(700,840,"gfx/clouds06_32.png")
	template_clouds06(840,840,"gfx/clouds06_32.png")
	template_clouds06(980,840,"gfx/clouds06_32.png")
	template_clouds06(1120,840,"gfx/clouds06_32.png")
}

spriteset (spriteset_clouds06_4_snow) {

    	template_clouds06(0,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(140,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(280,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(420,840,"gfx/tallmultioverlaps_8.png")	
	template_clouds06(560,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(700,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(840,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(980,840,"gfx/tallmultioverlaps_8.png")
	template_clouds06(1120,840,"gfx/tallmultioverlaps_8.png")

}

alternative_sprites (spriteset_clouds06_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {


    	template_clouds06(0,840,"gfx/clouds06_32_SNOW.png")
	template_clouds06(140,840,"gfx/clouds06_32_SNOW.png")
	template_clouds06(280,840,"gfx/clouds06_32_SNOW.png")
	template_clouds06(420,840,"gfx/clouds06_32_SNOW.png")	
	template_clouds06(560,840,"gfx/clouds06_32_SNOW.png")
	template_clouds06(700,840,"gfx/clouds06_32_SNOW.png")
	template_clouds06(840,840,"gfx/clouds06_32_SNOW.png")
	template_clouds06(980,840,"gfx/clouds06_32_SNOW.png")
	template_clouds06(1120,840,"gfx/clouds06_32_SNOW.png")

}

spriteset (spriteset_clouds06_PURCHASE) {
    template_clouds06_purchase(0,0,"gfx/tallmultioverlaps_8_PURCHASE.png")
}

alternative_sprites (spriteset_clouds06_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_clouds06_purchase(0,0,"gfx/clouds06_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE clouds06//
//SPRITELAYOUTS//

//RURAL clouds06 LOT NE + PURCHASE//
spritelayout spritelayout_clouds06_01 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds06((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 54;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds06_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 54;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_clouds06_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds06_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 54;
    }

}

//RURAL clouds06 LOT SE + PURCHASE//
spritelayout spritelayout_clouds06_02 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds06_2((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 84;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds06_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 84;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds06_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds06_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 84;
    }

}

//OBJECT 2 SIMPLE clouds06//
//clouds06 LOT NE + PURCHASE//
spritelayout spritelayout_clouds06_03 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds06_3((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds06_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds06_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds06_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//clouds06 LOT SE + PURCHASE//
spritelayout spritelayout_clouds06_04 {
    ground {
sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_clouds06_4((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_clouds06_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 9);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_clouds06_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_clouds06_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_clouds06_view, view) {
    1:  spritelayout_clouds06_02;
    2:  spritelayout_clouds06_03;
    3:  spritelayout_clouds06_04;
    spritelayout_clouds06_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_clouds06_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_clouds06_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_clouds06_purchase, view) {
    1:  spritelayout_clouds06_02_purchase;
    2:  spritelayout_clouds06_03_purchase;
    3:  spritelayout_clouds06_04_purchase;
    spritelayout_clouds06_01_purchase;
}


item (FEAT_OBJECTS, item_clouds06, 021) {
    property {
        class:                  "ASKY";
	classname:		string(STR_ASKY);
        name:                   string(STR_clouds06);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANIMATED, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
//         animation_info:			[ANIMATION_LOOPING, 9];
//         animation_speed:		5;
//         animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_clouds06_object;
        purchase:           switch_clouds06_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
//      additional_text:    string(STR_clouds06_PURCHASE);
//      additional_text:    switch_add_text_STR_clouds06;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  clouds06
*****************************************/

/****************************************************
Start smoke
****************************************************/

//TEMPLATES & SPRITESETS//
template template_smoke(x,y,filename) {
    [x,		y,      64,     100,     -31,    -69,   filename]
}

template template_smoke_purchase(x,y,filename) {

    [x, y, 64, 100, -31, -69, filename]
    [x+70, y, 64, 100, -31, -69, filename]
    [x+140, y, 64, 100, -31, -69, filename]
    [x+210, y, 64, 100, -31, -69, filename]

}

//TOP ROW NE + SNOW//
spriteset (spriteset_smoke_1) {
    	template_smoke(0,0,"gfx/tall_8a.png")
	template_smoke(70,0,"gfx/tall_8a.png")
	template_smoke(140,0,"gfx/tall_8a.png")
	template_smoke(210,0,"gfx/tall_8a.png")
	template_smoke(280,0,"gfx/tall_8a.png")
	template_smoke(350,0,"gfx/tall_8a.png")
	template_smoke(420,0,"gfx/tall_8a.png")
	template_smoke(490,0,"gfx/tall_8a.png")
	template_smoke(560,0,"gfx/tall_8a.png")
}

alternative_sprites (spriteset_smoke_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_smoke(0,0,"gfx/smoke_32.png")
	template_smoke(70,0,"gfx/smoke_32.png")
	template_smoke(140,0,"gfx/smoke_32.png")
	template_smoke(210,0,"gfx/smoke_32.png")
	template_smoke(280,0,"gfx/smoke_32.png")
	template_smoke(350,0,"gfx/smoke_32.png")
	template_smoke(420,0,"gfx/smoke_32.png")
	template_smoke(490,0,"gfx/smoke_32.png")
	template_smoke(560,0,"gfx/smoke_32.png")
}

spriteset (spriteset_smoke_1_snow) {
    	template_smoke(0,0,"gfx//tall_8a.png")
	template_smoke(70,0,"gfx/tall_8a.png")
	template_smoke(140,0,"gfx/tall_8a.png")
	template_smoke(210,0,"gfx/tall_8a.png")
	template_smoke(280,0,"gfx/tall_8a.png")
	template_smoke(350,0,"gfx/tall_8a.png")
	template_smoke(420,0,"gfx/tall_8a.png")
	template_smoke(490,0,"gfx/tall_8a.png")
	template_smoke(560,0,"gfx/tall_8a.png")
}

alternative_sprites (spriteset_smoke_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_smoke(0,0,"gfx/smoke_32.png")
	template_smoke(70,0,"gfx/smoke_32.png")
	template_smoke(140,0,"gfx/smoke_32.png")
	template_smoke(210,0,"gfx/smoke_32.png")
	template_smoke(280,0,"gfx/smoke_32.png")
	template_smoke(350,0,"gfx/smoke_32.png")
	template_smoke(420,0,"gfx/smoke_32.png")
	template_smoke(490,0,"gfx/smoke_32.png")
	template_smoke(560,0,"gfx/smoke_32.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_smoke_2) {
    	template_smoke(0,106,"gfx/tall_8a.png")
	template_smoke(70,106,"gfx/tall_8a.png")
	template_smoke(140,106,"gfx/tall_8a.png")
	template_smoke(210,106,"gfx/tall_8a.png")
	template_smoke(280,106,"gfx/tall_8a.png")
	template_smoke(350,106,"gfx/tall_8a.png")
	template_smoke(420,106,"gfx/tall_8a.png")
	template_smoke(490,106,"gfx/tall_8a.png")
	template_smoke(560,106,"gfx/tall_8a.png")
}

alternative_sprites (spriteset_smoke_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_smoke(0,106,"gfx/smoke_32.png")
	template_smoke(70,106,"gfx/smoke_32.png")
	template_smoke(140,106,"gfx/smoke_32.png")
	template_smoke(210,106,"gfx/smoke_32.png")
	template_smoke(280,106,"gfx/smoke_32.png")
	template_smoke(350,106,"gfx/smoke_32.png")
	template_smoke(420,106,"gfx/smoke_32.png")
	template_smoke(490,106,"gfx/smoke_32.png")
	template_smoke(560,106,"gfx/smoke_32.png")
}

spriteset (spriteset_smoke_2_snow) {
    	template_smoke(0,106,"gfx/tall_8a.png")
	template_smoke(70,106,"gfx/tall_8a.png")
	template_smoke(140,106,"gfx/tall_8a.png")
	template_smoke(210,106,"gfx/tall_8a.png")
	template_smoke(280,106,"gfx/tall_8a.png")
	template_smoke(350,106,"gfx/tall_8a.png")
	template_smoke(420,106,"gfx/tall_8a.png")
	template_smoke(490,106,"gfx/tall_8a.png")
	template_smoke(560,106,"gfx/tall_8a.png")
}

alternative_sprites (spriteset_smoke_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_smoke(0,106,"gfx/smoke_32.png")
	template_smoke(70,106,"gfx/smoke_32.png")
	template_smoke(140,106,"gfx/smoke_32.png")
	template_smoke(210,106,"gfx/smoke_32.png")
	template_smoke(280,106,"gfx/smoke_32.png")
	template_smoke(350,106,"gfx/smoke_32.png")
	template_smoke(420,106,"gfx/smoke_32.png")
	template_smoke(490,106,"gfx/smoke_32.png")
	template_smoke(560,106,"gfx/smoke_32.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_smoke_3) {
    	template_smoke(0,212,"gfx/tall_8a.png")
	template_smoke(70,212,"gfx/tall_8a.png")
	template_smoke(140,212,"gfx/tall_8a.png")
	template_smoke(210,212,"gfx/tall_8a.png")
	template_smoke(280,212,"gfx/tall_8a.png")
	template_smoke(350,212,"gfx/tall_8a.png")
	template_smoke(420,212,"gfx/tall_8a.png")
	template_smoke(490,212,"gfx/tall_8a.png")
	template_smoke(560,212,"gfx/tall_8a.png")
}

alternative_sprites (spriteset_smoke_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_smoke(0,212,"gfx/smoke_32.png")
	template_smoke(70,212,"gfx/smoke_32.png")
	template_smoke(140,212,"gfx/smoke_32.png")
	template_smoke(210,212,"gfx/smoke_32.png")
	template_smoke(280,212,"gfx/smoke_32.png")
	template_smoke(350,212,"gfx/smoke_32.png")
	template_smoke(420,212,"gfx/smoke_32.png")
	template_smoke(490,212,"gfx/smoke_32.png")
	template_smoke(560,212,"gfx/smoke_32.png")
}


spriteset (spriteset_smoke_3_snow) {
    	template_smoke(0,212,"gfx/tall_8a.png")
	template_smoke(70,212,"gfx/tall_8a.png")
	template_smoke(140,212,"gfx/tall_8a.png")
	template_smoke(210,212,"gfx/tall_8a.png")
	template_smoke(280,212,"gfx/tall_8a.png")
	template_smoke(350,212,"gfx/tall_8a.png")
	template_smoke(420,212,"gfx/tall_8a.png")
	template_smoke(490,212,"gfx/tall_8a.png")
	template_smoke(560,212,"gfx/tall_8a.png")
}


alternative_sprites (spriteset_smoke_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_smoke(0,212,"gfx/smoke_32.png")
	template_smoke(70,212,"gfx/smoke_32.png")
	template_smoke(140,212,"gfx/smoke_32.png")
	template_smoke(210,212,"gfx/smoke_32.png")
	template_smoke(280,212,"gfx/smoke_32.png")
	template_smoke(350,212,"gfx/smoke_32.png")
	template_smoke(420,212,"gfx/smoke_32.png")
	template_smoke(490,212,"gfx/smoke_32.png")
	template_smoke(560,212,"gfx/smoke_32.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_smoke_4) {
    	template_smoke(0,318,"gfx/tall_8a.png")
	template_smoke(70,318,"gfx/tall_8a.png")
	template_smoke(140,318,"gfx/tall_8a.png")
	template_smoke(210,318,"gfx/tall_8a.png")	
	template_smoke(280,318,"gfx/tall_8a.png")
	template_smoke(350,318,"gfx/tall_8a.png")
	template_smoke(420,318,"gfx/tall_8a.png")
	template_smoke(490,318,"gfx/tall_8a.png")
	template_smoke(560,318,"gfx/tall_8a.png")
}

alternative_sprites (spriteset_smoke_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_smoke(0,318,"gfx/smoke_32.png")
	template_smoke(70,318,"gfx/smoke_32.png")
	template_smoke(140,318,"gfx/smoke_32.png")
	template_smoke(210,318,"gfx/smoke_32.png")	
	template_smoke(280,318,"gfx/smoke_32.png")
	template_smoke(350,318,"gfx/smoke_32.png")
	template_smoke(420,318,"gfx/smoke_32.png")
	template_smoke(490,318,"gfx/smoke_32.png")
	template_smoke(560,318,"gfx/smoke_32.png")
}

spriteset (spriteset_smoke_4_snow) {
    	template_smoke(0,318,"gfx/tall_8a.png")
	template_smoke(70,318,"gfx/tall_8a.png")
	template_smoke(140,318,"gfx/tall_8a.png")
	template_smoke(210,318,"gfx/tall_8a.png")	
	template_smoke(280,318,"gfx/tall_8a.png")
	template_smoke(350,318,"gfx/tall_8a.png")
	template_smoke(420,318,"gfx/tall_8a.png")
	template_smoke(490,318,"gfx/tall_8a.png")
	template_smoke(560,318,"gfx/tall_8a.png")
}

alternative_sprites (spriteset_smoke_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_smoke(0,318,"gfx/smoke_32.png")
	template_smoke(70,318,"gfx/smoke_32.png")
	template_smoke(140,318,"gfx/smoke_32.png")
	template_smoke(210,318,"gfx/smoke_32.png")	
	template_smoke(280,318,"gfx/smoke_32.png")
	template_smoke(350,318,"gfx/smoke_32.png")
	template_smoke(420,318,"gfx/smoke_32.png")
	template_smoke(490,318,"gfx/smoke_32.png")
	template_smoke(560,318,"gfx/smoke_32.png")
}

spriteset (spriteset_smoke_PURCHASE) {
    template_smoke_purchase(0,0,"gfx/tall_8a_PURCHASE.png")
}

alternative_sprites (spriteset_smoke_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_smoke_purchase(0,0,"gfx/smoke_32_PURCHASE.png")
}


//OBJECT 1 SIMPLE smoke//
//SPRITELAYOUTS//

//RURAL smoke LOT NE + PURCHASE//
spritelayout spritelayout_smoke_01 {
    ground {
 sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_smoke_1((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_smoke_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_smoke_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_smoke_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 20;
    }

}

//RURAL smoke LOT SE + PURCHASE//
spritelayout spritelayout_smoke_02 {
    ground {
 	sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_smoke_2((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_smoke_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_smoke_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_smoke_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 20;
    }

}

//OBJECT 2 SIMPLE smoke//
//smoke LOT NE + PURCHASE//
spritelayout spritelayout_smoke_03 {
    ground {
 sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_smoke_3((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_smoke_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_smoke_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_smoke_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 20;
    }

}

//smoke LOT SE + PURCHASE//
spritelayout spritelayout_smoke_04 {
    ground {
 sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_smoke_4((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_smoke_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 8);
		xextent: 16;
		yextent: 16;
		zextent: 20;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_smoke_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_smoke_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 20;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_smoke_1_view, view) {
    1:  spritelayout_smoke_02;
    2:  spritelayout_smoke_03;
    3:  spritelayout_smoke_04;
    spritelayout_smoke_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_smoke_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
		STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_smoke_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_smoke_1_purchase, view) {
    1:  spritelayout_smoke_02_purchase;
    2:  spritelayout_smoke_03_purchase;
    3:  spritelayout_smoke_04_purchase;
    spritelayout_smoke_01_purchase;
}


item (FEAT_OBJECTS, item_smoke_1, 022) {
    property {
        class:                  "ASKY";
	classname:		string(STR_ASKY);
        name:                   string(STR_smoke_1);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_ANYTHING_REMOVE);
	animation_info:			[ANIMATION_LOOPING, 8];
	animation_speed:		2;
	animation_triggers:		3;
        height: 1;
        num_views:              4;
    }
    graphics {
        default:            switch_smoke_1_object;
        purchase:           switch_smoke_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
//      additional_text:    string(STR_smoke_1_PURCHASE);
//      additional_text:    switch_add_text_STR_smoke;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  smoke
*****************************************/

/*************************************
  NATURAL LANDSCAPE
**************************************/


/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_farm_temperate_001_a) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_a.png")
}

spriteset (spriteset_farm_temperate_001_a_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_a_snow.png")
}

spriteset (spriteset_farm_temperate_001_b) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_b.png")
}

spriteset (spriteset_farm_temperate_001_b_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_b_snow.png")
}

spriteset (spriteset_farm_temperate_001_c) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_c.png")
}

spriteset (spriteset_farm_temperate_001_c_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_c_snow.png")
}


spriteset (spriteset_farm_temperate_001_d) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_d.png")
}

spriteset (spriteset_farm_temperate_001_d_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_001_d_snow.png")
}

spriteset (spriteset_farm_temperate_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/farm_temperate_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_farm_temperate_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_farm_temperate_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_farm_temperate_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_farm_temperate_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_001_view, view) {
    1:  spritelayout_farm_temperate_001_b;
    2:  spritelayout_farm_temperate_001_c;
    3:  spritelayout_farm_temperate_001_d;
    spritelayout_farm_temperate_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_farm_temperate_001_view;
}


spritelayout spritelayout_farm_temperate_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_001_PURCHASE(0);
	}
}

spritelayout spritelayout_farm_temperate_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_001_PURCHASE(1);
	}
}

spritelayout spritelayout_farm_temperate_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_001_PURCHASE(2);
	}
}

spritelayout spritelayout_farm_temperate_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_001_purchase, view) {
    1:  spritelayout_farm_temperate_001_2_purchase;
    2:  spritelayout_farm_temperate_001_3_purchase;
    3:  spritelayout_farm_temperate_001_4_purchase;
    spritelayout_farm_temperate_001_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_farm_temperate_001, view) {
1: string(STR_farm_temperate_001_purchase_view2);
2: string(STR_farm_temperate_001_purchase_view3);
3: string(STR_farm_temperate_001_purchase_view4);
default: string(STR_farm_temperate_001_purchase_view1);
}


item (FEAT_OBJECTS, farm_temperate_001, 023) {
    property {
        class: "FMCP";
        classname: string(STR_FMCP);
        name: string(STR_farm_temperate_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_farm_temperate_001_object;
        purchase: switch_farm_temperate_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_farm_temperate_001;

     }
}

/*************************************
  NATURAL LANDSCAPE
**************************************/


/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_farm_temperate_002_a) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_a.png")
}

spriteset (spriteset_farm_temperate_002_a_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_a_snow.png")
}

spriteset (spriteset_farm_temperate_002_b) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_b.png")
}

spriteset (spriteset_farm_temperate_002_b_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_b_snow.png")
}

spriteset (spriteset_farm_temperate_002_c) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_c.png")
}

spriteset (spriteset_farm_temperate_002_c_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_c_snow.png")
}


spriteset (spriteset_farm_temperate_002_d) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_d.png")
}

spriteset (spriteset_farm_temperate_002_d_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_002_d_snow.png")
}

spriteset (spriteset_farm_temperate_002_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/farm_temperate_002_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_farm_temperate_002_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_002_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_002_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_farm_temperate_002_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_002_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_002_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_farm_temperate_002_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_002_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_002_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_farm_temperate_002_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_002_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_002_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_002_view, view) {
    1:  spritelayout_farm_temperate_002_b;
    2:  spritelayout_farm_temperate_002_c;
    3:  spritelayout_farm_temperate_002_d;
    spritelayout_farm_temperate_002_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_002_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_farm_temperate_002_view;
}


spritelayout spritelayout_farm_temperate_002_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_002_PURCHASE(0);
	}
}

spritelayout spritelayout_farm_temperate_002_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_002_PURCHASE(1);
	}
}

spritelayout spritelayout_farm_temperate_002_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_002_PURCHASE(2);
	}
}

spritelayout spritelayout_farm_temperate_002_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_002_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_002_purchase, view) {
    1:  spritelayout_farm_temperate_002_2_purchase;
    2:  spritelayout_farm_temperate_002_3_purchase;
    3:  spritelayout_farm_temperate_002_4_purchase;
    spritelayout_farm_temperate_002_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_farm_temperate_002, view) {
1: string(STR_farm_temperate_002_purchase_view2);
2: string(STR_farm_temperate_002_purchase_view3);
3: string(STR_farm_temperate_002_purchase_view4);
default: string(STR_farm_temperate_002_purchase_view1);
}


item (FEAT_OBJECTS, farm_temperate_002, 024) {
    property {
        class: "FMCP";
        classname: string(STR_FMCP);
        name: string(STR_farm_temperate_002);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_farm_temperate_002_object;
        purchase: switch_farm_temperate_002_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_farm_temperate_002;

     }
}

/*************************************
  NATURAL LANDSCAPE
**************************************/


/* Terrain Slope Aware */


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_farm_temperate_003_a) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_a.png")
}

spriteset (spriteset_farm_temperate_003_a_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_a_snow.png")
}

spriteset (spriteset_farm_temperate_003_b) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_b.png")
}

spriteset (spriteset_farm_temperate_003_b_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_b_snow.png")
}

spriteset (spriteset_farm_temperate_003_c) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_c.png")
}

spriteset (spriteset_farm_temperate_003_c_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_c_snow.png")
}


spriteset (spriteset_farm_temperate_003_d) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_d.png")
}

spriteset (spriteset_farm_temperate_003_d_SNOW) {
    template_slopeaware(0,0,"gfx/farm_temperate_003_d_snow.png")
}

spriteset (spriteset_farm_temperate_003_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/farm_temperate_003_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_farm_temperate_003_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_003_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_003_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}


//View_b


spritelayout spritelayout_farm_temperate_003_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_003_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_003_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_c


spritelayout spritelayout_farm_temperate_003_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_003_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_003_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//View_d


spritelayout spritelayout_farm_temperate_003_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_farm_temperate_003_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
        childsprite {
                sprite: spriteset_farm_temperate_003_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_003_view, view) {
    1:  spritelayout_farm_temperate_003_b;
    2:  spritelayout_farm_temperate_003_c;
    3:  spritelayout_farm_temperate_003_d;
    spritelayout_farm_temperate_003_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_003_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_farm_temperate_003_view;
}


spritelayout spritelayout_farm_temperate_003_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_003_PURCHASE(0);
	}
}

spritelayout spritelayout_farm_temperate_003_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_003_PURCHASE(1);
	}
}

spritelayout spritelayout_farm_temperate_003_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_003_PURCHASE(2);
	}
}

spritelayout spritelayout_farm_temperate_003_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_farm_temperate_003_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_farm_temperate_003_purchase, view) {
    1:  spritelayout_farm_temperate_003_2_purchase;
    2:  spritelayout_farm_temperate_003_3_purchase;
    3:  spritelayout_farm_temperate_003_4_purchase;
    spritelayout_farm_temperate_003_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_farm_temperate_003, view) {
1: string(STR_farm_temperate_003_purchase_view2);
2: string(STR_farm_temperate_003_purchase_view3);
3: string(STR_farm_temperate_003_purchase_view4);
default: string(STR_farm_temperate_003_purchase_view1);
}


item (FEAT_OBJECTS, farm_temperate_003, 025) {
    property {
        class: "FMCP";
        classname: string(STR_FMCP);
        name: string(STR_farm_temperate_003);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_farm_temperate_003_object;
        purchase: switch_farm_temperate_003_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_farm_temperate_003;

     }
}

/*******************************************
start  TerrainAndOverlays01
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_TerrainAndOverlays01_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays01.png")
}

spriteset (spriteset_TerrainAndOverlays01_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays01_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays01_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays01.png")
}

spriteset (spriteset_TerrainAndOverlays01_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays01_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays01_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays01.png")
}

spriteset (spriteset_TerrainAndOverlays01_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays01_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays01_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays01.png")
}

spriteset (spriteset_TerrainAndOverlays01_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays01_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays01_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/TerrainAndOverlays01_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_TerrainAndOverlays01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_TerrainAndOverlays01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_TerrainAndOverlays01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_TerrainAndOverlays01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_TerrainAndOverlays01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_TerrainAndOverlays01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

        childsprite {
                sprite: spriteset_TerrainAndOverlays01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays01_view, view) {
    1:  spritelayout_TerrainAndOverlays01_b;
    2:  spritelayout_TerrainAndOverlays01_c;
    3:  spritelayout_TerrainAndOverlays01_d;
    spritelayout_TerrainAndOverlays01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_TerrainAndOverlays01_view;
}


spritelayout spritelayout_TerrainAndOverlays01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays01_PURCHASE(0);
	}
}

spritelayout spritelayout_TerrainAndOverlays01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays01_PURCHASE(1);
	}
}

spritelayout spritelayout_TerrainAndOverlays01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays01_PURCHASE(2);
	}
}

spritelayout spritelayout_TerrainAndOverlays01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays01_purchase, view) {
    1:  spritelayout_TerrainAndOverlays01_2_purchase;
    2:  spritelayout_TerrainAndOverlays01_3_purchase;
    3:  spritelayout_TerrainAndOverlays01_4_purchase;
    spritelayout_TerrainAndOverlays01_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_TerrainAndOverlays01, view) {
1: string(STR_TerrainAndOverlays01_purchase_view2);
2: string(STR_TerrainAndOverlays01_purchase_view3);
3: string(STR_TerrainAndOverlays01_purchase_view4);
default: string(STR_TerrainAndOverlays01_purchase_view1);
}


item (FEAT_OBJECTS, TerrainAndOverlays01, 028) {
    property {
        class: "AZTO";
        classname: string(STR_AZTO);
        name: string(STR_TerrainAndOverlays01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_TerrainAndOverlays01_object;
        purchase: switch_TerrainAndOverlays01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_TerrainAndOverlays01;

     }
}

/*******************************************
END  TerrainAndOverlays01
********************************************/

/*******************************************
start  TerrainAndOverlays02
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_TerrainAndOverlays02_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays02.png")
}

spriteset (spriteset_TerrainAndOverlays02_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays02_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays02_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays02.png")
}

spriteset (spriteset_TerrainAndOverlays02_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays02_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays02_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays02.png")
}

spriteset (spriteset_TerrainAndOverlays02_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays02_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays02_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays02.png")
}

spriteset (spriteset_TerrainAndOverlays02_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays02_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays02_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/TerrainAndOverlays02_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_TerrainAndOverlays02_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays02_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays02_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_TerrainAndOverlays02_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays02_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_TerrainAndOverlays02_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_TerrainAndOverlays02_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays02_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays02_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_TerrainAndOverlays02_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_TerrainAndOverlays02_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

        childsprite {
                sprite: spriteset_TerrainAndOverlays02_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays02_view, view) {
    1:  spritelayout_TerrainAndOverlays02_b;
    2:  spritelayout_TerrainAndOverlays02_c;
    3:  spritelayout_TerrainAndOverlays02_d;
    spritelayout_TerrainAndOverlays02_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays02_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_TerrainAndOverlays02_view;
}


spritelayout spritelayout_TerrainAndOverlays02_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays02_PURCHASE(0);
	}
}

spritelayout spritelayout_TerrainAndOverlays02_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays02_PURCHASE(1);
	}
}

spritelayout spritelayout_TerrainAndOverlays02_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays02_PURCHASE(2);
	}
}

spritelayout spritelayout_TerrainAndOverlays02_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays02_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays02_purchase, view) {
    1:  spritelayout_TerrainAndOverlays02_2_purchase;
    2:  spritelayout_TerrainAndOverlays02_3_purchase;
    3:  spritelayout_TerrainAndOverlays02_4_purchase;
    spritelayout_TerrainAndOverlays02_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_TerrainAndOverlays02, view) {
1: string(STR_TerrainAndOverlays02_purchase_view2);
2: string(STR_TerrainAndOverlays02_purchase_view3);
3: string(STR_TerrainAndOverlays02_purchase_view4);
default: string(STR_TerrainAndOverlays02_purchase_view1);
}


item (FEAT_OBJECTS, TerrainAndOverlays02, 029) {
    property {
        class: "AZTO";
        classname: string(STR_AZTO);
        name: string(STR_TerrainAndOverlays02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_TerrainAndOverlays02_object;
        purchase: switch_TerrainAndOverlays02_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_TerrainAndOverlays02;

     }
}

/*******************************************
END  TerrainAndOverlays02
********************************************/

/*******************************************
start  TerrainAndOverlays03
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_TerrainAndOverlays03_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays03.png")
}

spriteset (spriteset_TerrainAndOverlays03_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays03_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays03_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays03.png")
}

spriteset (spriteset_TerrainAndOverlays03_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays03_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays03_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays03.png")
}

spriteset (spriteset_TerrainAndOverlays03_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays03_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays03_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays03.png")
}

spriteset (spriteset_TerrainAndOverlays03_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays03_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays03_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/TerrainAndOverlays03_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_TerrainAndOverlays03_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays03_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays03_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_TerrainAndOverlays03_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays03_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_TerrainAndOverlays03_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_TerrainAndOverlays03_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays03_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}



        childsprite {
                sprite: spriteset_TerrainAndOverlays03_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_TerrainAndOverlays03_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_TerrainAndOverlays03_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays03_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays03_view, view) {
    1:  spritelayout_TerrainAndOverlays03_b;
    2:  spritelayout_TerrainAndOverlays03_c;
    3:  spritelayout_TerrainAndOverlays03_d;
    spritelayout_TerrainAndOverlays03_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays03_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_TerrainAndOverlays03_view;
}


spritelayout spritelayout_TerrainAndOverlays03_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays03_PURCHASE(0);
	}
}

spritelayout spritelayout_TerrainAndOverlays03_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays03_PURCHASE(1);
	}
}

spritelayout spritelayout_TerrainAndOverlays03_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays03_PURCHASE(2);
	}
}

spritelayout spritelayout_TerrainAndOverlays03_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays03_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays03_purchase, view) {
    1:  spritelayout_TerrainAndOverlays03_2_purchase;
    2:  spritelayout_TerrainAndOverlays03_3_purchase;
    3:  spritelayout_TerrainAndOverlays03_4_purchase;
    spritelayout_TerrainAndOverlays03_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_TerrainAndOverlays03, view) {
1: string(STR_TerrainAndOverlays03_purchase_view2);
2: string(STR_TerrainAndOverlays03_purchase_view3);
3: string(STR_TerrainAndOverlays03_purchase_view4);
default: string(STR_TerrainAndOverlays03_purchase_view1);
}


item (FEAT_OBJECTS, TerrainAndOverlays03, 030) {
    property {
        class: "AZTO";
        classname: string(STR_AZTO);
        name: string(STR_TerrainAndOverlays03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_TerrainAndOverlays03_object;
        purchase: switch_TerrainAndOverlays03_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_TerrainAndOverlays03;

     }
}

/*******************************************
END  TerrainAndOverlays03
********************************************/

/*******************************************
start  TerrainAndOverlays04
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_TerrainAndOverlays04_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays04.png")
}

spriteset (spriteset_TerrainAndOverlays04_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays04_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays04_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays04.png")
}

spriteset (spriteset_TerrainAndOverlays04_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays04_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays04_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays04.png")
}

spriteset (spriteset_TerrainAndOverlays04_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays04_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays04_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays04.png")
}

spriteset (spriteset_TerrainAndOverlays04_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays04_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays04_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/TerrainAndOverlays04_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_TerrainAndOverlays04_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays04_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}



        childsprite {
                sprite: spriteset_TerrainAndOverlays04_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_TerrainAndOverlays04_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays04_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}



        childsprite {
                sprite: spriteset_TerrainAndOverlays04_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_TerrainAndOverlays04_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays04_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}



        childsprite {
                sprite: spriteset_TerrainAndOverlays04_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }




}

spritelayout spritelayout_TerrainAndOverlays04_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_TerrainAndOverlays04_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays04_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }




}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays04_view, view) {
    1:  spritelayout_TerrainAndOverlays04_b;
    2:  spritelayout_TerrainAndOverlays04_c;
    3:  spritelayout_TerrainAndOverlays04_d;
    spritelayout_TerrainAndOverlays04_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays04_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_TerrainAndOverlays04_view;
}


spritelayout spritelayout_TerrainAndOverlays04_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays04_PURCHASE(0);
	}
}

spritelayout spritelayout_TerrainAndOverlays04_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays04_PURCHASE(1);
	}
}

spritelayout spritelayout_TerrainAndOverlays04_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays04_PURCHASE(2);
	}
}

spritelayout spritelayout_TerrainAndOverlays04_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays04_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays04_purchase, view) {
    1:  spritelayout_TerrainAndOverlays04_2_purchase;
    2:  spritelayout_TerrainAndOverlays04_3_purchase;
    3:  spritelayout_TerrainAndOverlays04_4_purchase;
    spritelayout_TerrainAndOverlays04_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_TerrainAndOverlays04, view) {
1: string(STR_TerrainAndOverlays04_purchase_view2);
2: string(STR_TerrainAndOverlays04_purchase_view3);
3: string(STR_TerrainAndOverlays04_purchase_view4);
default: string(STR_TerrainAndOverlays04_purchase_view1);
}


item (FEAT_OBJECTS, TerrainAndOverlays04, 031) {
    property {
        class: "AZTO";
        classname: string(STR_AZTO);
        name: string(STR_TerrainAndOverlays04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_TerrainAndOverlays04_object;
        purchase: switch_TerrainAndOverlays04_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_TerrainAndOverlays04;

     }
}

/*******************************************
END  TerrainAndOverlays04
********************************************/

/*******************************************
start  TerrainAndOverlays05
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_TerrainAndOverlays05_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays05.png")
}

spriteset (spriteset_TerrainAndOverlays05_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/TerrainAndOverlays05_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays05_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays05.png")
}

spriteset (spriteset_TerrainAndOverlays05_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/TerrainAndOverlays05_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays05_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays05.png")
}

spriteset (spriteset_TerrainAndOverlays05_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/TerrainAndOverlays05_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays05_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays05.png")
}

spriteset (spriteset_TerrainAndOverlays05_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/TerrainAndOverlays05_SNOW.png")
}

spriteset (spriteset_TerrainAndOverlays05_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_TerrainAndOverlays05_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/TerrainAndOverlays05_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_TerrainAndOverlays05_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays05_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays05_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_TerrainAndOverlays05_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays05_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_TerrainAndOverlays05_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_TerrainAndOverlays05_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_TerrainAndOverlays05_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays05_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_TerrainAndOverlays05_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_TerrainAndOverlays05_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_TerrainAndOverlays05_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays05_view, view) {
    1:  spritelayout_TerrainAndOverlays05_b;
    2:  spritelayout_TerrainAndOverlays05_c;
    3:  spritelayout_TerrainAndOverlays05_d;
    spritelayout_TerrainAndOverlays05_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays05_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_TerrainAndOverlays05_view;
}


spritelayout spritelayout_TerrainAndOverlays05_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays05_PURCHASE(0);
	}
}

spritelayout spritelayout_TerrainAndOverlays05_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays05_PURCHASE(1);
	}
}

spritelayout spritelayout_TerrainAndOverlays05_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays05_PURCHASE(2);
	}
}

spritelayout spritelayout_TerrainAndOverlays05_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_TerrainAndOverlays05_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_TerrainAndOverlays05_purchase, view) {
    1:  spritelayout_TerrainAndOverlays05_2_purchase;
    2:  spritelayout_TerrainAndOverlays05_3_purchase;
    3:  spritelayout_TerrainAndOverlays05_4_purchase;
    spritelayout_TerrainAndOverlays05_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_TerrainAndOverlays05, view) {
1: string(STR_TerrainAndOverlays05_purchase_view2);
2: string(STR_TerrainAndOverlays05_purchase_view3);
3: string(STR_TerrainAndOverlays05_purchase_view4);
default: string(STR_TerrainAndOverlays05_purchase_view1);
}


item (FEAT_OBJECTS, TerrainAndOverlays05, 032) {
    property {
        class: "AZTO";
        classname: string(STR_AZTO);
        name: string(STR_TerrainAndOverlays05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_TerrainAndOverlays05_object;
        purchase: switch_TerrainAndOverlays05_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_TerrainAndOverlays05;

     }
}

/*******************************************
END  TerrainAndOverlays05
********************************************/

/*******************************************
start  ogfxterrain01
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain01_a) {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_b) {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_c) {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_d) {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain01.png")
}

spriteset (spriteset_ogfxterrain01_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/ogfxterrain01_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_ogfxterrain01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_ogfxterrain01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

        childsprite {
                sprite: spriteset_ogfxterrain01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain01_view, view) {
    1:  spritelayout_ogfxterrain01_b;
    2:  spritelayout_ogfxterrain01_c;
    3:  spritelayout_ogfxterrain01_d;
    spritelayout_ogfxterrain01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain01_view;
}


spritelayout spritelayout_ogfxterrain01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain01_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain01_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain01_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain01_purchase, view) {
    1:  spritelayout_ogfxterrain01_2_purchase;
    2:  spritelayout_ogfxterrain01_3_purchase;
    3:  spritelayout_ogfxterrain01_4_purchase;
    spritelayout_ogfxterrain01_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain01, view) {
1: string(STR_ogfxterrain01_purchase_view2);
2: string(STR_ogfxterrain01_purchase_view3);
3: string(STR_ogfxterrain01_purchase_view4);
default: string(STR_ogfxterrain01_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain01, 033) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain01_object;
        purchase: switch_ogfxterrain01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain01;

     }
}

/*******************************************
END  ogfxterrain01
********************************************/

/*******************************************
start  ogfxterrain02
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain02_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain02.png")
}

spriteset (spriteset_ogfxterrain02_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain02_SNOW.png")
}

spriteset (spriteset_ogfxterrain02_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain02.png")
}

spriteset (spriteset_ogfxterrain02_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain02_SNOW.png")
}

spriteset (spriteset_ogfxterrain02_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain02.png")
}

spriteset (spriteset_ogfxterrain02_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain02_SNOW.png")
}

spriteset (spriteset_ogfxterrain02_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain02.png")
}

spriteset (spriteset_ogfxterrain02_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain02_SNOW.png")
}

spriteset (spriteset_ogfxterrain02_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_ogfxterrain02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ogfxterrain02_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain02_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain02_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain02_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain02_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain02_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_ogfxterrain02_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_ogfxterrain02_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain02_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain02_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain02_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain02_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain02_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain02_view, view) {
    1:  spritelayout_ogfxterrain02_b;
    2:  spritelayout_ogfxterrain02_c;
    3:  spritelayout_ogfxterrain02_d;
    spritelayout_ogfxterrain02_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain02_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain02_view;
}


spritelayout spritelayout_ogfxterrain02_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain02_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain02_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain02_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain02_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain02_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain02_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain02_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain02_purchase, view) {
    1:  spritelayout_ogfxterrain02_2_purchase;
    2:  spritelayout_ogfxterrain02_3_purchase;
    3:  spritelayout_ogfxterrain02_4_purchase;
    spritelayout_ogfxterrain02_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain02, view) {
1: string(STR_ogfxterrain02_purchase_view2);
2: string(STR_ogfxterrain02_purchase_view3);
3: string(STR_ogfxterrain02_purchase_view4);
default: string(STR_ogfxterrain02_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain02, 034) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain02_object;
        purchase: switch_ogfxterrain02_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain02;

     }
}

/*******************************************
END  ogfxterrain02
********************************************/

/*******************************************
start  ogfxterrain03
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain03_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain03.png")
}

spriteset (spriteset_ogfxterrain03_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain03_SNOW.png")
}

spriteset (spriteset_ogfxterrain03_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain03.png")
}

spriteset (spriteset_ogfxterrain03_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain03_SNOW.png")
}

spriteset (spriteset_ogfxterrain03_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain03.png")
}

spriteset (spriteset_ogfxterrain03_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain03_SNOW.png")
}

spriteset (spriteset_ogfxterrain03_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain03.png")
}

spriteset (spriteset_ogfxterrain03_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain03_SNOW.png")
}

spriteset (spriteset_ogfxterrain03_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_ogfxterrain03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ogfxterrain03_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain03_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain03_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain03_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain03_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain03_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_ogfxterrain03_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_ogfxterrain03_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain03_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain03_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }




}

spritelayout spritelayout_ogfxterrain03_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain03_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain03_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain03_view, view) {
    1:  spritelayout_ogfxterrain03_b;
    2:  spritelayout_ogfxterrain03_c;
    3:  spritelayout_ogfxterrain03_d;
    spritelayout_ogfxterrain03_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain03_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain03_view;
}


spritelayout spritelayout_ogfxterrain03_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain03_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain03_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain03_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain03_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain03_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain03_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain03_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain03_purchase, view) {
    1:  spritelayout_ogfxterrain03_2_purchase;
    2:  spritelayout_ogfxterrain03_3_purchase;
    3:  spritelayout_ogfxterrain03_4_purchase;
    spritelayout_ogfxterrain03_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain03, view) {
1: string(STR_ogfxterrain03_purchase_view2);
2: string(STR_ogfxterrain03_purchase_view3);
3: string(STR_ogfxterrain03_purchase_view4);
default: string(STR_ogfxterrain03_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain03, 035) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain03_object;
        purchase: switch_ogfxterrain03_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain03;

     }
}

/*******************************************
END  ogfxterrain03
********************************************/


/*******************************************
start  ogfxterrain04
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain04_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain04.png")
}

spriteset (spriteset_ogfxterrain04_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain04_SNOW.png")
}

spriteset (spriteset_ogfxterrain04_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain04.png")
}

spriteset (spriteset_ogfxterrain04_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain04_SNOW.png")
}

spriteset (spriteset_ogfxterrain04_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain04.png")
}

spriteset (spriteset_ogfxterrain04_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain04_SNOW.png")
}

spriteset (spriteset_ogfxterrain04_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain04.png")
}

spriteset (spriteset_ogfxterrain04_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain04_SNOW.png")
}

spriteset (spriteset_ogfxterrain04_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_ogfxterrain04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ogfxterrain04_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain04_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain04_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain04_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain04_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain04_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_ogfxterrain04_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_ogfxterrain04_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain04_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain04_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain04_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain04_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain04_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain04_view, view) {
    1:  spritelayout_ogfxterrain04_b;
    2:  spritelayout_ogfxterrain04_c;
    3:  spritelayout_ogfxterrain04_d;
    spritelayout_ogfxterrain04_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain04_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain04_view;
}


spritelayout spritelayout_ogfxterrain04_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain04_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain04_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain04_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain04_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain04_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain04_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain04_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain04_purchase, view) {
    1:  spritelayout_ogfxterrain04_2_purchase;
    2:  spritelayout_ogfxterrain04_3_purchase;
    3:  spritelayout_ogfxterrain04_4_purchase;
    spritelayout_ogfxterrain04_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain04, view) {
1: string(STR_ogfxterrain04_purchase_view2);
2: string(STR_ogfxterrain04_purchase_view3);
3: string(STR_ogfxterrain04_purchase_view4);
default: string(STR_ogfxterrain04_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain04, 036) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain04_object;
        purchase: switch_ogfxterrain04_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain04;

     }
}

/*******************************************
END  ogfxterrain04
********************************************/

/*******************************************
start  ogfxterrain05
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain05_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain05.png")
}

spriteset (spriteset_ogfxterrain05_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain05_SNOW.png")
}

spriteset (spriteset_ogfxterrain05_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain05.png")
}

spriteset (spriteset_ogfxterrain05_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain05_SNOW.png")
}

spriteset (spriteset_ogfxterrain05_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain05.png")
}

spriteset (spriteset_ogfxterrain05_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain05_SNOW.png")
}

spriteset (spriteset_ogfxterrain05_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain05.png")
}

spriteset (spriteset_ogfxterrain05_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain05_SNOW.png")
}

spriteset (spriteset_ogfxterrain05_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_ogfxterrain05_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ogfxterrain05_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain05_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain05_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain05_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain05_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain05_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_ogfxterrain05_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_ogfxterrain05_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain05_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain05_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain05_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain05_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain05_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain05_view, view) {
    1:  spritelayout_ogfxterrain05_b;
    2:  spritelayout_ogfxterrain05_c;
    3:  spritelayout_ogfxterrain05_d;
    spritelayout_ogfxterrain05_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain05_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain05_view;
}


spritelayout spritelayout_ogfxterrain05_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain05_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain05_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain05_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain05_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain05_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain05_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain05_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain05_purchase, view) {
    1:  spritelayout_ogfxterrain05_2_purchase;
    2:  spritelayout_ogfxterrain05_3_purchase;
    3:  spritelayout_ogfxterrain05_4_purchase;
    spritelayout_ogfxterrain05_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain05, view) {
1: string(STR_ogfxterrain05_purchase_view2);
2: string(STR_ogfxterrain05_purchase_view3);
3: string(STR_ogfxterrain05_purchase_view4);
default: string(STR_ogfxterrain05_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain05, 037) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain05_object;
        purchase: switch_ogfxterrain05_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain05;

     }
}

/*******************************************
END  ogfxterrain05
********************************************/

/*******************************************
start  ogfxterrain06
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain06_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain06.png")
}

spriteset (spriteset_ogfxterrain06_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain06_SNOW.png")
}

spriteset (spriteset_ogfxterrain06_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain06.png")
}

spriteset (spriteset_ogfxterrain06_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain06_SNOW.png")
}

spriteset (spriteset_ogfxterrain06_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain06.png")
}

spriteset (spriteset_ogfxterrain06_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain06_SNOW.png")
}

spriteset (spriteset_ogfxterrain06_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain06.png")
}

spriteset (spriteset_ogfxterrain06_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain06_SNOW.png")
}

spriteset (spriteset_ogfxterrain06_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_ogfxterrain06_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ogfxterrain06_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain06_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain06_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain06_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain06_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain06_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_ogfxterrain06_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_ogfxterrain06_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain06_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain06_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain06_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain06_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

        childsprite {
                sprite: spriteset_ogfxterrain06_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain06_view, view) {
    1:  spritelayout_ogfxterrain06_b;
    2:  spritelayout_ogfxterrain06_c;
    3:  spritelayout_ogfxterrain06_d;
    spritelayout_ogfxterrain06_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain06_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain06_view;
}


spritelayout spritelayout_ogfxterrain06_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain06_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain06_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain06_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain06_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain06_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain06_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain06_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain06_purchase, view) {
    1:  spritelayout_ogfxterrain06_2_purchase;
    2:  spritelayout_ogfxterrain06_3_purchase;
    3:  spritelayout_ogfxterrain06_4_purchase;
    spritelayout_ogfxterrain06_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain06, view) {
1: string(STR_ogfxterrain06_purchase_view2);
2: string(STR_ogfxterrain06_purchase_view3);
3: string(STR_ogfxterrain06_purchase_view4);
default: string(STR_ogfxterrain06_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain06, 038) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain06_object;
        purchase: switch_ogfxterrain06_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain06;

     }
}

/*******************************************
END  ogfxterrain06
********************************************/

/*******************************************
start  ogfxterrain07
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain07_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain07.png")
}

spriteset (spriteset_ogfxterrain07_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain07_SNOW.png")
}

spriteset (spriteset_ogfxterrain07_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain07.png")
}

spriteset (spriteset_ogfxterrain07_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain07_SNOW.png")
}

spriteset (spriteset_ogfxterrain07_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain07.png")
}

spriteset (spriteset_ogfxterrain07_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain07_SNOW.png")
}

spriteset (spriteset_ogfxterrain07_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain07.png")
}

spriteset (spriteset_ogfxterrain07_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain07_SNOW.png")
}

spriteset (spriteset_ogfxterrain07_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_ogfxterrain07_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ogfxterrain07_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain07_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain07_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain07_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain07_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain07_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}


        childsprite {
                sprite: spriteset_ogfxterrain07_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

spritelayout spritelayout_ogfxterrain07_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain07_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain07_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain07_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain07_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain07_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain07_view, view) {
    1:  spritelayout_ogfxterrain07_b;
    2:  spritelayout_ogfxterrain07_c;
    3:  spritelayout_ogfxterrain07_d;
    spritelayout_ogfxterrain07_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain07_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain07_view;
}


spritelayout spritelayout_ogfxterrain07_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain07_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain07_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain07_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain07_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain07_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain07_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain07_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain07_purchase, view) {
    1:  spritelayout_ogfxterrain07_2_purchase;
    2:  spritelayout_ogfxterrain07_3_purchase;
    3:  spritelayout_ogfxterrain07_4_purchase;
    spritelayout_ogfxterrain07_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain07, view) {
1: string(STR_ogfxterrain07_purchase_view2);
2: string(STR_ogfxterrain07_purchase_view3);
3: string(STR_ogfxterrain07_purchase_view4);
default: string(STR_ogfxterrain07_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain07, 039) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain07);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain07_object;
        purchase: switch_ogfxterrain07_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain07;

     }
}

/*******************************************
END  ogfxterrain07
********************************************/

/*******************************************
start  ogfxterrain08
********************************************/


//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ogfxterrain08_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain08.png")
}

spriteset (spriteset_ogfxterrain08_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/ogfxterrain08_SNOW.png")
}

spriteset (spriteset_ogfxterrain08_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain08.png")
}

spriteset (spriteset_ogfxterrain08_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/ogfxterrain08_SNOW.png")
}

spriteset (spriteset_ogfxterrain08_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain08.png")
}

spriteset (spriteset_ogfxterrain08_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/ogfxterrain08_SNOW.png")
}

spriteset (spriteset_ogfxterrain08_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain08.png")
}

spriteset (spriteset_ogfxterrain08_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/ogfxterrain08_SNOW.png")
}

spriteset (spriteset_ogfxterrain08_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_ogfxterrain08_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ogfxterrain08_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_ogfxterrain08_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain08_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain08_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }


}

//View_b


spritelayout spritelayout_ogfxterrain08_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain08_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

 
        childsprite {
                sprite: spriteset_ogfxterrain08_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain08_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_ogfxterrain08_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}



        childsprite {
                sprite: spriteset_ogfxterrain08_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

spritelayout spritelayout_ogfxterrain08_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_ogfxterrain08_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}


        childsprite {
                sprite: spriteset_ogfxterrain08_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }



}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain08_view, view) {
    1:  spritelayout_ogfxterrain08_b;
    2:  spritelayout_ogfxterrain08_c;
    3:  spritelayout_ogfxterrain08_d;
    spritelayout_ogfxterrain08_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain08_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ogfxterrain08_view;
}


spritelayout spritelayout_ogfxterrain08_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain08_PURCHASE(0);
	}
}

spritelayout spritelayout_ogfxterrain08_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain08_PURCHASE(1);
	}
}

spritelayout spritelayout_ogfxterrain08_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain08_PURCHASE(2);
	}
}

spritelayout spritelayout_ogfxterrain08_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_ogfxterrain08_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ogfxterrain08_purchase, view) {
    1:  spritelayout_ogfxterrain08_2_purchase;
    2:  spritelayout_ogfxterrain08_3_purchase;
    3:  spritelayout_ogfxterrain08_4_purchase;
    spritelayout_ogfxterrain08_1_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_ogfxterrain08, view) {
1: string(STR_ogfxterrain08_purchase_view2);
2: string(STR_ogfxterrain08_purchase_view3);
3: string(STR_ogfxterrain08_purchase_view4);
default: string(STR_ogfxterrain08_purchase_view1);
}


item (FEAT_OBJECTS, ogfxterrain08, 040) {
    property {
        class: "AZOT";
        classname: string(STR_AZOT);
        name: string(STR_ogfxterrain08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ogfxterrain08_object;
        purchase: switch_ogfxterrain08_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);
        additional_text: switch_add_text_ogfxterrain08;

     }
}

/*******************************************
END  ogfxterrain08
********************************************/

/*
START  CoastalOverlaps01
*/

template template_overlapsOC(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

/*******************************
START CoastalOverlaps01
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps01) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps01.png")
}

spriteset (spriteset_CoastalOverlaps01_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps01.png")
}

spriteset (spriteset_CoastalOverlaps01_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps01.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalOverlaps01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalOverlaps01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps01_view, view) {
    1:  spritelayout_CoastalOverlaps01_2;
    2:  spritelayout_CoastalOverlaps01_3;
    3:  spritelayout_CoastalOverlaps01_4;
    spritelayout_CoastalOverlaps01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps01_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps01_purchase, view) {
    1:  spritelayout_CoastalOverlaps01_2_purchase;
    2:  spritelayout_CoastalOverlaps01_3_purchase;
    3:  spritelayout_CoastalOverlaps01_4_purchase;
    spritelayout_CoastalOverlaps01_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps01, 041) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps01_object;
        purchase: switch_CoastalOverlaps01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps01
********************************/

/*
START  CoastalOverlaps02
*/

/*******************************
START CoastalOverlaps02
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps02) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps02.png")
}

spriteset (spriteset_CoastalOverlaps02_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps02.png")
}

spriteset (spriteset_CoastalOverlaps02_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalOverlaps02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalOverlaps02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps02_view, view) {
    1:  spritelayout_CoastalOverlaps02_2;
    2:  spritelayout_CoastalOverlaps02_3;
    3:  spritelayout_CoastalOverlaps02_4;
    spritelayout_CoastalOverlaps02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps02_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps02_purchase, view) {
    1:  spritelayout_CoastalOverlaps02_2_purchase;
    2:  spritelayout_CoastalOverlaps02_3_purchase;
    3:  spritelayout_CoastalOverlaps02_4_purchase;
    spritelayout_CoastalOverlaps02_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps02, 042) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps02_object;
        purchase: switch_CoastalOverlaps02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps02
********************************/

/*
START  CoastalOverlaps03
*/

/*******************************
START CoastalOverlaps03
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps03) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps03.png")
}

spriteset (spriteset_CoastalOverlaps03_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps03.png")
}

spriteset (spriteset_CoastalOverlaps03_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps03.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalOverlaps03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalOverlaps03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps03_view, view) {
    1:  spritelayout_CoastalOverlaps03_2;
    2:  spritelayout_CoastalOverlaps03_3;
    3:  spritelayout_CoastalOverlaps03_4;
    spritelayout_CoastalOverlaps03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps03_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps03_purchase, view) {
    1:  spritelayout_CoastalOverlaps03_2_purchase;
    2:  spritelayout_CoastalOverlaps03_3_purchase;
    3:  spritelayout_CoastalOverlaps03_4_purchase;
    spritelayout_CoastalOverlaps03_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps03, 043) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps03_object;
        purchase: switch_CoastalOverlaps03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps03
********************************/

/*
START  CoastalOverlaps04
*/

/*******************************
START CoastalOverlaps04
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps04) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps04.png")
}

spriteset (spriteset_CoastalOverlaps04_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps04.png")
}

spriteset (spriteset_CoastalOverlaps04_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalOverlaps04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalOverlaps04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps04_view, view) {
    1:  spritelayout_CoastalOverlaps04_2;
    2:  spritelayout_CoastalOverlaps04_3;
    3:  spritelayout_CoastalOverlaps04_4;
    spritelayout_CoastalOverlaps04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps04_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps04_purchase, view) {
    1:  spritelayout_CoastalOverlaps04_2_purchase;
    2:  spritelayout_CoastalOverlaps04_3_purchase;
    3:  spritelayout_CoastalOverlaps04_4_purchase;
    spritelayout_CoastalOverlaps04_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps04, 044) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps04_object;
        purchase: switch_CoastalOverlaps04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps04
********************************/

/*
START  CoastalOverlaps05
*/

/*******************************
START CoastalOverlaps05
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps05) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps05.png")
}

spriteset (spriteset_CoastalOverlaps05_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps05.png")
}

spriteset (spriteset_CoastalOverlaps05_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps05.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps05_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps05(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps05_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps05_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps05_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps05_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps05(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps05_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps05_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps05_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps05_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps05(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps05_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps05_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps05_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps05_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps05(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalOverlaps05_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalOverlaps05_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps05_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps05_view, view) {
    1:  spritelayout_CoastalOverlaps05_2;
    2:  spritelayout_CoastalOverlaps05_3;
    3:  spritelayout_CoastalOverlaps05_4;
    spritelayout_CoastalOverlaps05_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps05_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps05_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps05_purchase, view) {
    1:  spritelayout_CoastalOverlaps05_2_purchase;
    2:  spritelayout_CoastalOverlaps05_3_purchase;
    3:  spritelayout_CoastalOverlaps05_4_purchase;
    spritelayout_CoastalOverlaps05_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps05, 045) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps05_object;
        purchase: switch_CoastalOverlaps05_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps05
********************************/

/*
START  CoastalOverlaps06
*/

/*******************************
START CoastalOverlaps06
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps06) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps06.png")
}

spriteset (spriteset_CoastalOverlaps06_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps06.png")
}

spriteset (spriteset_CoastalOverlaps06_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps06.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps06_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps06(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps06_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalOverlaps06_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps06_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps06_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps06(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_CoastalOverlaps06_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalOverlaps06_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps06_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps06_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps06(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_CoastalOverlaps06_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalOverlaps06_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps06_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps06_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps06(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_CoastalOverlaps06_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalOverlaps06_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps06_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps06_view, view) {
    1:  spritelayout_CoastalOverlaps06_2;
    2:  spritelayout_CoastalOverlaps06_3;
    3:  spritelayout_CoastalOverlaps06_4;
    spritelayout_CoastalOverlaps06_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps06_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps06_purchase, view) {
    1:  spritelayout_CoastalOverlaps06_2_purchase;
    2:  spritelayout_CoastalOverlaps06_3_purchase;
    3:  spritelayout_CoastalOverlaps06_4_purchase;
    spritelayout_CoastalOverlaps06_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps06, 046) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps06_object;
        purchase: switch_CoastalOverlaps06_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps06
********************************/

/*******************************
START CoastalOverlaps07
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps07) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps07.png")
}

spriteset (spriteset_CoastalOverlaps07_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps07.png")
}

spriteset (spriteset_CoastalOverlaps07_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps07.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps07_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps07(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps07_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps07_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps07_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps07_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps07(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps07_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps07_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps07_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps07_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps07(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps07_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps07_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps07_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps07_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps07(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalOverlaps07_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalOverlaps07_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps07_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps07_view, view) {
    1:  spritelayout_CoastalOverlaps07_2;
    2:  spritelayout_CoastalOverlaps07_3;
    3:  spritelayout_CoastalOverlaps07_4;
    spritelayout_CoastalOverlaps07_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps07_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps07_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps07_purchase, view) {
    1:  spritelayout_CoastalOverlaps07_2_purchase;
    2:  spritelayout_CoastalOverlaps07_3_purchase;
    3:  spritelayout_CoastalOverlaps07_4_purchase;
    spritelayout_CoastalOverlaps07_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps07, 054) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps07);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps07_object;
        purchase: switch_CoastalOverlaps07_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps07
********************************/

/*
START  CoastalOverlaps08
*/

/*******************************
START CoastalOverlaps08
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalOverlaps08) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps08.png")
}

spriteset (spriteset_CoastalOverlaps08_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps08.png")
}

spriteset (spriteset_CoastalOverlaps08_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalOverlaps08.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalOverlaps08_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps08(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps08_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps08_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps08_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalOverlaps08_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps08(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps08_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps08_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps08_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalOverlaps08_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps08(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalOverlaps08_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalOverlaps08_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps08_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalOverlaps08_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalOverlaps08(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalOverlaps08_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalOverlaps08_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalOverlaps08_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps08_view, view) {
    1:  spritelayout_CoastalOverlaps08_2;
    2:  spritelayout_CoastalOverlaps08_3;
    3:  spritelayout_CoastalOverlaps08_4;
    spritelayout_CoastalOverlaps08_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps08_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalOverlaps08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalOverlaps08_purchase, view) {
    1:  spritelayout_CoastalOverlaps08_2_purchase;
    2:  spritelayout_CoastalOverlaps08_3_purchase;
    3:  spritelayout_CoastalOverlaps08_4_purchase;
    spritelayout_CoastalOverlaps08_1_purchase;
}

item (FEAT_OBJECTS, CoastalOverlaps08, 055) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalOverlaps08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalOverlaps08_object;
        purchase: switch_CoastalOverlaps08_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalOverlaps08
********************************/

/*
START  RiverOverlaps01
*/

/*******************************
START RiverOverlaps01
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps01) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps01.png")
}

spriteset (spriteset_RiverOverlaps01_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps01.png")
}

spriteset (spriteset_RiverOverlaps01_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps01.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverOverlaps01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverOverlaps01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps01_view, view) {
    1:  spritelayout_RiverOverlaps01_2;
    2:  spritelayout_RiverOverlaps01_3;
    3:  spritelayout_RiverOverlaps01_4;
    spritelayout_RiverOverlaps01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps01_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps01_purchase, view) {
    1:  spritelayout_RiverOverlaps01_2_purchase;
    2:  spritelayout_RiverOverlaps01_3_purchase;
    3:  spritelayout_RiverOverlaps01_4_purchase;
    spritelayout_RiverOverlaps01_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps01, 047) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps01_object;
        purchase: switch_RiverOverlaps01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps01
********************************/

/*
START  RiverOverlaps02
*/

/*******************************
START RiverOverlaps02
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps02) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps02.png")
}

spriteset (spriteset_RiverOverlaps02_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps02.png")
}

spriteset (spriteset_RiverOverlaps02_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverOverlaps02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverOverlaps02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps02_view, view) {
    1:  spritelayout_RiverOverlaps02_2;
    2:  spritelayout_RiverOverlaps02_3;
    3:  spritelayout_RiverOverlaps02_4;
    spritelayout_RiverOverlaps02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps02_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps02_purchase, view) {
    1:  spritelayout_RiverOverlaps02_2_purchase;
    2:  spritelayout_RiverOverlaps02_3_purchase;
    3:  spritelayout_RiverOverlaps02_4_purchase;
    spritelayout_RiverOverlaps02_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps02, 048) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps02_object;
        purchase: switch_RiverOverlaps02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps02
********************************/

/*
START  RiverOverlaps03
*/

/*******************************
START RiverOverlaps03
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps03) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps03.png")
}

spriteset (spriteset_RiverOverlaps03_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps03.png")
}

spriteset (spriteset_RiverOverlaps03_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps03.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverOverlaps03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverOverlaps03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps03_view, view) {
    1:  spritelayout_RiverOverlaps03_2;
    2:  spritelayout_RiverOverlaps03_3;
    3:  spritelayout_RiverOverlaps03_4;
    spritelayout_RiverOverlaps03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps03_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps03_purchase, view) {
    1:  spritelayout_RiverOverlaps03_2_purchase;
    2:  spritelayout_RiverOverlaps03_3_purchase;
    3:  spritelayout_RiverOverlaps03_4_purchase;
    spritelayout_RiverOverlaps03_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps03, 049) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps03_object;
        purchase: switch_RiverOverlaps03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps03
********************************/

/*
START  RiverOverlaps04
*/

/*******************************
START RiverOverlaps04
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps04) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps04.png")
}

spriteset (spriteset_RiverOverlaps04_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps04.png")
}

spriteset (spriteset_RiverOverlaps04_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverOverlaps04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverOverlaps04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps04_view, view) {
    1:  spritelayout_RiverOverlaps04_2;
    2:  spritelayout_RiverOverlaps04_3;
    3:  spritelayout_RiverOverlaps04_4;
    spritelayout_RiverOverlaps04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps04_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps04_purchase, view) {
    1:  spritelayout_RiverOverlaps04_2_purchase;
    2:  spritelayout_RiverOverlaps04_3_purchase;
    3:  spritelayout_RiverOverlaps04_4_purchase;
    spritelayout_RiverOverlaps04_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps04, 050) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps04_object;
        purchase: switch_RiverOverlaps04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps04
********************************/

/*
START  RiverOverlaps05
*/

/*******************************
START RiverOverlaps05
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps05) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps05.png")
}

spriteset (spriteset_RiverOverlaps05_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps05.png")
}

spriteset (spriteset_RiverOverlaps05_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps05.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps05_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps05(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps05_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps05_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps05_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps05_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps05(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps05_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps05_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps05_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps05_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps05(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps05_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps05_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps05_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps05_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps05(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverOverlaps05_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverOverlaps05_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps05_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps05_view, view) {
    1:  spritelayout_RiverOverlaps05_2;
    2:  spritelayout_RiverOverlaps05_3;
    3:  spritelayout_RiverOverlaps05_4;
    spritelayout_RiverOverlaps05_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps05_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps05_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps05_purchase, view) {
    1:  spritelayout_RiverOverlaps05_2_purchase;
    2:  spritelayout_RiverOverlaps05_3_purchase;
    3:  spritelayout_RiverOverlaps05_4_purchase;
    spritelayout_RiverOverlaps05_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps05, 051) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps05_object;
        purchase: switch_RiverOverlaps05_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps05
********************************/

/*
START  RiverOverlaps06
*/

/*******************************
START RiverOverlaps06
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps06) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps06.png")
}

spriteset (spriteset_RiverOverlaps06_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps06.png")
}

spriteset (spriteset_RiverOverlaps06_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps06.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps06_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps06(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps06_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverOverlaps06_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps06_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps06_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps06(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_RiverOverlaps06_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverOverlaps06_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps06_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps06_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps06(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_RiverOverlaps06_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverOverlaps06_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps06_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps06_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps06(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_RiverOverlaps06_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverOverlaps06_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps06_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps06_view, view) {
    1:  spritelayout_RiverOverlaps06_2;
    2:  spritelayout_RiverOverlaps06_3;
    3:  spritelayout_RiverOverlaps06_4;
    spritelayout_RiverOverlaps06_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps06_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps06_purchase, view) {
    1:  spritelayout_RiverOverlaps06_2_purchase;
    2:  spritelayout_RiverOverlaps06_3_purchase;
    3:  spritelayout_RiverOverlaps06_4_purchase;
    spritelayout_RiverOverlaps06_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps06, 052) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps06_object;
        purchase: switch_RiverOverlaps06_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps06
********************************/

/*******************************
START RiverOverlaps07
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps07) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps07.png")
}

spriteset (spriteset_RiverOverlaps07_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps07.png")
}

spriteset (spriteset_RiverOverlaps07_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps07.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps07_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps07(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps07_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps07_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps07_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps07_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps07(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps07_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps07_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps07_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps07_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps07(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps07_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps07_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps07_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps07_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps07(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverOverlaps07_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverOverlaps07_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps07_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps07_view, view) {
    1:  spritelayout_RiverOverlaps07_2;
    2:  spritelayout_RiverOverlaps07_3;
    3:  spritelayout_RiverOverlaps07_4;
    spritelayout_RiverOverlaps07_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps07_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps07_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps07_purchase, view) {
    1:  spritelayout_RiverOverlaps07_2_purchase;
    2:  spritelayout_RiverOverlaps07_3_purchase;
    3:  spritelayout_RiverOverlaps07_4_purchase;
    spritelayout_RiverOverlaps07_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps07, 056) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps07);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps07_object;
        purchase: switch_RiverOverlaps07_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps07
********************************/

/*
START  RiverOverlaps08
*/

/*******************************
START RiverOverlaps08
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverOverlaps08) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps08.png")
}

spriteset (spriteset_RiverOverlaps08_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps08.png")
}

spriteset (spriteset_RiverOverlaps08_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverOverlaps08.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverOverlaps08_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps08(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps08_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps08_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps08_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverOverlaps08_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps08(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps08_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps08_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps08_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverOverlaps08_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps08(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverOverlaps08_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverOverlaps08_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps08_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverOverlaps08_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverOverlaps08(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverOverlaps08_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverOverlaps08_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverOverlaps08_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps08_view, view) {
    1:  spritelayout_RiverOverlaps08_2;
    2:  spritelayout_RiverOverlaps08_3;
    3:  spritelayout_RiverOverlaps08_4;
    spritelayout_RiverOverlaps08_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps08_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverOverlaps08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverOverlaps08_purchase, view) {
    1:  spritelayout_RiverOverlaps08_2_purchase;
    2:  spritelayout_RiverOverlaps08_3_purchase;
    3:  spritelayout_RiverOverlaps08_4_purchase;
    spritelayout_RiverOverlaps08_1_purchase;
}

item (FEAT_OBJECTS, RiverOverlaps08, 057) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverOverlaps08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverOverlaps08_object;
        purchase: switch_RiverOverlaps08_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverOverlaps08
********************************/

/* OceanAndLake */


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_OceanAndLake) {
    template_building_low(0,0,"gfx/OceanAndLake.png")
}

spriteset (spriteset_OceanAndLake_SNOW) {
    template_building_low(0,0,"gfx/OceanAndLake.png")
}

spriteset (spriteset_OceanAndLake_PURCHASE) {
    template_building_low(0,0,"gfx/OceanAndLake.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_OceanAndLake_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_OceanAndLake(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_OceanAndLake_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_OceanAndLake_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_OceanAndLake_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_OceanAndLake_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_OceanAndLake(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_OceanAndLake_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_OceanAndLake_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_OceanAndLake_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_OceanAndLake_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_OceanAndLake(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_OceanAndLake_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_OceanAndLake_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_OceanAndLake_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_OceanAndLake_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_OceanAndLake(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_OceanAndLake_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_OceanAndLake_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_OceanAndLake_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_OceanAndLake_view, view) {
    1:  spritelayout_OceanAndLake_2;
    2:  spritelayout_OceanAndLake_3;
    3:  spritelayout_OceanAndLake_4;
    spritelayout_OceanAndLake_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_OceanAndLake_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
//  STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_OceanAndLake_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_OceanAndLake_purchase, view) {
    1:  spritelayout_OceanAndLake_2_purchase;
    2:  spritelayout_OceanAndLake_3_purchase;
    3:  spritelayout_OceanAndLake_4_purchase;
    spritelayout_OceanAndLake_1_purchase;
}


item (FEAT_OBJECTS, OceanAndLake, 053) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_OceanAndLake);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 1;
        remove_cost_multiplier: 4;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ON_WATER,  OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_OceanAndLake_object;
        purchase: switch_OceanAndLake_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
OceanAndLake
****************************************************/

/*******************************
START CoastalCalm01
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm01) {
    template_overlapsOC(0,0,"gfx/CoastalCalm01.png")
}

spriteset (spriteset_CoastalCalm01_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm01.png")
}

spriteset (spriteset_CoastalCalm01_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm01.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalCalm01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalCalm01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm01_view, view) {
    1:  spritelayout_CoastalCalm01_2;
    2:  spritelayout_CoastalCalm01_3;
    3:  spritelayout_CoastalCalm01_4;
    spritelayout_CoastalCalm01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm01_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm01_purchase, view) {
    1:  spritelayout_CoastalCalm01_2_purchase;
    2:  spritelayout_CoastalCalm01_3_purchase;
    3:  spritelayout_CoastalCalm01_4_purchase;
    spritelayout_CoastalCalm01_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm01, 058) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm01_object;
        purchase: switch_CoastalCalm01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm01
********************************/

/*
START  CoastalCalm02
*/

/*******************************
START CoastalCalm02
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm02) {
    template_overlapsOC(0,0,"gfx/CoastalCalm02.png")
}

spriteset (spriteset_CoastalCalm02_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm02.png")
}

spriteset (spriteset_CoastalCalm02_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalCalm02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalCalm02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm02_view, view) {
    1:  spritelayout_CoastalCalm02_2;
    2:  spritelayout_CoastalCalm02_3;
    3:  spritelayout_CoastalCalm02_4;
    spritelayout_CoastalCalm02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm02_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm02_purchase, view) {
    1:  spritelayout_CoastalCalm02_2_purchase;
    2:  spritelayout_CoastalCalm02_3_purchase;
    3:  spritelayout_CoastalCalm02_4_purchase;
    spritelayout_CoastalCalm02_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm02, 059) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm02_object;
        purchase: switch_CoastalCalm02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm02
********************************/

/*
START  CoastalCalm03
*/

/*******************************
START CoastalCalm03
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm03) {
    template_overlapsOC(0,0,"gfx/CoastalCalm03.png")
}

spriteset (spriteset_CoastalCalm03_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm03.png")
}

spriteset (spriteset_CoastalCalm03_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm03.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalCalm03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalCalm03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm03_view, view) {
    1:  spritelayout_CoastalCalm03_2;
    2:  spritelayout_CoastalCalm03_3;
    3:  spritelayout_CoastalCalm03_4;
    spritelayout_CoastalCalm03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm03_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm03_purchase, view) {
    1:  spritelayout_CoastalCalm03_2_purchase;
    2:  spritelayout_CoastalCalm03_3_purchase;
    3:  spritelayout_CoastalCalm03_4_purchase;
    spritelayout_CoastalCalm03_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm03, 060) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm03_object;
        purchase: switch_CoastalCalm03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm03
********************************/

/*
START  CoastalCalm04
*/

/*******************************
START CoastalCalm04
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm04) {
    template_overlapsOC(0,0,"gfx/CoastalCalm04.png")
}

spriteset (spriteset_CoastalCalm04_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm04.png")
}

spriteset (spriteset_CoastalCalm04_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalCalm04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalCalm04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm04_view, view) {
    1:  spritelayout_CoastalCalm04_2;
    2:  spritelayout_CoastalCalm04_3;
    3:  spritelayout_CoastalCalm04_4;
    spritelayout_CoastalCalm04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm04_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm04_purchase, view) {
    1:  spritelayout_CoastalCalm04_2_purchase;
    2:  spritelayout_CoastalCalm04_3_purchase;
    3:  spritelayout_CoastalCalm04_4_purchase;
    spritelayout_CoastalCalm04_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm04, 061) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm04_object;
        purchase: switch_CoastalCalm04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm04
********************************/

/*
START  CoastalCalm05
*/

/*******************************
START CoastalCalm05
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm05) {
    template_overlapsOC(0,0,"gfx/CoastalCalm05.png")
}

spriteset (spriteset_CoastalCalm05_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm05.png")
}

spriteset (spriteset_CoastalCalm05_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm05.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm05_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm05(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm05_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm05_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm05_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm05_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm05(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm05_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm05_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm05_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm05_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm05(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm05_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm05_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm05_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm05_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm05(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalCalm05_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalCalm05_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm05_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm05_view, view) {
    1:  spritelayout_CoastalCalm05_2;
    2:  spritelayout_CoastalCalm05_3;
    3:  spritelayout_CoastalCalm05_4;
    spritelayout_CoastalCalm05_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm05_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm05_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm05_purchase, view) {
    1:  spritelayout_CoastalCalm05_2_purchase;
    2:  spritelayout_CoastalCalm05_3_purchase;
    3:  spritelayout_CoastalCalm05_4_purchase;
    spritelayout_CoastalCalm05_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm05, 062) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm05_object;
        purchase: switch_CoastalCalm05_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm05
********************************/

/*
START  CoastalCalm06
*/

/*******************************
START CoastalCalm06
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm06) {
    template_overlapsOC(0,0,"gfx/CoastalCalm06.png")
}

spriteset (spriteset_CoastalCalm06_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm06.png")
}

spriteset (spriteset_CoastalCalm06_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm06.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm06_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm06(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm06_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalCalm06_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm06_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm06_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm06(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_CoastalCalm06_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalCalm06_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm06_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm06_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm06(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_CoastalCalm06_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalCalm06_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm06_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm06_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm06(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_CoastalCalm06_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_CoastalCalm06_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm06_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm06_view, view) {
    1:  spritelayout_CoastalCalm06_2;
    2:  spritelayout_CoastalCalm06_3;
    3:  spritelayout_CoastalCalm06_4;
    spritelayout_CoastalCalm06_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm06_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm06_purchase, view) {
    1:  spritelayout_CoastalCalm06_2_purchase;
    2:  spritelayout_CoastalCalm06_3_purchase;
    3:  spritelayout_CoastalCalm06_4_purchase;
    spritelayout_CoastalCalm06_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm06, 063) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm06_object;
        purchase: switch_CoastalCalm06_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm06
********************************/

/*******************************
START CoastalCalm07
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm07) {
    template_overlapsOC(0,0,"gfx/CoastalCalm07.png")
}

spriteset (spriteset_CoastalCalm07_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm07.png")
}

spriteset (spriteset_CoastalCalm07_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm07.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm07_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm07(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm07_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm07_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm07_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm07_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm07(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm07_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm07_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm07_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm07_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm07(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm07_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm07_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm07_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm07_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm07(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalCalm07_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalCalm07_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm07_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm07_view, view) {
    1:  spritelayout_CoastalCalm07_2;
    2:  spritelayout_CoastalCalm07_3;
    3:  spritelayout_CoastalCalm07_4;
    spritelayout_CoastalCalm07_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm07_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm07_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm07_purchase, view) {
    1:  spritelayout_CoastalCalm07_2_purchase;
    2:  spritelayout_CoastalCalm07_3_purchase;
    3:  spritelayout_CoastalCalm07_4_purchase;
    spritelayout_CoastalCalm07_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm07, 064) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm07);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm07_object;
        purchase: switch_CoastalCalm07_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm07
********************************/

/*
START  CoastalCalm08
*/

/*******************************
START CoastalCalm08
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_CoastalCalm08) {
    template_overlapsOC(0,0,"gfx/CoastalCalm08.png")
}

spriteset (spriteset_CoastalCalm08_SNOW) {
    template_overlapsOC(0,0,"gfx/CoastalCalm08.png")
}

spriteset (spriteset_CoastalCalm08_PURCHASE) {
    template_overlapsOC(0,0,"gfx/CoastalCalm08.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_CoastalCalm08_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm08(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm08_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm08_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm08_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_CoastalCalm08_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm08(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm08_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm08_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm08_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_CoastalCalm08_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm08(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_CoastalCalm08_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_CoastalCalm08_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm08_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_CoastalCalm08_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_CoastalCalm08(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_CoastalCalm08_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_CoastalCalm08_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_CoastalCalm08_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm08_view, view) {
    1:  spritelayout_CoastalCalm08_2;
    2:  spritelayout_CoastalCalm08_3;
    3:  spritelayout_CoastalCalm08_4;
    spritelayout_CoastalCalm08_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm08_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CoastalCalm08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_CoastalCalm08_purchase, view) {
    1:  spritelayout_CoastalCalm08_2_purchase;
    2:  spritelayout_CoastalCalm08_3_purchase;
    3:  spritelayout_CoastalCalm08_4_purchase;
    spritelayout_CoastalCalm08_1_purchase;
}

item (FEAT_OBJECTS, CoastalCalm08, 065) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_CoastalCalm08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_CoastalCalm08_object;
        purchase: switch_CoastalCalm08_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  CoastalCalm08
********************************/

/*******************************
START RiverRough01
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough01) {
    template_overlapsOC(0,0,"gfx/RiverRough01.png")
}

spriteset (spriteset_RiverRough01_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough01.png")
}

spriteset (spriteset_RiverRough01_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough01.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough01_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough01(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough01_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough01_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough01_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough01_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough01(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough01_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough01_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough01_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough01_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough01(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough01_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough01_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough01_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough01_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough01(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverRough01_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverRough01_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough01_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough01_view, view) {
    1:  spritelayout_RiverRough01_2;
    2:  spritelayout_RiverRough01_3;
    3:  spritelayout_RiverRough01_4;
    spritelayout_RiverRough01_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough01_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough01_purchase, view) {
    1:  spritelayout_RiverRough01_2_purchase;
    2:  spritelayout_RiverRough01_3_purchase;
    3:  spritelayout_RiverRough01_4_purchase;
    spritelayout_RiverRough01_1_purchase;
}

item (FEAT_OBJECTS, RiverRough01, 066) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough01_object;
        purchase: switch_RiverRough01_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough01
********************************/

/*
START  RiverRough02
*/

/*******************************
START RiverRough02
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough02) {
    template_overlapsOC(0,0,"gfx/RiverRough02.png")
}

spriteset (spriteset_RiverRough02_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough02.png")
}

spriteset (spriteset_RiverRough02_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverRough02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverRough02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough02_view, view) {
    1:  spritelayout_RiverRough02_2;
    2:  spritelayout_RiverRough02_3;
    3:  spritelayout_RiverRough02_4;
    spritelayout_RiverRough02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough02_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough02_purchase, view) {
    1:  spritelayout_RiverRough02_2_purchase;
    2:  spritelayout_RiverRough02_3_purchase;
    3:  spritelayout_RiverRough02_4_purchase;
    spritelayout_RiverRough02_1_purchase;
}

item (FEAT_OBJECTS, RiverRough02, 067) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough02_object;
        purchase: switch_RiverRough02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough02
********************************/

/*
START  RiverRough03
*/

/*******************************
START RiverRough03
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough03) {
    template_overlapsOC(0,0,"gfx/RiverRough03.png")
}

spriteset (spriteset_RiverRough03_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough03.png")
}

spriteset (spriteset_RiverRough03_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough03.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverRough03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverRough03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough03_view, view) {
    1:  spritelayout_RiverRough03_2;
    2:  spritelayout_RiverRough03_3;
    3:  spritelayout_RiverRough03_4;
    spritelayout_RiverRough03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough03_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough03_purchase, view) {
    1:  spritelayout_RiverRough03_2_purchase;
    2:  spritelayout_RiverRough03_3_purchase;
    3:  spritelayout_RiverRough03_4_purchase;
    spritelayout_RiverRough03_1_purchase;
}

item (FEAT_OBJECTS, RiverRough03, 068) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough03_object;
        purchase: switch_RiverRough03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough03
********************************/

/*
START  RiverRough04
*/

/*******************************
START RiverRough04
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough04) {
    template_overlapsOC(0,0,"gfx/RiverRough04.png")
}

spriteset (spriteset_RiverRough04_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough04.png")
}

spriteset (spriteset_RiverRough04_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverRough04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverRough04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough04_view, view) {
    1:  spritelayout_RiverRough04_2;
    2:  spritelayout_RiverRough04_3;
    3:  spritelayout_RiverRough04_4;
    spritelayout_RiverRough04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough04_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough04_purchase, view) {
    1:  spritelayout_RiverRough04_2_purchase;
    2:  spritelayout_RiverRough04_3_purchase;
    3:  spritelayout_RiverRough04_4_purchase;
    spritelayout_RiverRough04_1_purchase;
}

item (FEAT_OBJECTS, RiverRough04, 069) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough04_object;
        purchase: switch_RiverRough04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough04
********************************/

/*
START  RiverRough05
*/

/*******************************
START RiverRough05
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough05) {
    template_overlapsOC(0,0,"gfx/RiverRough05.png")
}

spriteset (spriteset_RiverRough05_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough05.png")
}

spriteset (spriteset_RiverRough05_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough05.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough05_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough05(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough05_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough05_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough05_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough05_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough05(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough05_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough05_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough05_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough05_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough05(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough05_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough05_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough05_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough05_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough05(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverRough05_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverRough05_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough05_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough05_view, view) {
    1:  spritelayout_RiverRough05_2;
    2:  spritelayout_RiverRough05_3;
    3:  spritelayout_RiverRough05_4;
    spritelayout_RiverRough05_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough05_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough05_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough05_purchase, view) {
    1:  spritelayout_RiverRough05_2_purchase;
    2:  spritelayout_RiverRough05_3_purchase;
    3:  spritelayout_RiverRough05_4_purchase;
    spritelayout_RiverRough05_1_purchase;
}

item (FEAT_OBJECTS, RiverRough05, 070) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough05_object;
        purchase: switch_RiverRough05_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough05
********************************/

/*
START  RiverRough06
*/

/*******************************
START RiverRough06
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough06) {
    template_overlapsOC(0,0,"gfx/RiverRough06.png")
}

spriteset (spriteset_RiverRough06_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough06.png")
}

spriteset (spriteset_RiverRough06_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough06.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough06_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough06(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough06_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverRough06_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough06_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough06_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough06(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_RiverRough06_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverRough06_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough06_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough06_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough06(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_RiverRough06_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverRough06_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough06_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough06_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough06(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

building {
        sprite: spriteset_RiverRough06_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_RiverRough06_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough06_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 8;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough06_view, view) {
    1:  spritelayout_RiverRough06_2;
    2:  spritelayout_RiverRough06_3;
    3:  spritelayout_RiverRough06_4;
    spritelayout_RiverRough06_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough06_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough06_purchase, view) {
    1:  spritelayout_RiverRough06_2_purchase;
    2:  spritelayout_RiverRough06_3_purchase;
    3:  spritelayout_RiverRough06_4_purchase;
    spritelayout_RiverRough06_1_purchase;
}

item (FEAT_OBJECTS, RiverRough06, 071) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough06_object;
        purchase: switch_RiverRough06_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough06
********************************/

/*******************************
START RiverRough07
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough07) {
    template_overlapsOC(0,0,"gfx/RiverRough07.png")
}

spriteset (spriteset_RiverRough07_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough07.png")
}

spriteset (spriteset_RiverRough07_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough07.png")
}


/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough07_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough07(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough07_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough07_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough07_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough07_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough07(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough07_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough07_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough07_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough07_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough07(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough07_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough07_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough07_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough07_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough07(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverRough07_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverRough07_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough07_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough07_view, view) {
    1:  spritelayout_RiverRough07_2;
    2:  spritelayout_RiverRough07_3;
    3:  spritelayout_RiverRough07_4;
    spritelayout_RiverRough07_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough07_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough07_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough07_purchase, view) {
    1:  spritelayout_RiverRough07_2_purchase;
    2:  spritelayout_RiverRough07_3_purchase;
    3:  spritelayout_RiverRough07_4_purchase;
    spritelayout_RiverRough07_1_purchase;
}

item (FEAT_OBJECTS, RiverRough07, 072) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough07);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough07_object;
        purchase: switch_RiverRough07_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough07
********************************/

/*
START  RiverRough08
*/

/*******************************
START RiverRough08
********************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RiverRough08) {
    template_overlapsOC(0,0,"gfx/RiverRough08.png")
}

spriteset (spriteset_RiverRough08_SNOW) {
    template_overlapsOC(0,0,"gfx/RiverRough08.png")
}

spriteset (spriteset_RiverRough08_PURCHASE) {
    template_overlapsOC(0,0,"gfx/RiverRough08.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_RiverRough08_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough08(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough08_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough08_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough08_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}



//Direction_2
spritelayout spritelayout_RiverRough08_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough08(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough08_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough08_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough08_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}

//Direction_3
spritelayout spritelayout_RiverRough08_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough08(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

building {
        sprite: spriteset_RiverRough08_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 16;
    }

}

spritelayout spritelayout_RiverRough08_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough08_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 16;
   }
}


//Direction_4
spritelayout spritelayout_RiverRough08_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_RiverRough08(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_RiverRough08_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_RiverRough08_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_RiverRough08_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_RiverRough08_view, view) {
    1:  spritelayout_RiverRough08_2;
    2:  spritelayout_RiverRough08_3;
    3:  spritelayout_RiverRough08_4;
    spritelayout_RiverRough08_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RiverRough08_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 255),
    STORE_TEMP((LOAD_TEMP(255) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(255) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RiverRough08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RiverRough08_purchase, view) {
    1:  spritelayout_RiverRough08_2_purchase;
    2:  spritelayout_RiverRough08_3_purchase;
    3:  spritelayout_RiverRough08_4_purchase;
    spritelayout_RiverRough08_1_purchase;
}

item (FEAT_OBJECTS, RiverRough08, 073) {
    property {
        class: "AZOC";
        classname: string(STR_AZOC);
        name: string(STR_RiverRough08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RiverRough08_object;
        purchase: switch_RiverRough08_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*******************************
END  RiverRough08
********************************/